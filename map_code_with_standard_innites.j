//===========================================================================
// 
// |c005ee569Дyэлянты 2.0|r
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Fri Dec 13 04:36:07 2024
//   Map Author: EneRumata
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    dialog                  udg_ChoosingMod            = null
    button                  udg_ChoosingModSingle      = null
    button                  udg_ChoosingModTeam        = null
    integer                 udg_ModNumber              = 0
    integer array           udg_CreepTower
    integer array           udg_WaveUnit1
    integer array           udg_WaveUnit2
    timer                   udg_TimerWave              = null
    timerdialog             udg_TimerWaveWindow        = null
    integer                 udg_Wave                   = 0
    integer array           udg_UnitCreepTipe
    integer array           udg_UnitCreepTipeTower
    integer array           udg_UnitCreepTipeCost
    integer array           udg_UnitCreepWhoSpawns
    integer                 udg_WCN                    = 0
    timer                   udg_CreepsTimer            = null
    integer array           udg_UnitCreepNum
    rect array              udg_PlayerSector
    force                   udg_PlayingPlayers         = null
    integer array           udg_WaveUnit2Num
    integer                 udg_int                    = 0
    boolean                 udg_BE                     = false
    group array             udg_PlayerCreepsGroup
    multiboarditem          udg_mbitem                 = null
    multiboard              udg_Multiboard             = null
    integer array           udg_Lives
    player array            udg_PlayerInPlaying
    integer                 udg_PlayersNumber          = 0
    unit array              udg_Throune
    integer array           udg_PlayerCreepsNum
    player                  udg_PlayerX                = null
    group                   udg_GroupX                 = null
    rect array              udg_PlayerSectorFight
    group array             udg_PlayerWarriorsGroup
    group array             udg_PlayerTowersGroup
    integer                 udg_IntegerX               = 0
    real                    udg_RealX                  = 0
    real                    udg_RealY                  = 0
    timer                   udg_TimerWin               = null
    boolean array           udg_BooleanPlay
    real array              udg_PlayerHomeLocX
    real array              udg_PlayerHomeLocY
    button                  udg_ChoosingModTDuels      = null
    leaderboard             udg_HandleBoard            = null
    player array            udg_PlayerUp
    integer array           udg_up
    unit                    udg_UnitX                  = null
    integer                 udg_TreeGhostNum           = 0
    unit array              udg_TreeGhost
    unit                    udg_Tree                   = null
    real                    udg_RealZ                  = 0
    unit                    udg_UnitY                  = null
    boolean                 udg_BooleanX               = false
    unit array              udg_PoisonU
    integer array           udg_PoisonN
    integer                 udg_PoisonC                = 0
    unit array              udg_ThrouneCaster
    unit array              udg_ThrouneUpgr
    group                   udg_WAUG                   = null
    group                   udg_GroupDmgTaken          = null
    integer                 udg_PJCnum                 = 0
    integer array           udg_PJCtime
    integer                 udg_PJnum                  = 0
    integer array           udg_PJtime
    unit array              udg_PJCunit
    unit array              udg_PJunit
    real array              udg_PJCx
    real array              udg_PJx
    real array              udg_PJCy
    real array              udg_PJy
    real array              udg_PJa
    group                   udg_Horses                 = null
    boolean                 udg_BR                     = false
    boolean                 udg_WaveGoing              = false
    unit array              udg_ElfEntWarrior
    unit array              udg_ElfEntTower
    integer                 udg_ElfEntNum              = 0
    group                   udg_DemonsGroup            = null
    timer array             udg_TCDT
    group                   udg_WardWDGroup            = null
    timer                   udg_DDT                    = null
    group                   udg_DDG                    = null
    playercolor array       udg_PlayerColor
    group                   udg_WolfGroup              = null
    integer array           udg_spdmgNOW
    integer array           udg_spspeedNOW
    group                   udg_Constructed            = null
    group                   udg_ConstructedTW          = null
    real array              udg_DuelHP
    integer                 udg_ElfElfNum              = 0
    unit array              udg_ElfElfTower
    unit array              udg_ElfElfWarrior
    integer array           udg_TMPN
    integer array           udg_UnitCreepNumCM
    group                   udg_EntGroupRage           = null
    group                   udg_GLC                    = null
    integer array           udg_UndeadPassive
    integer                 udg_UTN                    = 0
    integer array           udg_RaceNumber
    integer                 udg_ModNumberUnits         = 0
    dialog                  udg_ChoosingModUnits       = null
    button                  udg_ChoosingModUnitsRandomAlways = null
    button                  udg_ChoosingModUnitsNormal = null
    integer array           udg_CreepWarrior
    group                   udg_WBUG                   = null
    button                  udg_ChoosingModUnitsRandomOnly = null
    quest                   udg_ModUnitsQuest          = null
    questitem               udg_ModUnitsRItem          = null
    player                  udg_PlayerY                = null
    boolean array           udg_WaveGoingForPlayer
    group                   udg_GalvanGroup            = null
    integer array           udg_CreepCost
    button                  udg_ChoosingModSDuels      = null
    integer array           udg_UUL
    unit array              udg_UUT
    integer                 udg_UUN                    = 0
    boolean                 udg_ModCreeps              = false
    dialog                  udg_ChoosingModCreeps      = null
    button                  udg_ChoosingModCreepsTrue  = null
    button                  udg_ChoosingModCreepsFalse = null
    rect array              udg_PlayerSectorPeonsAll
    group                   udg_CastingRejGroup        = null
    group                   udg_GruntSpellGroup        = null
    unit array              udg_RezzakArmorU
    integer array           udg_RezzakArmorN
    integer                 udg_RezzakArmorC           = 0
    real array              udg_GoblPassMaxHP
    integer array           udg_WaveUnit1Num
    unit array              udg_BlueTurtleTower
    unit array              udg_BlueTurtleWarrior
    integer                 udg_BlueTurtleNum          = 0
    integer array           udg_WaveUnit3
    integer array           udg_WaveUnit3Num
    integer array           udg_WaveUnit4Num
    integer array           udg_WaveUnit4
    integer array           udg_WaveUnit6Num
    integer array           udg_WaveUnit5Num
    integer array           udg_WaveUnit6
    integer array           udg_WaveUnit5
    integer array           udg_WaveUnit8Num
    integer array           udg_WaveUnit7Num
    integer array           udg_WaveUnit8
    integer array           udg_WaveUnit7
    group array             udg_GroupForRemovetowersecond
    real array              udg_MultiboardUnitsGoldNow
    real array              udg_MultiboardUnitsGoldStart
    boolean array           udg_ReadyWorker
    real                    udg_WaveTimeMultiplier     = 0
    boolean array           udg_BooleanPlayForTA
    integer array           udg_UUL2
    boolean                 udg_BlockUdPass            = false
    group                   udg_MargolInviGroup        = null
    group                   udg_MarkyraBig             = null
    group                   udg_TurtleEatCasting       = null
    group                   udg_Ziclops                = null
    group                   udg_NagaSirenCasting       = null
    group                   udg_CastingUnhRageGroup    = null
    group                   udg_CastingUndSleepGroup   = null
    group                   udg_CastingUndhealGroup    = null
    boolean                 udg_GhoulDMGdeal           = false
    group                   udg_Gommunkuls             = null
    integer                 udg_MageNecroC             = 0
    unit array              udg_MageNecroU
    integer array           udg_MageNecroN
    group                   udg_KingOfTheDeath         = null
    group                   udg_ChumZomb               = null
    integer                 udg_ChumZombCreepsNum      = 0
    unit array              udg_ChumZombCreeps
    real array              udg_ChumZombCreepsHP
    group                   udg_Ghouls                 = null
    group                   udg_GolemiPloti            = null
    group                   udg_SuperGolemsEffect      = null
    group                   udg_ElfUnderRej            = null
    group                   udg_CheckToJump            = null
    integer array           udg_DriadPoisonN
    unit array              udg_DriadPoisonU
    integer                 udg_DriadPoisonC           = 0
    group                   udg_WolfGroupEating        = null
    group                   udg_WolfGroupEated         = null
    group                   udg_GroupBlades            = null
    group                   udg_arhangels              = null
    group                   udg_SHorses                = null
    group                   udg_tseliteli              = null
    group                   udg_MargolDaggerGroup      = null
    group                   udg_NagaMirmidon           = null
    integer                 udg_NagaZaklNum            = 0
    unit array              udg_NagaZaklCaster
    unit array              udg_NagaZaklTarget
    group                   udg_Koatles                = null
    group                   udg_Tornados               = null
    group                   udg_OceanAvatarTar         = null
    integer                 udg_OceanAvatarNum         = 0
    unit array              udg_OceanAvatarUnit
    real array              udg_OceanAvatarHP
    group                   udg_OceanAvatar            = null
    boolean                 udg_BR2                    = false
    unit array              udg_ThrouneWorker
    string array            udg_RaceNumName
    integer                 udg_TipsAndTricksNum       = 0
    boolean array           udg_TipsAndTricksPlBool
    string array            udg_TipsAndTricks
    questitem               udg_ModUnitsRItem2         = null
    group                   udg_VampireGroup           = null
    integer array           udg_PlayerSlotId
    player array            udg_PlayerSlotMass
    integer array           udg_PassChosenByPlayer
    group                   udg_CorruptedEarthDummy    = null
    integer                 udg_NagaBuildingNum        = 0
    unit array              udg_NagaBuildingU
    integer array           udg_NagaBuildingPC
    string array            udg_RaceIcon
    integer                 udg_PassChoseNum           = 0
    integer                 udg_ArcherNum              = 0
    integer                 udg_FootmenNum             = 0
    unit array              udg_FootmenMass
    unit array              udg_ArcherMass
    group                   udg_PeasantMiss            = null
    group                   udg_KodoGroup              = null
    group                   udg_CannibalOrc            = null
    group                   udg_CastingBloodlustGroup  = null
    group                   udg_CastingAcidbombGroup   = null
    group                   udg_CastingInvulGroup      = null
    integer                 udg_ElfUnseenNum           = 0
    integer array           udg_ElfUnseenTime
    unit array              udg_ElfUnseenUnit
    integer                 udg_OgreHitNum             = 0
    integer array           udg_OgreHitTime
    unit array              udg_OgreHitUnit
    real array              udg_OgreHitX
    real array              udg_OgreHitY
    playercolor array       udg_ColorN
    integer                 udg_FellHoundDebuffNum     = 0
    integer array           udg_FellHoundDebuffTime
    unit array              udg_FellHoundDebuffUnit
    group                   udg_Infernals              = null
    group                   udg_Vlastiteli             = null
    group                   udg_Dooms                  = null
    group                   udg_DoomsCasting           = null
    integer                 udg_TeleportStuffNum       = 0
    unit array              udg_TeleportStuffUnit
    integer array           udg_TeleportStuffTime
    integer                 udg_TeleportSaveNum        = 0
    unit array              udg_TeleportSaveUnit
    integer array           udg_TeleportSaveTime
    group                   udg_GroupY                 = null
    group                   udg_DoomTargets            = null
    integer                 udg_DoomTargetNum          = 0
    unit array              udg_DoomTargetUnit
    integer array           udg_DoomTargetTime
    integer                 udg_DemonSlowNum           = 0
    integer array           udg_DemonSlowTime
    unit array              udg_DemonSlowUnit
    group                   udg_FellHoundBig           = null
    group                   udg_FellHoundBigPrevious   = null
    group                   udg_VoidWalkerBig          = null
    group                   udg_VoidWalkerShade        = null
    group                   udg_CastingDemonShieldGroup = null
    integer                 udg_DemonShieldGroupNum    = 0
    unit array              udg_DemonShieldGroupUnit
    integer array           udg_DemonShieldGroupTime
    unit array              udg_SferiMolniiDummi
    unit array              udg_SferiMolniiDealer
    integer                 udg_SferiMolniiNum         = 0
    unit array              udg_PoisonD
    unit array              udg_FellHoundDebuffDealer
    boolean                 udg_TimerOffed             = false
    string array            udg_CreepDescr
    group array             udg_NeutralSellectedByPlayer
    boolean array           udg_NeutralSellectedFirstTime
    unit array              udg_EfreetRealUnit
    unit array              udg_EfreetImagUnit
    integer                 udg_EfreetNum              = 0
    integer array           udg_EfreetTime
    group                   udg_EfreetGroup            = null
    integer array           udg_DemonPass17PortalsUnit
    integer                 udg_DemonPass17PortalsCout = 0
    unit array              udg_DemonPass17PortalsPortal
    integer array           udg_DemonPass17CreateUnit
    integer array           udg_DemonPass17PortalsTime
    real array              udg_DemonPass17CreateNetworth
    boolean array           udg_DemonPass17PortalsWar
    integer                 udg_DemonPass17CreateFinalTime = 0
    unit array              udg_NeutralSellectedLastUnit
    timer array             udg_NeutralSellectedTimer
    group array             udg_StartSpellsWorkGroup
    boolean array           udg_StartSpellsWorkBool
    group                   udg_SuccubKnifeCasting     = null
    integer                 udg_SuccubCurseNum         = 0
    unit array              udg_SuccubCurseUnit
    integer array           udg_SuccubCurseTime
    group                   udg_SuccubKnifeGroup       = null
    unit array              udg_DummyWaveDd
    unit array              udg_DummyWaveRu
    integer                 udg_DummyWaveNum           = 0
    effect array            udg_TeleportStuffEffect
    integer                 udg_InfernalCannonSpellNum = 0
    real array              udg_InfernalCannonSpellX
    real array              udg_InfernalCannonSpellY
    unit array              udg_InfernalCannonSpellUnit
    integer array           udg_InfernalCannonSpellTime
    unit array              udg_InfernalCannonSpellDummy
    group                   udg_FrostKnightGroup       = null
    unit array              udg_HeroPassUnit
    unit array              udg_HeroPassTower
    unit array              udg_HeroPassCreep
    integer                 udg_UTNR                   = 0
    integer array           udg_UndeadItemsPassAll
    integer                 udg_UndeadItemsPassLvls    = 0
    integer array           udg_UndeadItemsPassLvlItNums
    integer array           udg_WaveValueStandart
    group                   udg_HeroSkill3             = null
    integer array           udg_HeroPassSkillsPriority
    integer                 udg_EssOfBetrNum           = 0
    unit array              udg_EssOfBetrUnit
    integer array           udg_EssOfBetrTime
    integer                 udg_RockSpellNum           = 0
    unit array              udg_RockSpellUnit
    integer array           udg_RockSpellTime
    unit array              udg_HumPalaHealU
    integer                 udg_HumPalaHealN           = 0
    integer array           udg_HumPalaHealT
    unit array              udg_PalaUnit
    integer array           udg_PalaTime
    integer                 udg_PalaNum                = 0
    group                   udg_CastingPalaHealGroup   = null
    integer                 udg_BankaOrcNum            = 0
    integer array           udg_BankaOrcTime
    unit array              udg_BankaOrcUnit
    unit array              udg_BankaOrcDd
    integer                 udg_MargolDaggerNum        = 0
    unit array              udg_MargolDaggerUnit
    unit array              udg_MargolDaggerDd
    integer array           udg_MargolDaggerTime
    group                   udg_MargolSpellCasting     = null
    group                   udg_HumPalaAuraPrevious1   = null
    group                   udg_HumPalaAura1           = null
    group                   udg_HumPalaAura2           = null
    group                   udg_HumPalaAuraPrevious2   = null
    group array             udg_GoblZepGroup
    integer                 udg_GoblZepNum             = 0
    unit array              udg_GoblZepUnit
    integer array           udg_GoblZepTime
    integer                 udg_DemonSpellBcNum        = 0
    unit array              udg_DemonSpellBcUnit
    integer array           udg_DemonSpellBcTime
    integer                 udg_SuccubFaceSpellNum     = 0
    unit array              udg_SuccubFaceSpellUnit
    unit array              udg_SuccubFaceSpellTarget
    integer array           udg_SuccubFaceSpellTime
    boolean array           udg_PlayerUsedIncomeSpell
    boolean                 udg_EnableCreeps           = false
    real                    udg_DemoCreepsX            = 0
    real                    udg_DemoCreepsY            = 0
    string array            udg_CreepsWave
    integer                 udg_CreepsWaveNum          = 0
    group array             udg_PlayerCreepsTowersGroup
    integer                 udg_NextCreepsWave         = 0
    integer                 udg_IntegerY               = 0
    integer array           udg_UUL3
    integer                 udg_NagaVoinNum            = 0
    real array              udg_NagaVoinReal
    unit array              udg_NagaVoinUnit
    timer                   udg_TimerWaveSpeedUp       = null
    integer                 udg_TimerWaveSpeedUpNum    = 0
    boolean                 udg_DmgOffed               = false
    unit array              udg_FireLordDebuffDealer
    unit array              udg_FireLordDebuffUnit
    integer array           udg_FireLordDebuffTime
    integer                 udg_FireLordDebuffNum      = 0
    unit array              udg_ThrouneExtra
    integer array           udg_UULevelSpellOrc
    integer array           udg_UULevelSpellUnd
    integer array           udg_UULevelElf
    integer array           udg_UULevelHum
    integer array           udg_UULevelNaga
    integer array           udg_AllSpellsSpell
    integer array           udg_AllSpellsLevel
    integer                 udg_AllSpellsCount         = 0
    group array             udg_ThrouneWorkersGroup
    dialog                  udg_ChoosingModWorkers     = null
    button                  udg_ChoosingModWorkersOne  = null
    button                  udg_ChoosingModWorkersTwo  = null
    integer                 udg_ChoosingModWorkersNum  = 0
    integer array           udg_PlCurrPassesForRace
    dialog                  udg_ChoosingModRacism      = null
    button                  udg_ChoosingModRacismYes   = null
    button                  udg_ChoosingModRacismNo    = null
    button                  udg_ChoosingModWorkersThree = null
    integer                 udg_HeroNagaCount          = 0
    unit array              udg_HeroNagaHero
    unit array              udg_HeroNagaBounded
    integer array           udg_HeroNagaExtraHp
    integer                 udg_HeroNagaSpellTargetCount = 0
    unit array              udg_HeroNagaSpellTargetUnit
    integer array           udg_HeroNagaSpellTargetTime
    group                   udg_CastingHeroDebuffGroup = null
    integer                 udg_HeroBankaCount         = 0
    unit array              udg_HeroBankaUnit
    integer array           udg_HeroBankaTime
    integer array           udg_HeroBankaLvl
    unit array              udg_HeroBankaDD
    unit array              udg_KataTowerThrower
    unit array              udg_KataTowerTarget
    integer                 udg_KataTowerCount         = 0
    unit array              udg_KataWarriorThrower
    unit array              udg_KataWarriorTarget
    integer                 udg_KataWarriorCount       = 0
    integer                 udg_KataFlyCount           = 0
    unit array              udg_KataFlyUnit
    real array              udg_KataFlyX
    real array              udg_KataFlyY
    real array              udg_KataFlyA
    real array              udg_KataFlyZ
    boolean array           udg_KataWarriorHiden
    boolean                 udg_OnTimerOnStart         = false
    dialog                  udg_ChoosingModTimer       = null
    button                  udg_ChoosingModTimerOn     = null
    button                  udg_ChoosingModTimerOff    = null
    integer                 udg_UndeadSpellManaCount   = 0
    unit array              udg_UndeadSpellManaUnit
    real array              udg_UndeadSpellManaDmg
    real array              udg_UndeadSpellManaHealth
    integer                 udg_efreetCastingShit      = 0

    // Generated
    rect                    gg_rct_DemonstrUnits       = null
    rect                    gg_rct_Duels               = null
    rect                    gg_rct_DuelsPeons1         = null
    rect                    gg_rct_DuelsPeons2         = null
    rect                    gg_rct_Fight1              = null
    rect                    gg_rct_Fight1peons         = null
    rect                    gg_rct_Fight2              = null
    rect                    gg_rct_Fight2peons         = null
    rect                    gg_rct_Fight3              = null
    rect                    gg_rct_Fight3peons         = null
    rect                    gg_rct_Fight4              = null
    rect                    gg_rct_Fight4peons         = null
    rect                    gg_rct_Fight5              = null
    rect                    gg_rct_Fight5peons         = null
    rect                    gg_rct_Fight6              = null
    rect                    gg_rct_Fight6peons         = null
    rect                    gg_rct_FightSecVisionSD14  = null
    rect                    gg_rct_FightSecVisionSD25  = null
    rect                    gg_rct_FightSecVisionSD36  = null
    rect                    gg_rct_FightSecVisionSolo1 = null
    rect                    gg_rct_FightSecVisionSolo2 = null
    rect                    gg_rct_FightSecVisionSolo3 = null
    rect                    gg_rct_FightSecVisionSolo4 = null
    rect                    gg_rct_FightSecVisionSolo5 = null
    rect                    gg_rct_FightSecVisionSolo6 = null
    rect                    gg_rct_FightSecVisionTD    = null
    rect                    gg_rct_FightSecVisionTeam1 = null
    rect                    gg_rct_FightSecVisionTeam2 = null
    rect                    gg_rct_Player1             = null
    rect                    gg_rct_Player2             = null
    rect                    gg_rct_Player3             = null
    rect                    gg_rct_Player4             = null
    rect                    gg_rct_Player5             = null
    rect                    gg_rct_Player6             = null
    rect                    gg_rct_SoloDuel14          = null
    rect                    gg_rct_SoloDuel1peons      = null
    rect                    gg_rct_SoloDuel25          = null
    rect                    gg_rct_SoloDuel2peons      = null
    rect                    gg_rct_SoloDuel36          = null
    rect                    gg_rct_SoloDuel3peons      = null
    rect                    gg_rct_SoloDuel4peons      = null
    rect                    gg_rct_SoloDuel5peons      = null
    rect                    gg_rct_SoloDuel6peons      = null
    rect                    gg_rct_TeamFight1          = null
    rect                    gg_rct_TeamFight1peons     = null
    rect                    gg_rct_TeamFight2          = null
    rect                    gg_rct_TeamFight2peons     = null
    rect                    gg_rct_VisionD1            = null
    rect                    gg_rct_VisionD2            = null
    rect                    gg_rct_VisionS1            = null
    rect                    gg_rct_VisionS2            = null
    rect                    gg_rct_VisionS3            = null
    rect                    gg_rct_VisionS4            = null
    rect                    gg_rct_VisionS5            = null
    rect                    gg_rct_VisionS6            = null
    rect                    gg_rct_VisionSD1           = null
    rect                    gg_rct_VisionSD2           = null
    rect                    gg_rct_VisionSD3           = null
    rect                    gg_rct_VisionSD4           = null
    rect                    gg_rct_VisionSD5           = null
    rect                    gg_rct_VisionSD6           = null
    rect                    gg_rct_VisionT1            = null
    rect                    gg_rct_VisionT2            = null
    rect                    gg_rct_Team1               = null
    rect                    gg_rct_Team2               = null
    rect                    gg_rct________________065  = null
    rect                    gg_rct________________066  = null
    rect                    gg_rct________________067  = null
    rect                    gg_rct________________068  = null
    rect                    gg_rct________________069  = null
    rect                    gg_rct________________070  = null
    sound                   gg_snd_und2                = null
    sound                   gg_snd_und3                = null
    sound                   gg_snd_hum1                = null
    sound                   gg_snd_hum2                = null
    sound                   gg_snd_hum3                = null
    sound                   gg_snd_orc1                = null
    sound                   gg_snd_orc2                = null
    sound                   gg_snd_orc3                = null
    sound                   gg_snd_elf1                = null
    sound                   gg_snd_elf2                = null
    sound                   gg_snd_elf3                = null
    sound                   gg_snd_nag1                = null
    sound                   gg_snd_nag2                = null
    sound                   gg_snd_nag3                = null
    sound                   gg_snd_und1                = null
    trigger                 gg_trg_Duel1               = null
    trigger                 gg_trg_Duel2               = null
    trigger                 gg_trg_Single1             = null
    trigger                 gg_trg_Single2             = null
    trigger                 gg_trg_Single3             = null
    trigger                 gg_trg_Single4             = null
    trigger                 gg_trg_Single5             = null
    trigger                 gg_trg_Single6             = null
    trigger                 gg_trg_Team1               = null
    trigger                 gg_trg_Team2               = null
    trigger                 gg_trg_SoloDuel1           = null
    trigger                 gg_trg_SoloDuel2           = null
    trigger                 gg_trg_SoloDuel3           = null
    trigger                 gg_trg_SoloDuel4           = null
    trigger                 gg_trg_SoloDuel5           = null
    trigger                 gg_trg_SoloDuel6           = null
    trigger                 gg_trg_AddTriggersAll      = null
    trigger                 gg_trg_Waving              = null
    trigger                 gg_trg_ThroneAttacked      = null
    trigger                 gg_trg_UnitDies            = null
    trigger                 gg_trg_WarriorReturnToFightSingle = null
    trigger                 gg_trg_WarriorReturnToFightTeam = null
    trigger                 gg_trg_WarriorReturnToFightTD = null
    trigger                 gg_trg_WarriorReturnToFightSD = null
    trigger                 gg_trg_BebugSingle2        = null
    trigger                 gg_trg_TimerWinExp         = null
    trigger                 gg_trg_lol                 = null
    trigger                 gg_trg_lol2                = null
    trigger                 gg_trg_NeutralUnitStop     = null
    trigger                 gg_trg_StartConstr         = null
    trigger                 gg_trg_EndConstr           = null
    trigger                 gg_trg_DiedConstr          = null
    trigger                 gg_trg_StartUpgr           = null
    trigger                 gg_trg_StopUpgr            = null
    trigger                 gg_trg_EndUpgr             = null
    trigger                 gg_trg_initvars            = null
    trigger                 gg_trg_UEPMA               = null
    trigger                 gg_trg_UnitAttackedMove    = null
    trigger                 gg_trg_UnitAttacked        = null
    trigger                 gg_trg_CreatedSummons      = null
    trigger                 gg_trg_UnitCastingSpell    = null
    trigger                 gg_trg_UnitAboutToCast     = null
    trigger                 gg_trg_UnitLosesItem       = null
    trigger                 gg_trg_NeutralSelect       = null
    trigger                 gg_trg_NeutralDeselect     = null
    trigger                 gg_trg_PeonCarryesAnItem   = null
    trigger                 gg_trg_FireLordDebuffDeath = null
    trigger                 gg_trg_ChumZomb1           = null
    trigger                 gg_trg_Ghouls              = null
    trigger                 gg_trg_golems              = null
    trigger                 gg_trg_GolemiPloti         = null
    trigger                 gg_trg_Gommunkuls          = null
    trigger                 gg_trg_SuperGolemDeath     = null
    trigger                 gg_trg_SuperGolemEffect    = null
    trigger                 gg_trg_MageNecro2          = null
    trigger                 gg_trg_FrostKnight         = null
    trigger                 gg_trg_KingOfTheDeath      = null
    trigger                 gg_trg_UndeadPass2         = null
    trigger                 gg_trg_KozlikEnd           = null
    trigger                 gg_trg_jumping1            = null
    trigger                 gg_trg_jumping2            = null
    trigger                 gg_trg_ElfWarrior          = null
    trigger                 gg_trg_Tree                = null
    trigger                 gg_trg_AttackTree          = null
    trigger                 gg_trg_WarriorTreeOFF      = null
    trigger                 gg_trg_DrevniDreven        = null
    trigger                 gg_trg_ElfPassivkaInviz    = null
    trigger                 gg_trg_GruntSpell          = null
    trigger                 gg_trg_poison_tic          = null
    trigger                 gg_trg_caniball_start      = null
    trigger                 gg_trg_Ciclop_rezist_end   = null
    trigger                 gg_trg_LightShaman         = null
    trigger                 gg_trg_BankaOrc            = null
    trigger                 gg_trg_WolfEatStart        = null
    trigger                 gg_trg_WolfEat             = null
    trigger                 gg_trg_OgreMagi            = null
    trigger                 gg_trg_Kabaaan             = null
    trigger                 gg_trg_Kodo                = null
    trigger                 gg_trg_OrcPassivka         = null
    trigger                 gg_trg_ThrowerWarriors     = null
    trigger                 gg_trg_ThrowerFly          = null
    trigger                 gg_trg_arhangels           = null
    trigger                 gg_trg_Serafim             = null
    trigger                 gg_trg_FootArch            = null
    trigger                 gg_trg_KnightGo            = null
    trigger                 gg_trg_SHorses             = null
    trigger                 gg_trg_Tseliteli           = null
    trigger                 gg_trg_Peasant             = null
    trigger                 gg_trg_HumPalaLoop         = null
    trigger                 gg_trg_HumPalaHeal         = null
    trigger                 gg_trg_HumPassivka         = null
    trigger                 gg_trg_MargolSpell         = null
    trigger                 gg_trg_MargolLoop          = null
    trigger                 gg_trg_NagaVoin            = null
    trigger                 gg_trg_NagaMirmidon        = null
    trigger                 gg_trg_MargolAttSp         = null
    trigger                 gg_trg_MarkyraBigEnd       = null
    trigger                 gg_trg_NagaZaklLoop        = null
    trigger                 gg_trg_Koatles             = null
    trigger                 gg_trg_TornadoDmg          = null
    trigger                 gg_trg_TornadoPrilivSil    = null
    trigger                 gg_trg_OceanAvatarTar      = null
    trigger                 gg_trg_OceanAvatarLoop     = null
    trigger                 gg_trg_NagaCannibalismPass2 = null
    trigger                 gg_trg_HeroBankaLoop       = null
    trigger                 gg_trg_HeroLoop            = null
    trigger                 gg_trg_FireLordDebuff      = null
    trigger                 gg_trg_FellHound           = null
    trigger                 gg_trg_InfernalsHP         = null
    trigger                 gg_trg_InfernalsDMG        = null
    trigger                 gg_trg_Vlastiteli          = null
    trigger                 gg_trg_Dooms               = null
    trigger                 gg_trg_DoomTargets         = null
    trigger                 gg_trg_DoomTargetsEffect   = null
    trigger                 gg_trg_FellHoundBig        = null
    trigger                 gg_trg_VoidWalkerBig       = null
    trigger                 gg_trg_VoidWalkerTinyDies  = null
    trigger                 gg_trg_VoidWalkerShade     = null
    trigger                 gg_trg_DemonShield         = null
    trigger                 gg_trg_EfreetStart         = null
    trigger                 gg_trg_EfreetSpell         = null
    trigger                 gg_trg_SuccubDeath         = null
    trigger                 gg_trg_SuccubKnife         = null
    trigger                 gg_trg_SuccubKnifeLoop     = null
    trigger                 gg_trg_InfernalCannon      = null
    trigger                 gg_trg_DemonPassivka       = null
    trigger                 gg_trg_DemonPassivkaGatesOpen = null
    trigger                 gg_trg_Dmg_taken           = null
    trigger                 gg_trg_EntUp               = null
    trigger                 gg_trg_ElfUp               = null
    trigger                 gg_trg_DummyWaveCaster     = null
    trigger                 gg_trg_TeleportStuff       = null
    trigger                 gg_trg_RockSpell           = null
    trigger                 gg_trg_UndeadSpellMana     = null
    trigger                 gg_trg_EssOfBetr           = null
    trigger                 gg_trg_DemonSlow           = null
    trigger                 gg_trg_DemonSpellBc        = null
    trigger                 gg_trg_KodoUpgrd           = null
    trigger                 gg_trg_KodoUpgrdDemon      = null
    trigger                 gg_trg_SpellbookUpgrd      = null
    trigger                 gg_trg_GoblZep             = null
    trigger                 gg_trg_PassChose           = null
    trigger                 gg_trg_PassChoseRe         = null
    trigger                 gg_trg_TipsAndTricks       = null
    trigger                 gg_trg_TipsOff             = null
    trigger                 gg_trg_TipsOn              = null
    trigger                 gg_trg_TimeOff             = null
    trigger                 gg_trg_TimeOn              = null
    trigger                 gg_trg_DmgOff              = null
    trigger                 gg_trg_DmgOn               = null
    trigger                 gg_trg_Clear               = null
    trigger                 gg_trg_Tip                 = null
    trigger                 gg_trg_Check               = null
    trigger                 gg_trg_TestVersion         = null
    trigger                 gg_trg_Sur                 = null
    trigger                 gg_trg_Supply              = null
    trigger                 gg_trg_Init                = null
    trigger                 gg_trg_qwests1             = null
    trigger                 gg_trg_qwests2             = null
    trigger                 gg_trg_AIdetection         = null
    trigger                 gg_trg_StartingCleaning    = null
    trigger                 gg_trg_ChoosingMod         = null
    trigger                 gg_trg_ChoosingModTimer    = null
    trigger                 gg_trg_ChooseWorkersMod    = null
    trigger                 gg_trg_ChooseRacismMod     = null
    trigger                 gg_trg_ChooseUnitsMod      = null
    trigger                 gg_trg_ChooseGo            = null
    trigger                 gg_trg_ChooseCreepsGo      = null
    trigger                 gg_trg_CameraFix           = null
    trigger                 gg_trg_PlayerLeaves        = null
    trigger                 gg_trg_HandleCounter       = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_ChoosingMod = DialogCreate()
    set udg_ModNumber = 0
    set udg_TimerWave = CreateTimer()
    set udg_Wave = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UnitCreepTipeCost[i] = 0
        set i = i + 1
    endloop

    set udg_WCN = 0
    set udg_CreepsTimer = CreateTimer()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UnitCreepNum[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PlayerSector[i] = null
        set i = i + 1
    endloop

    set udg_PlayingPlayers = CreateForce()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit2Num[i] = 0
        set i = i + 1
    endloop

    set udg_int = 0
    set udg_BE = false
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PlayerCreepsGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_Multiboard = CreateMultiboard()
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_Lives[i] = 0
        set i = i + 1
    endloop

    set udg_PlayersNumber = 0
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PlayerCreepsNum[i] = 0
        set i = i + 1
    endloop

    set udg_GroupX = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PlayerWarriorsGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PlayerTowersGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_IntegerX = 0
    set udg_RealX = 0
    set udg_RealY = 0
    set udg_TimerWin = CreateTimer()
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_BooleanPlay[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_PlayerHomeLocX[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_PlayerHomeLocY[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 12)
        set udg_up[i] = 0
        set i = i + 1
    endloop

    set udg_TreeGhostNum = 0
    set udg_RealZ = 0
    set udg_BooleanX = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PoisonN[i] = 0
        set i = i + 1
    endloop

    set udg_PoisonC = 0
    set udg_WAUG = CreateGroup()
    set udg_GroupDmgTaken = CreateGroup()
    set udg_PJCnum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJCtime[i] = 0
        set i = i + 1
    endloop

    set udg_PJnum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJtime[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJCx[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJx[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJCy[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJy[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PJa[i] = 0
        set i = i + 1
    endloop

    set udg_Horses = CreateGroup()
    set udg_BR = true
    set udg_WaveGoing = false
    set udg_ElfEntNum = 0
    set udg_DemonsGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_TCDT[i] = CreateTimer()
        set i = i + 1
    endloop

    set udg_WardWDGroup = CreateGroup()
    set udg_DDT = CreateTimer()
    set udg_DDG = CreateGroup()
    set udg_WolfGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_spdmgNOW[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_spspeedNOW[i] = 0
        set i = i + 1
    endloop

    set udg_Constructed = CreateGroup()
    set udg_ConstructedTW = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 2)
        set udg_DuelHP[i] = 0
        set i = i + 1
    endloop

    set udg_ElfElfNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TMPN[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 10)
        set udg_UnitCreepNumCM[i] = 0
        set i = i + 1
    endloop

    set udg_EntGroupRage = CreateGroup()
    set udg_GLC = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UndeadPassive[i] = 0
        set i = i + 1
    endloop

    set udg_UTN = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RaceNumber[i] = 0
        set i = i + 1
    endloop

    set udg_ModNumberUnits = 0
    set udg_ChoosingModUnits = DialogCreate()
    set udg_WBUG = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveGoingForPlayer[i] = false
        set i = i + 1
    endloop

    set udg_GalvanGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CreepCost[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UUL[i] = 0
        set i = i + 1
    endloop

    set udg_UUN = 0
    set udg_ModCreeps = false
    set udg_ChoosingModCreeps = DialogCreate()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PlayerSectorPeonsAll[i] = null
        set i = i + 1
    endloop

    set udg_CastingRejGroup = CreateGroup()
    set udg_GruntSpellGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RezzakArmorN[i] = 0
        set i = i + 1
    endloop

    set udg_RezzakArmorC = 0
    set i = 0
    loop
        exitwhen (i > 2)
        set udg_GoblPassMaxHP[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit1Num[i] = 0
        set i = i + 1
    endloop

    set udg_BlueTurtleNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit3Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit4Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit6Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit5Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit8Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveUnit7Num[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_GroupForRemovetowersecond[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_MultiboardUnitsGoldNow[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_MultiboardUnitsGoldStart[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_ReadyWorker[i] = false
        set i = i + 1
    endloop

    set udg_WaveTimeMultiplier = 1.00
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_BooleanPlayForTA[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UUL2[i] = 0
        set i = i + 1
    endloop

    set udg_BlockUdPass = false
    set udg_MargolInviGroup = CreateGroup()
    set udg_MarkyraBig = CreateGroup()
    set udg_TurtleEatCasting = CreateGroup()
    set udg_Ziclops = CreateGroup()
    set udg_NagaSirenCasting = CreateGroup()
    set udg_CastingUnhRageGroup = CreateGroup()
    set udg_CastingUndSleepGroup = CreateGroup()
    set udg_CastingUndhealGroup = CreateGroup()
    set udg_GhoulDMGdeal = false
    set udg_Gommunkuls = CreateGroup()
    set udg_MageNecroC = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MageNecroN[i] = 0
        set i = i + 1
    endloop

    set udg_KingOfTheDeath = CreateGroup()
    set udg_ChumZomb = CreateGroup()
    set udg_ChumZombCreepsNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ChumZombCreepsHP[i] = 0
        set i = i + 1
    endloop

    set udg_Ghouls = CreateGroup()
    set udg_GolemiPloti = CreateGroup()
    set udg_SuperGolemsEffect = CreateGroup()
    set udg_ElfUnderRej = CreateGroup()
    set udg_CheckToJump = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DriadPoisonN[i] = 0
        set i = i + 1
    endloop

    set udg_DriadPoisonC = 0
    set udg_WolfGroupEating = CreateGroup()
    set udg_WolfGroupEated = CreateGroup()
    set udg_GroupBlades = CreateGroup()
    set udg_arhangels = CreateGroup()
    set udg_SHorses = CreateGroup()
    set udg_tseliteli = CreateGroup()
    set udg_MargolDaggerGroup = CreateGroup()
    set udg_NagaMirmidon = CreateGroup()
    set udg_NagaZaklNum = 0
    set udg_Koatles = CreateGroup()
    set udg_Tornados = CreateGroup()
    set udg_OceanAvatarTar = CreateGroup()
    set udg_OceanAvatarNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_OceanAvatarHP[i] = 0
        set i = i + 1
    endloop

    set udg_OceanAvatar = CreateGroup()
    set udg_BR2 = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RaceNumName[i] = ""
        set i = i + 1
    endloop

    set udg_TipsAndTricksNum = 0
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_TipsAndTricksPlBool[i] = true
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TipsAndTricks[i] = ""
        set i = i + 1
    endloop

    set udg_VampireGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PlayerSlotId[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PassChosenByPlayer[i] = 0
        set i = i + 1
    endloop

    set udg_CorruptedEarthDummy = CreateGroup()
    set udg_NagaBuildingNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_NagaBuildingPC[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RaceIcon[i] = ""
        set i = i + 1
    endloop

    set udg_PassChoseNum = 0
    set udg_ArcherNum = 0
    set udg_FootmenNum = 0
    set udg_PeasantMiss = CreateGroup()
    set udg_KodoGroup = CreateGroup()
    set udg_CannibalOrc = CreateGroup()
    set udg_CastingBloodlustGroup = CreateGroup()
    set udg_CastingAcidbombGroup = CreateGroup()
    set udg_CastingInvulGroup = CreateGroup()
    set udg_ElfUnseenNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ElfUnseenTime[i] = 0
        set i = i + 1
    endloop

    set udg_OgreHitNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_OgreHitTime[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_OgreHitX[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_OgreHitY[i] = 0
        set i = i + 1
    endloop

    set udg_FellHoundDebuffNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FellHoundDebuffTime[i] = 0
        set i = i + 1
    endloop

    set udg_Infernals = CreateGroup()
    set udg_Vlastiteli = CreateGroup()
    set udg_Dooms = CreateGroup()
    set udg_DoomsCasting = CreateGroup()
    set udg_TeleportStuffNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TeleportStuffTime[i] = 0
        set i = i + 1
    endloop

    set udg_TeleportSaveNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TeleportSaveTime[i] = 0
        set i = i + 1
    endloop

    set udg_GroupY = CreateGroup()
    set udg_DoomTargets = CreateGroup()
    set udg_DoomTargetNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DoomTargetTime[i] = 0
        set i = i + 1
    endloop

    set udg_DemonSlowNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonSlowTime[i] = 0
        set i = i + 1
    endloop

    set udg_FellHoundBig = CreateGroup()
    set udg_FellHoundBigPrevious = CreateGroup()
    set udg_VoidWalkerBig = CreateGroup()
    set udg_VoidWalkerShade = CreateGroup()
    set udg_CastingDemonShieldGroup = CreateGroup()
    set udg_DemonShieldGroupNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonShieldGroupTime[i] = 0
        set i = i + 1
    endloop

    set udg_SferiMolniiNum = 0
    set udg_TimerOffed = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CreepDescr[i] = ""
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_NeutralSellectedByPlayer[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_NeutralSellectedFirstTime[i] = false
        set i = i + 1
    endloop

    set udg_EfreetNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_EfreetTime[i] = 0
        set i = i + 1
    endloop

    set udg_EfreetGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonPass17PortalsUnit[i] = 0
        set i = i + 1
    endloop

    set udg_DemonPass17PortalsCout = 0
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_DemonPass17CreateUnit[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonPass17PortalsTime[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_DemonPass17CreateNetworth[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonPass17PortalsWar[i] = false
        set i = i + 1
    endloop

    set udg_DemonPass17CreateFinalTime = 0
    set i = 0
    loop
        exitwhen (i > 6)
        set udg_NeutralSellectedTimer[i] = CreateTimer()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_StartSpellsWorkGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_StartSpellsWorkBool[i] = false
        set i = i + 1
    endloop

    set udg_SuccubKnifeCasting = CreateGroup()
    set udg_SuccubCurseNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SuccubCurseTime[i] = 0
        set i = i + 1
    endloop

    set udg_SuccubKnifeGroup = CreateGroup()
    set udg_DummyWaveNum = 0
    set udg_InfernalCannonSpellNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_InfernalCannonSpellX[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_InfernalCannonSpellY[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_InfernalCannonSpellTime[i] = 0
        set i = i + 1
    endloop

    set udg_FrostKnightGroup = CreateGroup()
    set udg_UTNR = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UndeadItemsPassAll[i] = 0
        set i = i + 1
    endloop

    set udg_UndeadItemsPassLvls = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UndeadItemsPassLvlItNums[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_WaveValueStandart[i] = 0
        set i = i + 1
    endloop

    set udg_HeroSkill3 = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HeroPassSkillsPriority[i] = 0
        set i = i + 1
    endloop

    set udg_EssOfBetrNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_EssOfBetrTime[i] = 0
        set i = i + 1
    endloop

    set udg_RockSpellNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_RockSpellTime[i] = 0
        set i = i + 1
    endloop

    set udg_HumPalaHealN = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HumPalaHealT[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PalaTime[i] = 0
        set i = i + 1
    endloop

    set udg_PalaNum = 0
    set udg_CastingPalaHealGroup = CreateGroup()
    set udg_BankaOrcNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BankaOrcTime[i] = 0
        set i = i + 1
    endloop

    set udg_MargolDaggerNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MargolDaggerTime[i] = 0
        set i = i + 1
    endloop

    set udg_MargolSpellCasting = CreateGroup()
    set udg_HumPalaAuraPrevious1 = CreateGroup()
    set udg_HumPalaAura1 = CreateGroup()
    set udg_HumPalaAura2 = CreateGroup()
    set udg_HumPalaAuraPrevious2 = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_GoblZepGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_GoblZepNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_GoblZepTime[i] = 0
        set i = i + 1
    endloop

    set udg_DemonSpellBcNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DemonSpellBcTime[i] = 0
        set i = i + 1
    endloop

    set udg_SuccubFaceSpellNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SuccubFaceSpellTime[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 6)
        set udg_PlayerUsedIncomeSpell[i] = false
        set i = i + 1
    endloop

    set udg_EnableCreeps = false
    set udg_DemoCreepsX = 0
    set udg_DemoCreepsY = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CreepsWave[i] = ""
        set i = i + 1
    endloop

    set udg_CreepsWaveNum = 0
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_PlayerCreepsTowersGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_NextCreepsWave = 0
    set udg_IntegerY = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UUL3[i] = 0
        set i = i + 1
    endloop

    set udg_NagaVoinNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_NagaVoinReal[i] = 0
        set i = i + 1
    endloop

    set udg_TimerWaveSpeedUp = CreateTimer()
    set udg_TimerWaveSpeedUpNum = 0
    set udg_DmgOffed = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FireLordDebuffTime[i] = 0
        set i = i + 1
    endloop

    set udg_FireLordDebuffNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UULevelSpellOrc[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UULevelSpellUnd[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UULevelElf[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UULevelHum[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UULevelNaga[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AllSpellsSpell[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AllSpellsLevel[i] = 0
        set i = i + 1
    endloop

    set udg_AllSpellsCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_ThrouneWorkersGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_ChoosingModWorkers = DialogCreate()
    set udg_ChoosingModWorkersNum = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_PlCurrPassesForRace[i] = 0
        set i = i + 1
    endloop

    set udg_ChoosingModRacism = DialogCreate()
    set udg_HeroNagaCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HeroNagaExtraHp[i] = 0
        set i = i + 1
    endloop

    set udg_HeroNagaSpellTargetCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HeroNagaSpellTargetTime[i] = 0
        set i = i + 1
    endloop

    set udg_CastingHeroDebuffGroup = CreateGroup()
    set udg_HeroBankaCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HeroBankaTime[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_HeroBankaLvl[i] = 0
        set i = i + 1
    endloop

    set udg_KataTowerCount = 0
    set udg_KataWarriorCount = 0
    set udg_KataFlyCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KataFlyX[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KataFlyY[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KataFlyA[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KataFlyZ[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_KataWarriorHiden[i] = false
        set i = i + 1
    endloop

    set udg_OnTimerOnStart = false
    set udg_ChoosingModTimer = DialogCreate()
    set udg_UndeadSpellManaCount = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UndeadSpellManaDmg[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UndeadSpellManaHealth[i] = 0
        set i = i + 1
    endloop

    set udg_efreetCastingShit = 0
endfunction

//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_und2 = CreateSound( "Units\\Undead\\Banshee\\BansheeReady1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_und2, "BansheeReady" )
    call SetSoundDuration( gg_snd_und2, 4134 )
    set gg_snd_und3 = CreateSound( "Units\\Undead\\EvilArthas\\EvilArthasWarcry1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_und3, "EvilArthasWarcry" )
    call SetSoundDuration( gg_snd_und3, 1431 )
    set gg_snd_hum1 = CreateSound( "Units\\Human\\HeroArchMage\\HeroArchMagePissed4.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_hum1, "HeroArchMagePissed" )
    call SetSoundDuration( gg_snd_hum1, 3599 )
    set gg_snd_hum2 = CreateSound( "Units\\Human\\Peasant\\PeasantPissed1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_hum2, "PeasantPissed" )
    call SetSoundDuration( gg_snd_hum2, 2560 )
    set gg_snd_hum3 = CreateSound( "Units\\Human\\TheCaptain\\CaptainPissed3.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_hum3, "CaptainPissed" )
    call SetSoundDuration( gg_snd_hum3, 3114 )
    set gg_snd_orc1 = CreateSound( "Units\\Orc\\Grunt\\GruntReady1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_orc1, "GruntReady" )
    call SetSoundDuration( gg_snd_orc1, 2682 )
    set gg_snd_orc2 = CreateSound( "Units\\Orc\\HeroBladeMaster\\HeroBladeMasterReady1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_orc2, "HeroBladeMasterReady" )
    call SetSoundDuration( gg_snd_orc2, 2586 )
    set gg_snd_orc3 = CreateSound( "Units\\Orc\\Wolfrider\\WolfriderReady1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_orc3, "WolfriderReady" )
    call SetSoundDuration( gg_snd_orc3, 3593 )
    set gg_snd_elf1 = CreateSound( "Units\\NightElf\\HeroDemonHunter\\HeroDemonHunterReady1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_elf1, "HeroDemonHunterReady" )
    call SetSoundDuration( gg_snd_elf1, 4110 )
    set gg_snd_elf2 = CreateSound( "Units\\NightElf\\HeroKeeperOfTheGrove\\KeeperOfTheGroveWarcry1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_elf2, "HeroKeeperOfTheGroveWarcry" )
    call SetSoundDuration( gg_snd_elf2, 2792 )
    set gg_snd_elf3 = CreateSound( "Units\\NightElf\\HeroMoonPriestess\\HeroMoonPriestessReady1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_elf3, "HeroMoonPriestessReady" )
    call SetSoundDuration( gg_snd_elf3, 1937 )
    set gg_snd_nag1 = CreateSound( "Units\\Naga\\NagaRoyalGuard\\NagaRoyalGuardYesAttack2.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_nag1, "NagaRoyalGuardYesAttack" )
    call SetSoundDuration( gg_snd_nag1, 2144 )
    set gg_snd_nag2 = CreateSound( "Units\\Naga\\NagaSiren\\NagaSirenReady1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_nag2, "NagaSirenReady" )
    call SetSoundDuration( gg_snd_nag2, 4696 )
    set gg_snd_nag3 = CreateSound( "Units\\Naga\\NagaMyrmidon\\NagaMyrmadonReady1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_nag3, "NagaMyrmidonReady" )
    call SetSoundDuration( gg_snd_nag3, 2587 )
    set gg_snd_und1 = CreateSound( "Units\\Undead\\HeroLich\\HeroLichReady1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_und1, "HeroLichReady" )
    call SetSoundDuration( gg_snd_und1, 4337 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ntn2', -3296.0, 10208.0, 270.000 )
    set u = CreateUnit( p, 'nten', -1568.0, 10208.0, 270.000 )
    set u = CreateUnit( p, 'nfoh', 896.0, 9408.0, 270.000 )
    set u = CreateUnit( p, 'nnzg', 3296.0, 10272.0, 270.000 )
    set u = CreateUnit( p, 'nnzg', 1568.0, 10208.0, 270.000 )
    set u = CreateUnit( p, 'nmg0', -928.0, 9568.0, 270.000 )
    set u = CreateUnit( p, 'nshr', 1536.0, 9408.0, 270.000 )
    set u = CreateUnit( p, 'nbwd', -1536.0, 9408.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(3) )
    set u = CreateUnit( p, 'nfrt', -1536.0, 10432.0, 270.000 )
    set u = CreateUnit( p, 'ocbw', 928.0, 10208.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    set u = CreateUnit( p, 'npgf', 864.0, 10528.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    set u = CreateUnit( p, 'ovln', -864.0, 10272.0, 270.000 )
    call SetUnitColor( u, ConvertPlayerColor(0) )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_DemonstrUnits = Rect( -4352.0, 7712.0, 4320.0, 11616.0 )
    set gg_rct_Duels = Rect( -4000.0, -9632.0, 4000.0, -6112.0 )
    set gg_rct_DuelsPeons1 = Rect( 1984.0, -9632.0, 4000.0, -6112.0 )
    set gg_rct_DuelsPeons2 = Rect( -4000.0, -9632.0, -1984.0, -6112.0 )
    set gg_rct_Fight1 = Rect( 7008.0, 3168.0, 9376.0, 8992.0 )
    set gg_rct_Fight1peons = Rect( 7008.0, 3168.0, 9376.0, 5056.0 )
    set gg_rct_Fight2 = Rect( 7008.0, -4000.0, 9376.0, 1824.0 )
    set gg_rct_Fight2peons = Rect( 7008.0, -4000.0, 9376.0, -2112.0 )
    set gg_rct_Fight3 = Rect( 7008.0, -11168.0, 9376.0, -5344.0 )
    set gg_rct_Fight3peons = Rect( 7008.0, -11168.0, 9376.0, -9280.0 )
    set gg_rct_Fight4 = Rect( -9376.0, 3168.0, -7008.0, 8992.0 )
    set gg_rct_Fight4peons = Rect( -9376.0, 3168.0, -7008.0, 5056.0 )
    set gg_rct_Fight5 = Rect( -9376.0, -4000.0, -7008.0, 1824.0 )
    set gg_rct_Fight5peons = Rect( -9376.0, -4000.0, -7008.0, -2112.0 )
    set gg_rct_Fight6 = Rect( -9376.0, -11168.0, -7008.0, -5344.0 )
    set gg_rct_Fight6peons = Rect( -9376.0, -11168.0, -7008.0, -9280.0 )
    set gg_rct_FightSecVisionSD14 = Rect( 7616.0, -18208.0, 10688.0, -15072.0 )
    set gg_rct_FightSecVisionSD25 = Rect( -1472.0, -18208.0, 1600.0, -15072.0 )
    set gg_rct_FightSecVisionSD36 = Rect( -10560.0, -18208.0, -7488.0, -15072.0 )
    set gg_rct_FightSecVisionSolo1 = Rect( 7136.0, 5184.0, 9376.0, 8992.0 )
    set gg_rct_FightSecVisionSolo2 = Rect( 7136.0, -1984.0, 9376.0, 1824.0 )
    set gg_rct_FightSecVisionSolo3 = Rect( 7136.0, -9152.0, 9376.0, -5344.0 )
    set gg_rct_FightSecVisionSolo4 = Rect( -9248.0, 5184.0, -7008.0, 8992.0 )
    set gg_rct_FightSecVisionSolo5 = Rect( -9216.0, -1984.0, -7008.0, 1824.0 )
    set gg_rct_FightSecVisionSolo6 = Rect( -9248.0, -9152.0, -7008.0, -5344.0 )
    set gg_rct_FightSecVisionTD = Rect( -1856.0, -9504.0, 1984.0, -6112.0 )
    set gg_rct_FightSecVisionTeam1 = Rect( 1120.0, 576.0, 4000.0, 5664.0 )
    set gg_rct_FightSecVisionTeam2 = Rect( -3872.0, 576.0, -992.0, 5664.0 )
    set gg_rct_Player1 = Rect( 7104.0, 8064.0, 9280.0, 8896.0 )
    set gg_rct_Player2 = Rect( 7104.0, 896.0, 9280.0, 1728.0 )
    set gg_rct_Player3 = Rect( 7104.0, -6272.0, 9280.0, -5440.0 )
    set gg_rct_Player4 = Rect( -9280.0, 8064.0, -7104.0, 8896.0 )
    set gg_rct_Player5 = Rect( -9280.0, 896.0, -7104.0, 1728.0 )
    set gg_rct_Player6 = Rect( -9280.0, -6272.0, -7104.0, -5440.0 )
    set gg_rct_SoloDuel14 = Rect( 5472.0, -18336.0, 12704.0, -15072.0 )
    set gg_rct_SoloDuel1peons = Rect( 10688.0, -18336.0, 12704.0, -15072.0 )
    set gg_rct_SoloDuel25 = Rect( -3616.0, -18336.0, 3616.0, -15072.0 )
    set gg_rct_SoloDuel2peons = Rect( 1600.0, -18336.0, 3616.0, -15072.0 )
    set gg_rct_SoloDuel36 = Rect( -12704.0, -18336.0, -5472.0, -15072.0 )
    set gg_rct_SoloDuel3peons = Rect( -7488.0, -18336.0, -5472.0, -15072.0 )
    set gg_rct_SoloDuel4peons = Rect( 5472.0, -18336.0, 7488.0, -15072.0 )
    set gg_rct_SoloDuel5peons = Rect( -3616.0, -18336.0, -1600.0, -15072.0 )
    set gg_rct_SoloDuel6peons = Rect( -12704.0, -18336.0, -10688.0, -15072.0 )
    set gg_rct_TeamFight1 = Rect( 1024.0, -1920.0, 3968.0, 5600.0 )
    set gg_rct_TeamFight1peons = Rect( 1056.0, -1888.0, 3936.0, 480.0 )
    set gg_rct_TeamFight2 = Rect( -3968.0, -1920.0, -1024.0, 5600.0 )
    set gg_rct_TeamFight2peons = Rect( -3968.0, -1888.0, -1024.0, 480.0 )
    set gg_rct_VisionD1 = Rect( 0.0, -12928.0, 4896.0, -3040.0 )
    set gg_rct_VisionD2 = Rect( -4896.0, -12928.0, 0.0, -3040.0 )
    set gg_rct_VisionS1 = Rect( 4896.0, 2464.0, 10208.0, 9856.0 )
    set gg_rct_VisionS2 = Rect( 4896.0, -4704.0, 10208.0, 2528.0 )
    set gg_rct_VisionS3 = Rect( 4896.0, -12928.0, 10208.0, -4640.0 )
    set gg_rct_VisionS4 = Rect( -10208.0, 2464.0, -4896.0, 9856.0 )
    set gg_rct_VisionS5 = Rect( -10208.0, -4704.0, -4896.0, 2528.0 )
    set gg_rct_VisionS6 = Rect( -10208.0, -12928.0, -4896.0, -4608.0 )
    set gg_rct_VisionSD1 = Rect( 9088.0, -19488.0, 13824.0, -12832.0 )
    set gg_rct_VisionSD2 = Rect( 4352.0, -19488.0, 9088.0, -12832.0 )
    set gg_rct_VisionSD3 = Rect( 0.0, -19488.0, 4736.0, -12832.0 )
    set gg_rct_VisionSD4 = Rect( -4736.0, -19488.0, 0.0, -12832.0 )
    set gg_rct_VisionSD5 = Rect( -9088.0, -19488.0, -4352.0, -12832.0 )
    set gg_rct_VisionSD6 = Rect( -13824.0, -19488.0, -9088.0, -12832.0 )
    set gg_rct_VisionT1 = Rect( 0.0, -3264.0, 4896.0, 7104.0 )
    set gg_rct_VisionT2 = Rect( -4896.0, -3264.0, 0.0, 7104.0 )
    set gg_rct_Team1 = Rect( 1088.0, 4288.0, 3904.0, 5568.0 )
    set gg_rct_Team2 = Rect( -3904.0, 4288.0, -1088.0, 5568.0 )
    set gg_rct________________065 = Rect( 8384.0, -16064.0, 8416.0, -16032.0 )
    set gg_rct________________066 = Rect( 9696.0, -17120.0, 9728.0, -17088.0 )
    set gg_rct________________067 = Rect( 9696.0, -17120.0, 9728.0, -17088.0 )
    set gg_rct________________068 = Rect( 9696.0, -17120.0, 9728.0, -17088.0 )
    set gg_rct________________069 = Rect( 9696.0, -17120.0, 9728.0, -17088.0 )
    set gg_rct________________070 = Rect( 9760.0, -16160.0, 9792.0, -16128.0 )
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//TESH.scrollpos=917
//TESH.alwaysfold=0
function Trig_CreepTipes takes nothing returns nothing
    //CreepDescr: dmg1(2) dmg2(2) attackspeed(3) range(3) armor(2)   doom(1)
    //                                                               skills priority
    //Hums
    set udg_CreepTower[1] = 'h00D'
    set udg_CreepWarrior[1] = 'n007'
    set udg_CreepCost[1] = 30
    set udg_CreepDescr[1] = "06"+"03"+"204"+"000"+"00" + "0"
    
    set udg_CreepTower[2] = 'h00Q'
    set udg_CreepWarrior[2] = 'n008'
    set udg_CreepCost[2] = 45
    set udg_CreepDescr[2] = "09"+"03"+"200"+"350"+"01" + "0"
    
    set udg_CreepTower[3] = 'h00P'
    set udg_CreepWarrior[3] = 'h000'
    set udg_CreepCost[3] = 55
    set udg_CreepDescr[3] = "11"+"03"+"200"+"000"+"02" + "0"
    
    set udg_CreepTower[4] = 'h00E'
    set udg_CreepWarrior[4] = 'n009'
    set udg_CreepCost[4] = 40
    set udg_CreepDescr[4] = "07"+"03"+"190"+"600"+"00" + "0"
    
    set udg_CreepTower[5] = 'h00R'
    set udg_CreepWarrior[5] = 'n00A'
    set udg_CreepCost[5] = 90
    set udg_CreepDescr[5] = "00"+"00"+"175"+"600"+"00" + "4"
    
    set udg_CreepTower[6] = 'h00S'
    set udg_CreepWarrior[6] = 'n00B'
    set udg_CreepCost[6] = 55
    set udg_CreepDescr[6] = "07"+"03"+"190"+"850"+"00" + "2"
    
    set udg_CreepTower[7] = 'h00F'
    set udg_CreepWarrior[7] = 'h001'
    set udg_CreepCost[7] = 40
    set udg_CreepDescr[7] = "08"+"03"+"235"+"000"+"02" + "0"
    
    set udg_CreepTower[8] = 'h00T'
    set udg_CreepWarrior[8] = 'h002'
    set udg_CreepCost[8] = 100
    set udg_CreepDescr[8] = "08"+"03"+"195"+"000"+"02" + "0"
    
    set udg_CreepTower[9] = 'h00U'
    set udg_CreepWarrior[9] = 'h003'
    set udg_CreepCost[9] = 75
    set udg_CreepDescr[9] = "08"+"03"+"215"+"000"+"02" + "1"
    
    set udg_CreepTower[10] = 'h00V'
    set udg_CreepWarrior[10] = 'n00C'
    set udg_CreepCost[10] = 60
    set udg_CreepDescr[10] = "04"+"03"+"185"+"450"+"00" + "3"
    
    set udg_CreepTower[11] = 'h00G'
    set udg_CreepWarrior[11] = 'h004'
    set udg_CreepCost[11] = 70
    set udg_CreepDescr[11] = "08"+"03"+"190"+"450"+"00" + "0"
    
    set udg_CreepTower[12] = 'h00W'
    set udg_CreepWarrior[12] = 'n00D'
    set udg_CreepCost[12] = 115
    set udg_CreepDescr[12] = "10"+"03"+"190"+"530"+"00" + "5"
    
    set udg_CreepTower[13] = 'h00H'
    set udg_CreepWarrior[13] = 'h005'
    set udg_CreepCost[13] = 90
    set udg_CreepDescr[13] = "15"+"04"+"180"+"000"+"03" + "4"
    
    set udg_CreepTower[14] = 'h00X'
    set udg_CreepWarrior[14] = 'h007'
    set udg_CreepCost[14] = 100
    set udg_CreepDescr[14] = "13"+"06"+"180"+"480"+"01" + "4"
    
    set udg_CreepTower[15] = 'h00Y'
    set udg_CreepWarrior[15] = 'h006'
    set udg_CreepCost[15] = 145
    set udg_CreepDescr[15] = "18"+"04"+"180"+"000"+"05" + "5"
    
    set udg_CreepTower[16] = 'h00I'
    set udg_CreepWarrior[16] = 'h009'
    set udg_CreepCost[16] = 250
    set udg_CreepDescr[16] = "24"+"11"+"170"+"000"+"03" + "6"
    
    set udg_CreepTower[17] = 'h00Z'
    set udg_CreepWarrior[17] = 'h00A'
    set udg_CreepCost[17] = 400
    set udg_CreepDescr[17] = "49"+"11"+"145"+"000"+"03" + "7"
    
    set udg_CreepTower[18] = 'h010'
    set udg_CreepWarrior[18] = 'h00B'
    set udg_CreepCost[18] = 500
    set udg_CreepDescr[18] = "32"+"11"+"170"+"000"+"03" + "9"
    
    //Orcs
    
    set udg_CreepTower[19] = 'h00J'
    set udg_CreepWarrior[19] = 'o001'
    set udg_CreepCost[19] = 50
    set udg_CreepDescr[19] = "07"+"02"+"225"+"000"+"00" + "0"
    
    set udg_CreepTower[20] = 'h011'
    set udg_CreepWarrior[20] = 'o002'
    set udg_CreepCost[20] = 70
    set udg_CreepDescr[20] = "07"+"02"+"225"+"000"+"00" + "0"
    
    set udg_CreepTower[21] = 'h00O'
    set udg_CreepWarrior[21] = 'o00F'
    set udg_CreepCost[21] = 140
    set udg_CreepDescr[21] = "26"+"06"+"170"+"000"+"03" + "5"
    
    set udg_CreepTower[22] = 'h00K'
    set udg_CreepWarrior[22] = 'o005'
    set udg_CreepCost[22] = 45
    set udg_CreepDescr[22] = "11"+"02"+"215"+"500"+"00" + "0"
    
    set udg_CreepTower[23] = 'h00M'
    set udg_CreepWarrior[23] = 'o00C'
    set udg_CreepCost[23] = 100
    set udg_CreepDescr[23] = "07"+"03"+"175"+"620"+"00" + "2"
    
    set udg_CreepTower[24] = 'h014'
    set udg_CreepWarrior[24] = 'o006'
    set udg_CreepCost[24] = 80
    set udg_CreepDescr[24] = "10"+"02"+"215"+"500"+"00" + "4"
    
    set udg_CreepTower[25] = 'h00L'
    set udg_CreepWarrior[25] = 'o007'
    set udg_CreepCost[25] = 85
    set udg_CreepDescr[25] = "13"+"03"+"210"+"000"+"03" + "4"
    
    set udg_CreepTower[26] = 'h01B'
    set udg_CreepWarrior[26] = 'o00H'
    set udg_CreepCost[26] = 220
    set udg_CreepDescr[26] = "16"+"03"+"150"+"620"+"03" + "6"
    
    set udg_CreepTower[27] = 'h016'
    set udg_CreepWarrior[27] = 'o009'
    set udg_CreepCost[27] = 140
    set udg_CreepDescr[27] = "13"+"03"+"210"+"000"+"04" + "4"
    
    set udg_CreepTower[28] = 'h013'
    set udg_CreepWarrior[28] = 'o004'
    set udg_CreepCost[28] = 75
    set udg_CreepDescr[28] = "00"+"00"+"225"+"550"+"00" + "4"
    
    set udg_CreepTower[29] = 'h017'
    set udg_CreepWarrior[29] = 'o00A'
    set udg_CreepCost[29] = 100
    set udg_CreepDescr[29] = "08"+"03"+"197"+"650"+"00" + "3"
    
    set udg_CreepTower[30] = 'h018'
    set udg_CreepWarrior[30] = 'o00D'
    set udg_CreepCost[30] = 85
    set udg_CreepDescr[30] = "08"+"03"+"197"+"650"+"00" + "3"
    
    set udg_CreepTower[31] = 'h00N'
    set udg_CreepWarrior[31] = 'n00V'
    set udg_CreepCost[31] = 145
    set udg_CreepDescr[31] = "24"+"06"+"225"+"000"+"04" + "5"
    
    set udg_CreepTower[32] = 'h019'
    set udg_CreepWarrior[32] = 'n00W'
    set udg_CreepCost[32] = 200
    set udg_CreepDescr[32] = "24"+"06"+"210"+"000"+"04" + "6"
    
    set udg_CreepTower[33] = 'h01A'
    set udg_CreepWarrior[33] = 'n00X'
    set udg_CreepCost[33] = 190
    set udg_CreepDescr[33] = "25"+"03"+"210"+"420"+"03" + "5"
    
    set udg_CreepTower[34] = 'h012'
    set udg_CreepWarrior[34] = 'o003'
    set udg_CreepCost[34] = 140
    set udg_CreepDescr[34] = "20"+"03"+"210"+"510"+"02" + "3"
    
    set udg_CreepTower[35] = 'h015'
    set udg_CreepWarrior[35] = 'o008'
    set udg_CreepCost[35] = 215
    set udg_CreepDescr[35] = "34"+"03"+"210"+"000"+"07" + "6"
    
    set udg_CreepTower[36] = 'h01C'
    set udg_CreepWarrior[36] = 'o00G'
    set udg_CreepCost[36] = 400
    set udg_CreepDescr[36] = "25"+"03"+"185"+"000"+"07" + "8"
    
    //Uds
    
    set udg_CreepTower[37] = 'u00E'
    set udg_CreepWarrior[37] = 'n006'
    set udg_CreepCost[37] = 15
    set udg_CreepDescr[37] = "07"+"03"+"210"+"000"+"02" + "0"
    
    set udg_CreepTower[38] = 'u00L'
    set udg_CreepWarrior[38] = 'n000'
    set udg_CreepCost[38] = 60
    set udg_CreepDescr[38] = "08"+"03"+"200"+"000"+"02" + "0"
    
    set udg_CreepTower[39] = 'u00M'
    set udg_CreepWarrior[39] = 'n001'
    set udg_CreepCost[39] = 65
    set udg_CreepDescr[39] = "10"+"03"+"200"+"000"+"02" + "3"
    
    set udg_CreepTower[40] = 'u00F'
    set udg_CreepWarrior[40] = 'n003'
    set udg_CreepCost[40] = 40
    set udg_CreepDescr[40] = "05"+"03"+"175"+"600"+"00" + "2"
    
    set udg_CreepTower[41] = 'u00O'
    set udg_CreepWarrior[41] = 'n005'
    set udg_CreepCost[41] = 50
    set udg_CreepDescr[41] = "09"+"03"+"175"+"650"+"00" + "0"
    
    set udg_CreepTower[42] = 'u00N'
    set udg_CreepWarrior[42] = 'n004'
    set udg_CreepCost[42] = 90
    set udg_CreepDescr[42] = "00"+"00"+"165"+"580"+"00" + "4"
    
    set udg_CreepTower[43] = 'u00G'
    set udg_CreepWarrior[43] = 'u000'
    set udg_CreepCost[43] = 100
    set udg_CreepDescr[43] = "09"+"05"+"205"+"000"+"03" + "4"
    
    set udg_CreepTower[44] = 'u00P'
    set udg_CreepWarrior[44] = 'u001'
    set udg_CreepCost[44] = 150
    set udg_CreepDescr[44] = "13"+"02"+"190"+"000"+"04" + "5"
    
    set udg_CreepTower[45] = 'u00Q'
    set udg_CreepWarrior[45] = 'u002'
    set udg_CreepCost[45] = 125
    set udg_CreepDescr[45] = "09"+"05"+"205"+"000"+"03" + "4"
    
    set udg_CreepTower[46] = 'u00H'
    set udg_CreepWarrior[46] = 'u003'
    set udg_CreepCost[46] = 30
    set udg_CreepDescr[46] = "04"+"02"+"230"+"400"+"00" + "2"
    
    set udg_CreepTower[47] = 'u00R'
    set udg_CreepWarrior[47] = 'u004'
    set udg_CreepCost[47] = 60
    set udg_CreepDescr[47] = "06"+"03"+"170"+"450"+"00" + "3"
    
    set udg_CreepTower[48] = 'u00S'
    set udg_CreepWarrior[48] = 'u005'
    set udg_CreepCost[48] = 70
    set udg_CreepDescr[48] = "07"+"02"+"140"+"450"+"00" + "3"
    
    set udg_CreepTower[49] = 'u00I'
    set udg_CreepWarrior[49] = 'u007'
    set udg_CreepCost[49] = 100
    set udg_CreepDescr[49] = "19"+"09"+"195"+"000"+"03" + "4"
    
    set udg_CreepTower[50] = 'u00T'
    set udg_CreepWarrior[50] = 'u008'
    set udg_CreepCost[50] = 150
    set udg_CreepDescr[50] = "23"+"06"+"165"+"000"+"03" + "2"
    
    set udg_CreepTower[51] = 'u00U'
    set udg_CreepWarrior[51] = 'u009'
    set udg_CreepCost[51] = 125
    set udg_CreepDescr[51] = "19"+"06"+"180"+"470"+"03" + "3"
    
    set udg_CreepTower[52] = 'u00J'
    set udg_CreepWarrior[52] = 'u00A'
    set udg_CreepCost[52] = 170
    set udg_CreepDescr[52] = "33"+"06"+"190"+"700"+"02" + "5"
    
    set udg_CreepTower[53] = 'u00V'
    set udg_CreepWarrior[53] = 'u00B'
    set udg_CreepCost[53] = 300
    set udg_CreepDescr[53] = "22"+"05"+"188"+"000"+"05" + "6"
    
    set udg_CreepTower[54] = 'u00W'
    set udg_CreepWarrior[54] = 'u00C'
    set udg_CreepCost[54] = 360
    set udg_CreepDescr[54] = "24"+"05"+"135"+"000"+"02" + "2"
    
    //Elfs
    
    set udg_CreepTower[55] = 'e00H'
    set udg_CreepWarrior[55] = 'e001'
    set udg_CreepCost[55] = 40
    set udg_CreepDescr[55] = "09"+"03"+"162"+"500"+"00" + "2"
    
    set udg_CreepTower[56] = 'e00O'
    set udg_CreepWarrior[56] = 'e002'
    set udg_CreepCost[56] = 70
    set udg_CreepDescr[56] = "17"+"03"+"157"+"800"+"00" + "1"
    
    set udg_CreepTower[57] = 'e00P'
    set udg_CreepWarrior[57] = 'e003'
    set udg_CreepCost[57] = 100
    set udg_CreepDescr[57] = "14"+"04"+"162"+"225"+"01" + "0"
    
    set udg_CreepTower[58] = 'e00I'
    set udg_CreepWarrior[58] = 'n00P'
    set udg_CreepCost[58] = 50
    set udg_CreepDescr[58] = "10"+"03"+"180"+"000"+"01" + "0"
    
    set udg_CreepTower[59] = 'e00Q'
    set udg_CreepWarrior[59] = 'n00Q'
    set udg_CreepCost[59] = 100
    set udg_CreepDescr[59] = "17"+"03"+"170"+"000"+"03" + "4"
    
    set udg_CreepTower[60] = 'e00R'
    set udg_CreepWarrior[60] = 'n00R'
    set udg_CreepCost[60] = 100
    set udg_CreepDescr[60] = "12"+"03"+"170"+"000"+"03" + "4"
    
    set udg_CreepTower[61] = 'e00J'
    set udg_CreepWarrior[61] = 'e00A'
    set udg_CreepCost[61] = 45
    set udg_CreepDescr[61] = "07"+"02"+"215"+"000"+"00" + "0"
    
    set udg_CreepTower[62] = 'e00S'
    set udg_CreepWarrior[62] = 'e00B'
    set udg_CreepCost[62] = 125
    set udg_CreepDescr[62] = "31"+"06"+"215"+"000"+"03" + "5"
    
    set udg_CreepTower[63] = 'e00T'
    set udg_CreepWarrior[63] = 'e00C'
    set udg_CreepCost[63] = 105
    set udg_CreepDescr[63] = "15"+"04"+"195"+"000"+"04" + "0"
    
    set udg_CreepTower[64] = 'e00L'
    set udg_CreepWarrior[64] = 'e004'
    set udg_CreepCost[64] = 60
    set udg_CreepDescr[64] = "08"+"02"+"178"+"630"+"00" + "3"
    
    set udg_CreepTower[65] = 'e00U'
    set udg_CreepWarrior[65] = 'e005'
    set udg_CreepCost[65] = 80
    set udg_CreepDescr[65] = "13"+"03"+"160"+"630"+"00" + "4"
    
    set udg_CreepTower[66] = 'e00V'
    set udg_CreepWarrior[66] = 'e006'
    set udg_CreepCost[66] = 90
    set udg_CreepDescr[66] = "13"+"03"+"175"+"700"+"00" + "3"
    
    set udg_CreepTower[67] = 'e00X'
    set udg_CreepWarrior[67] = 'e009'
    set udg_CreepCost[67] = 95
    set udg_CreepDescr[67] = "15"+"07"+"190"+"515"+"03" + "4"
    
    set udg_CreepTower[68] = 'e00W'
    set udg_CreepWarrior[68] = 'e008'
    set udg_CreepCost[68] = 165
    set udg_CreepDescr[68] = "21"+"03"+"190"+"000"+"04" + "5"
    
    set udg_CreepTower[69] = 'e00K'
    set udg_CreepWarrior[69] = 'e007'
    set udg_CreepCost[69] = 260
    set udg_CreepDescr[69] = "25"+"03"+"161"+"600"+"03" + "6"
    
    set udg_CreepTower[70] = 'e00M'
    set udg_CreepWarrior[70] = 'e00D'
    set udg_CreepCost[70] = 120
    set udg_CreepDescr[70] = "27"+"04"+"285"+"000"+"03" + "0"
    
    set udg_CreepTower[71] = 'e00Z'
    set udg_CreepWarrior[71] = 'e00E'
    set udg_CreepCost[71] = 235
    set udg_CreepDescr[71] = "37"+"05"+"255"+"000"+"03" + "5"
    
    set udg_CreepTower[72] = 'e00Y'
    set udg_CreepWarrior[72] = 'e00F'
    set udg_CreepCost[72] = 230
    set udg_CreepDescr[72] = "18"+"04"+"265"+"000"+"03" + "0"
    
    //Naga
    set udg_CreepTower[73] = 'e016'
    set udg_CreepWarrior[73] = 'n010'
    set udg_CreepCost[73] = 50
    set udg_CreepDescr[73] = "10"+"02"+"177"+"000"+"01" + "0"
    
    set udg_CreepTower[74] = 'e017'
    set udg_CreepWarrior[74] = 'n011'
    set udg_CreepCost[74] = 70
    set udg_CreepDescr[74] = "12"+"03"+"177"+"340"+"02" + "3"
    
    set udg_CreepTower[75] = 'e01M'
    set udg_CreepWarrior[75] = 'n01C'
    set udg_CreepCost[75] = 100
    set udg_CreepDescr[75] = "19"+"04"+"173"+"000"+"02" + "3"
    
    set udg_CreepTower[76] = 'e01H'
    set udg_CreepWarrior[76] = 'n016'
    set udg_CreepCost[76] = 70
    set udg_CreepDescr[76] = "11"+"03"+"182"+"550"+"02" + "3"
    
    set udg_CreepTower[77] = 'e01I'
    set udg_CreepWarrior[77] = 'n017'
    set udg_CreepCost[77] = 220
    set udg_CreepDescr[77] = "16"+"03"+"145"+"420"+"02" + "6"
    
    set udg_CreepTower[78] = 'e01D'
    set udg_CreepWarrior[78] = 'n012'
    set udg_CreepCost[78] = 100
    set udg_CreepDescr[78] = "20"+"03"+"200"+"550"+"02" + "0"
    
    set udg_CreepTower[79] = 'e01J'
    set udg_CreepWarrior[79] = 'n019'
    set udg_CreepCost[79] = 80
    set udg_CreepDescr[79] = "09"+"02"+"182"+"380"+"01" + "4"
    
    set udg_CreepTower[80] = 'e01R'
    set udg_CreepWarrior[80] = 'n01J'
    set udg_CreepCost[80] = 125
    set udg_CreepDescr[80] = "00"+"00"+"240"+"350"+"03" + "4"
    
    set udg_CreepTower[81] = 'e01S'
    set udg_CreepWarrior[81] = 'n01I'
    set udg_CreepCost[81] = 145
    set udg_CreepDescr[81] = "13"+"03"+"182"+"000"+"05" + "5"
    
    set udg_CreepTower[82] = 'e01O'
    set udg_CreepWarrior[82] = 'n01E'
    set udg_CreepCost[82] = 50
    set udg_CreepDescr[82] = "07"+"03"+"175"+"430"+"00" + "2"
    
    set udg_CreepTower[83] = 'e01N'
    set udg_CreepWarrior[83] = 'n01D'
    set udg_CreepCost[83] = 95
    set udg_CreepDescr[83] = "00"+"00"+"100"+"430"+"00" + "4"
    
    set udg_CreepTower[84] = 'e01P'
    set udg_CreepWarrior[84] = 'n01G'
    set udg_CreepCost[84] = 140
    set udg_CreepDescr[84] = "12"+"03"+"175"+"550"+"00" + "4"
    
    set udg_CreepTower[85] = 'e01E'
    set udg_CreepWarrior[85] = 'n013'
    set udg_CreepCost[85] = 80
    set udg_CreepDescr[85] = "13"+"03"+"160"+"390"+"02" + "0"
    
    set udg_CreepTower[86] = 'e01G'
    set udg_CreepWarrior[86] = 'n015'
    set udg_CreepCost[86] = 195
    set udg_CreepDescr[86] = "13"+"04"+"160"+"300"+"04" + "0"
    
    set udg_CreepTower[87] = 'e01F'
    set udg_CreepWarrior[87] = 'n014'
    set udg_CreepCost[87] = 205
    set udg_CreepDescr[87] = "18"+"06"+"165"+"000"+"05" + "5"
    
    set udg_CreepTower[88] = 'e01K'
    set udg_CreepWarrior[88] = 'n01A'
    set udg_CreepCost[88] = 100
    set udg_CreepDescr[88] = "17"+"03"+"199"+"000"+"03" + "3"
    
    set udg_CreepTower[89] = 'e01L'
    set udg_CreepWarrior[89] = 'n01B'
    set udg_CreepCost[89] = 250
    set udg_CreepDescr[89] = "27"+"05"+"185"+"000"+"04" + "6"
    
    set udg_CreepTower[90] = 'e01Q'
    set udg_CreepWarrior[90] = 'n01H'
    set udg_CreepCost[90] = 400
    set udg_CreepDescr[90] = "20"+"06"+"195"+"000"+"06" + "7"
    
    //Demon
    
    set udg_CreepTower[91] = 'u00Y'
    set udg_CreepWarrior[91] = 'n01F'
    set udg_CreepCost[91] = 60
    set udg_CreepDescr[91] = "09"+"02"+"150"+"000"+"02" + "2"
    
    set udg_CreepTower[92] = 'u00Z'
    set udg_CreepWarrior[92] = 'n01L'
    set udg_CreepCost[92] = 150
    set udg_CreepDescr[92] = "16"+"02"+"150"+"000"+"04" + "3"
    
    set udg_CreepTower[93] = 'u010'
    set udg_CreepWarrior[93] = 'n01M'
    set udg_CreepCost[93] = 120
    set udg_CreepDescr[93] = "14"+"03"+"150"+"000"+"02" + "2"
    
    set udg_CreepTower[94] = 'u00D'
    set udg_CreepWarrior[94] = 'n00I'
    set udg_CreepCost[94] = 65
    set udg_CreepDescr[94] = "12"+"03"+"200"+"200"+"02" + "0"
    
    set udg_CreepTower[95] = 'u01E'
    set udg_CreepWarrior[95] = 'e000'
    set udg_CreepCost[95] = 150
    set udg_CreepDescr[95] = "18"+"05"+"195"+"500"+"02" + "3"
    
    set udg_CreepTower[96] = 'u017'
    set udg_CreepWarrior[96] = 'n00S'
    set udg_CreepCost[96] = 130
    set udg_CreepDescr[96] = "19"+"03"+"210"+"000"+"01" + "5"
    
    set udg_CreepTower[97] = 'u01B'
    set udg_CreepWarrior[97] = 'u01G'
    set udg_CreepCost[97] = 50
    set udg_CreepDescr[97] = "16"+"02"+"170"+"370"+"00" + "0"
    
    set udg_CreepTower[98] = 'u01C'
    set udg_CreepWarrior[98] = 'n00K'
    set udg_CreepCost[98] = 85
    set udg_CreepDescr[98] = "18"+"03"+"160"+"440"+"00" + "0"
    
    set udg_CreepTower[99] = 'u01D'
    set udg_CreepWarrior[99] = 'n01O'
    set udg_CreepCost[99] = 110
    set udg_CreepDescr[99] = "11"+"03"+"125"+"540"+"00" + "5"
    
    set udg_CreepTower[100] = 'u018'
    set udg_CreepWarrior[100] = 'e015'
    set udg_CreepCost[100] = 70
    set udg_CreepDescr[100] = "06"+"02"+"157"+"420"+"00" + "3"
    
    set udg_CreepTower[101] = 'u019'
    set udg_CreepWarrior[101] = 'n00M'
    set udg_CreepCost[101] = 80
    set udg_CreepDescr[101] = "06"+"02"+"157"+"420"+"00" + "2"
    
    set udg_CreepTower[102] = 'u01A'
    set udg_CreepWarrior[102] = 'n01P'
    set udg_CreepCost[102] = 90
    set udg_CreepDescr[102] = "06"+"02"+"157"+"625"+"00" + "4"
    
    set udg_CreepTower[103] = 'u011'
    set udg_CreepWarrior[103] = 'n00E'
    set udg_CreepCost[103] = 140
    set udg_CreepDescr[103] = "15"+"04"+"175"+"000"+"02" + "5"
    
    set udg_CreepTower[104] = 'u016'
    set udg_CreepWarrior[104] = 'n00J'
    set udg_CreepCost[104] = 225
    set udg_CreepDescr[104] = "17"+"06"+"175"+"000"+"03" + "6"
    
    set udg_CreepTower[105] = 'u012'
    set udg_CreepWarrior[105] = 'n00F'
    set udg_CreepCost[105] = 210
    set udg_CreepDescr[105] = "20"+"06"+"160"+"000"+"03" + "6"
    
    set udg_CreepTower[106] = 'u013'
    set udg_CreepWarrior[106] = 'n00G'
    set udg_CreepCost[106] = 200
    set udg_CreepDescr[106] = "08"+"03"+"176"+"610"+"02" + "5"
    
    set udg_CreepTower[107] = 'u015'
    set udg_CreepWarrior[107] = 'n00Z'
    set udg_CreepCost[107] = 280
    set udg_CreepDescr[107] = "00"+"00"+"250"+"570"+"02" + "5"
    
    set udg_CreepTower[108] = 'u014'
    set udg_CreepWarrior[108] = 'n00H'
    set udg_CreepCost[108] = 600
    set udg_CreepDescr[108] = "37"+"08"+"175"+"000"+"05" + "0"
    
    
    set udg_UTNR = 108
    
    

    set udg_CreepTower[109] = 'h00C'// Боевой кодой
    set udg_CreepWarrior[109] = 'o00L'
    set udg_CreepCost[109] = 90
    set udg_CreepDescr[109] = "12"+"02"+"215"+"600"+"01" + "0"
    
    set udg_CreepTower[110] = 'h01O'// Кодой-город
    set udg_CreepWarrior[110] = 'o00O'
    set udg_CreepCost[110] = 150
    set udg_CreepDescr[110] = "12"+"02"+"095"+"710"+"03" + "0"
    
    set udg_CreepTower[111] = 'U01H'// Герой наг
    set udg_CreepWarrior[111] = 'E01W'//'U01I'
    set udg_CreepCost[111] = 100
    set udg_CreepDescr[111] = "12"+"03"+"160"+"500"+"01" + "5"
    
    set udg_CreepTower[112] = 'u01L'// Паладин 1
    set udg_CreepWarrior[112] = 'h01N'
    set udg_CreepCost[112] = 105
    set udg_CreepDescr[112] = "14"+"03"+"215"+"000"+"02" + "3"
    
    set udg_CreepTower[113] = 'h01M'// Паладин 2
    set udg_CreepWarrior[113] = 'h01Q'
    set udg_CreepCost[113] = 125
    set udg_CreepDescr[113] = "14"+"03"+"215"+"000"+"02" + "4"
    
    set udg_CreepTower[114] = 'u01K'// Горный гигант
    set udg_CreepWarrior[114] = 'u01J'
    set udg_CreepCost[114] = 170
    set udg_CreepDescr[114] = "18"+"04"+"215"+"000"+"03" + "1"

    set udg_CreepTower[115] = 'u01O'// Подрывная бригада
    set udg_CreepWarrior[115] = 'n01N'
    set udg_CreepCost[115] = 30
    set udg_CreepDescr[115] = "00"+"00"+"200"+"000"+"00" + "0"

    set udg_CreepTower[116] = 'u01I'// Катапульта
    set udg_CreepWarrior[116] = 'n00O'
    set udg_CreepCost[116] = 150
    set udg_CreepDescr[116] = "07"+"02"+"190"+"700"+"02" + "2"

    set udg_CreepTower[117] = 'u01P'// Волшебный дракончик
    set udg_CreepWarrior[117] = 'n01Q'
    set udg_CreepCost[117] = 125
    set udg_CreepDescr[117] = "16"+"03"+"175"+"520"+"02" + "0"
    
    set udg_UTN = 117
    
endfunction


function Trig_CreepTipesWaves takes nothing returns nothing
    set udg_CreepsWaveNum=24//Кол-во вариаций
    // 1typesnum 3type 2num 3type 2num ... from melee to range. max num - 17
    
    //Wave 1
    set udg_CreepsWave[1]="100705"
    set udg_CreepsWave[2]="20130101401"
    set udg_CreepsWave[3]="20070300402"
    
    set udg_CreepsWave[4]="20190102101"
    set udg_CreepsWave[5]="102502"
    set udg_CreepsWave[6]="101904"
    
    set udg_CreepsWave[7]="3037020390204001"
    set udg_CreepsWave[8]="20430104002"
    set udg_CreepsWave[9]="20370505101"
    
    set udg_CreepsWave[10]="20590106001"
    set udg_CreepsWave[11]="20620106401"
    set udg_CreepsWave[12]="105702"
    
    set udg_CreepsWave[13]="108802"
    set udg_CreepsWave[14]="3079010760108201"
    set udg_CreepsWave[15]="108601"
    
    set udg_CreepsWave[16]="20920109701"
    set udg_CreepsWave[17]="109403"
    set udg_CreepsWave[18]="109802"
    
    set udg_CreepsWave[19]="20010500201"//new
    set udg_CreepsWave[20]="20370205201"
    set udg_CreepsWave[21]="107304"
    
    set udg_CreepsWave[22]="3094010970110101"
    set udg_CreepsWave[23]="20910310201"
    set udg_CreepsWave[24]="107502"
    
    //Wave 2
    set udg_CreepsWave[25]="20070500403"
    set udg_CreepsWave[26]="3013020140100701"
    set udg_CreepsWave[27]="20070201601"
    
    set udg_CreepsWave[28]="3019020210102401"
    set udg_CreepsWave[29]="3025020220102401"
    set udg_CreepsWave[30]="20190502001"
    
    set udg_CreepsWave[31]="403702043010390204001"
    set udg_CreepsWave[32]="20430204003"
    set udg_CreepsWave[33]="403705051010480104101"
    
    set udg_CreepsWave[34]="106003"
    set udg_CreepsWave[35]="20620206401"
    set udg_CreepsWave[36]="20720105502"
    
    set udg_CreepsWave[37]="3088020760108201"
    set udg_CreepsWave[38]="3079020760108201"
    set udg_CreepsWave[39]="3086010760108201"
    
    set udg_CreepsWave[40]="20920109703"
    set udg_CreepsWave[41]="20940409701"
    set udg_CreepsWave[42]="20920109802"
    
    set udg_CreepsWave[43]="3003050010100201"//new
    set udg_CreepsWave[44]="105301"
    set udg_CreepsWave[45]="107307"
    
    set udg_CreepsWave[46]="50370404901046020400104101"
    set udg_CreepsWave[47]="109202"
    set udg_CreepsWave[48]="20750207402"
    
    //Wave 3
    set udg_CreepsWave[49]="3009020070300405"
    set udg_CreepsWave[50]="3013020140100502"
    set udg_CreepsWave[51]="3007020160101201"
    
    set udg_CreepsWave[52]="401903021010240102301"
    set udg_CreepsWave[53]="3019010250202403"
    set udg_CreepsWave[54]="401901035010340102901"
    
    set udg_CreepsWave[55]="50370605101046020480204101"
    set udg_CreepsWave[56]="2043020400504102"
    set udg_CreepsWave[57]="20530105201"
    
    set udg_CreepsWave[58]="20580105904"
    set udg_CreepsWave[59]="3062020640106502"
    set udg_CreepsWave[60]="3061020720105602"
    
    set udg_CreepsWave[61]="3088020770108201"
    set udg_CreepsWave[62]="3079020760308202"
    set udg_CreepsWave[63]="3086010770108201"
    
    set udg_CreepsWave[64]="20920109502"
    set udg_CreepsWave[65]="20970609802"
    set udg_CreepsWave[66]="20920209802"
    
    set udg_CreepsWave[67]="401302015010040400601"//new
    set udg_CreepsWave[68]="403705038040460204101"
    set udg_CreepsWave[69]="3058010600305901"
    
    set udg_CreepsWave[70]="20190103302"
    set udg_CreepsWave[71]="407902088010760208201"
    set udg_CreepsWave[72]="409402097011010110601"
    
    //Wave 4
    set udg_CreepsWave[73]="400902007030040700801"
    set udg_CreepsWave[74]="50150101302014010050200701"
    set udg_CreepsWave[75]="400701017010120100801"
    
    set udg_CreepsWave[76]="50190302101022040240102301"
    set udg_CreepsWave[77]="3020030250202403"
    set udg_CreepsWave[78]="3035020340102901"
    
    set udg_CreepsWave[79]="6037070510104602048020410105201"
    set udg_CreepsWave[80]="20450204205"
    set udg_CreepsWave[81]="20530204101"
    
    set udg_CreepsWave[82]="3061010590206004"
    set udg_CreepsWave[83]="3062020720106403"
    set udg_CreepsWave[84]="3057040660205601"
    
    set udg_CreepsWave[85]="408802077010760208202"
    set udg_CreepsWave[86]="407902077010760208202"
    set udg_CreepsWave[87]="20860308201"
    
    set udg_CreepsWave[88]="3096020990110203"
    set udg_CreepsWave[89]="110801"
    set udg_CreepsWave[90]="409102105010990110601"
    
    set udg_CreepsWave[91]="400306017010020101101"//new
    set udg_CreepsWave[92]="401903020020230102901"
    set udg_CreepsWave[93]="407001061030620206701"
    
    set udg_CreepsWave[94]="403904038010100401101"
    set udg_CreepsWave[95]="3088040760308201"
    set udg_CreepsWave[96]="3094050940409702"
    
    //Wave 5
    set udg_CreepsWave[97]="3009060100400404"
    set udg_CreepsWave[98]="3015020130301403"
    set udg_CreepsWave[99]="3007060180101201"
    
    set udg_CreepsWave[100]="3020060240402301"
    set udg_CreepsWave[101]="6020010190203601022020230102901"
    set udg_CreepsWave[102]="403102019020330202301"
    
    set udg_CreepsWave[103]="50370404303046020410205202"
    set udg_CreepsWave[104]="403704044030460304704"
    set udg_CreepsWave[105]="403706053020460404101"
    
    set udg_CreepsWave[106]="6070010690106801063010680105501"
    set udg_CreepsWave[107]="50700107101072010630105602"
    set udg_CreepsWave[108]="3057040670106604"
    
    set udg_CreepsWave[109]="3089020740108303"
    set udg_CreepsWave[110]="50810207701076010780308201"
    set udg_CreepsWave[111]="407901087020770108401"
    
    set udg_CreepsWave[112]="50910210501097050990110002"
    set udg_CreepsWave[113]="3108011010110101"
    set udg_CreepsWave[114]="51030210401100020990110601"
    
    set udg_CreepsWave[115]="400708008030110101201"//new840
    set udg_CreepsWave[116]="50190402002115031150411505"
    set udg_CreepsWave[117]="3071010610206204"
    
    set udg_CreepsWave[118]="3037020530205201"
    set udg_CreepsWave[119]="407308075020770101101"
    set udg_CreepsWave[120]="409604097020980109901"
    
    //Wave 6
    set udg_CreepsWave[121]="50090601004012010040500801"
    set udg_CreepsWave[122]="6015020130301402012010040300801"
    set udg_CreepsWave[123]="50070601801011020120100801"
    
    set udg_CreepsWave[124]="402006024060230103001"
    set udg_CreepsWave[125]="50200503601028020230102901"
    set udg_CreepsWave[126]="6032020190303302023010290103001"
    
    set udg_CreepsWave[127]="6037080430305101046060400804101"
    set udg_CreepsWave[128]="80370503902049020500105101046040480204103"
    set udg_CreepsWave[129]="50370603802053020460405201"
    
    set udg_CreepsWave[130]="6070010570206301055010690105605"
    set udg_CreepsWave[131]="6070010710107201063010550105605" 
    set udg_CreepsWave[132]="50700106108067010550106506"
    
    set udg_CreepsWave[133]="407902090010740108305"
    set udg_CreepsWave[134]="408103088010760207804"
    set udg_CreepsWave[135]="408602090010770108202"
    
    set udg_CreepsWave[136]="6092021050109705099010980110002"
    set udg_CreepsWave[137]="51080109302101011010110101"
    set udg_CreepsWave[138]="50910810501093010990110701"
    
    set udg_CreepsWave[139]="3009090080301101"//new1080
    set udg_CreepsWave[140]="407902043030330204803"
    set udg_CreepsWave[141]="407101062050630106701"
    
    set udg_CreepsWave[142]="50370405302046020520105001"
    set udg_CreepsWave[143]="407308075030770101102"
    set udg_CreepsWave[144]="50940210801099011010110102"
    
    //Wave 7
    set udg_CreepsWave[145]="6009060100601201004060060200801"
    set udg_CreepsWave[146]="701502013030100401402012010040400801"
    set udg_CreepsWave[147]="50070501702012010040400801"
    
    set udg_CreepsWave[148]="402006033020240602301"
    set udg_CreepsWave[149]="702004036010250202802026010230102901"
    set udg_CreepsWave[150]="701901027020250103303026010230103001"
    
    set udg_CreepsWave[151]="80370804302045010510104606042060400104102"
    set udg_CreepsWave[152]="6037060440204901047050480604103"
    set udg_CreepsWave[153]="703707037080510104704054010410105202"
    
    set udg_CreepsWave[154]="707001057040630106901055010670105605"
    set udg_CreepsWave[155]="707001071010720106301064030670106505" 
    set udg_CreepsWave[156]="80700106801063010680106602069020550105601"
    
    set udg_CreepsWave[157]="50890209001080010760207802"
    set udg_CreepsWave[158]="50810307902077010800508201"
    set udg_CreepsWave[159]="6087020900107701076020780108202"
    
    set udg_CreepsWave[160]="6108010930110102101011000210701"
    set udg_CreepsWave[161]="405904060040670101008"
    set udg_CreepsWave[162]="6007030180101701023010290105001"
    
    set udg_CreepsWave[163]="20160401801"//new1370 165
    set udg_CreepsWave[164]="20340603407"
    set udg_CreepsWave[165]="105305"
    
    set udg_CreepsWave[166]="50680106801068020680306803"
    set udg_CreepsWave[167]="3075080750707401"
    set udg_CreepsWave[168]="3098090980809901"
    
    //Wave 8
    set udg_CreepsWave[169]="700308002020160201801004050060400801"
    set udg_CreepsWave[170]="701502013030100501404012010040500801"
    set udg_CreepsWave[171]="6007060160101702012010040400801"
    
    set udg_CreepsWave[172]="6020060330202406026010230103001"
    set udg_CreepsWave[173]="702004036010250202804026010230102902"
    set udg_CreepsWave[174]="403504034040230102902"
    
    set udg_CreepsWave[175]="703706045030460404901042060410205202"
    set udg_CreepsWave[176]="6037080440304902047040480804102"
    set udg_CreepsWave[177]="9037070370805101046050470405401041010520205001"
    
    set udg_CreepsWave[178]="6059040600406701063010110101010"
    set udg_CreepsWave[179]="9070010710107201063010640306901055010650506701"
    set udg_CreepsWave[180]="407001062080710106301"
    
    set udg_CreepsWave[181]="50890209001080010760207805"
    set udg_CreepsWave[182]="50810309001077010830408402"
    set udg_CreepsWave[183]="6087030860209001074010780508202"
    
    set udg_CreepsWave[184]="710801093011010210002097080980210101"
    set udg_CreepsWave[185]="6104021050110103099011000210602"
    set udg_CreepsWave[186]="6079030810209001080010780410701"
    
    set udg_CreepsWave[187]="403709038040170201801"//new1670
    set udg_CreepsWave[188]="9001080010700203011010330302301029020280105202"
    set udg_CreepsWave[189]="80370804503054010460604006041010520105001"
    
    set udg_CreepsWave[190]="6061070570505501065020660405604"
    set udg_CreepsWave[191]="708103089020770108001076020790107802"
    set udg_CreepsWave[192]="9092021030210501104010960209705098020990109301"
    
    //Wave 9
    set udg_CreepsWave[193]="700308002020170201801004030060600801"
    set udg_CreepsWave[194]="701503013040100601402012010050500801"
    set udg_CreepsWave[195]="20180101704"
    
    set udg_CreepsWave[196]="702005031020330402802026010230103002"
    set udg_CreepsWave[197]="80200403601027020280602601023010290103002"
    set udg_CreepsWave[198]="6035040340402502023010290203001"
    
    set udg_CreepsWave[199]="9037050450304604049010540105001042040410205202"
    set udg_CreepsWave[200]="703708044040490204606047040480804102"
    set udg_CreepsWave[201]="9037160430305101046060470405401041010520205001"
    
    set udg_CreepsWave[202]="705904060050670106301072010110101010"
    set udg_CreepsWave[203]="707002071010720106301069020670105608"
    set udg_CreepsWave[204]="80680106801063010680206605068030550106504"
    
    set udg_CreepsWave[205]="708102089020900108001076020780507301"
    set udg_CreepsWave[206]="50810309001077010830408404"
    set udg_CreepsWave[207]="80870308602090010740109901078050820210003"
    
    set udg_CreepsWave[208]="9092021050110801093011000209901097050980110701"
    set udg_CreepsWave[209]="81040210501091030990110002097070980210701"
    set udg_CreepsWave[210]="709603105011080109501100021020509101"
    
    set udg_CreepsWave[211]="80130600309002030160201801011010120100801"//new2000
    set udg_CreepsWave[212]="80190902702036010260103302022020230102901"
    set udg_CreepsWave[213]="9037100370704906051010540104608047040500105201"
    
    set udg_CreepsWave[214]="80700206105057020720106901067010650405606"
    set udg_CreepsWave[215]="6081030880309001077010820108306"
    set udg_CreepsWave[216]="9092021030210501104010960209710098030990109301"
    
    //Wave 10
    set udg_CreepsWave[217]="80030800202013030170201801004050060600801"
    set udg_CreepsWave[218]="701503013040100601402012010050900801"
    set udg_CreepsWave[219]="700904018010170201602010010120100801"
    
    set udg_CreepsWave[220]="9020050360103102033040220102802026010230103001"
    set udg_CreepsWave[221]="9020040360102702028060240402601023010290103002"
    set udg_CreepsWave[222]="703504034040250203302023010290203001"
    
    set udg_CreepsWave[223]="9037110450304604049010540105001042070410205202"
    set udg_CreepsWave[224]="80370704404054010490204606047040480804102"
    set udg_CreepsWave[225]="703706043030530304604040100410105203"
    
    set udg_CreepsWave[226]="80700105706067010660506301069010650705602"
    set udg_CreepsWave[227]="80700306104071010720106301069020670105609"
    set udg_CreepsWave[228]="701801108010900107201036010230105001"
    
    set udg_CreepsWave[229]="708102089020900107701076030780608401"
    set udg_CreepsWave[230]="6081040900107701074020830608403"
    set udg_CreepsWave[231]="708703073040900107701080050780208202"
    
    set udg_CreepsWave[232]="9092021050110801099010930110002097061070110602"
    set udg_CreepsWave[233]="81030310501104011080109901100021060110206"
    set udg_CreepsWave[234]="80960410501095011080110004099010970809801"
    
    set udg_CreepsWave[235]="50090800809016010101101102"//new2360
    set udg_CreepsWave[236]="6019020360103506034030230102904"
    set udg_CreepsWave[237]="403704053080410105202"
    
    set udg_CreepsWave[238]="50610407001072080710205605"
    set udg_CreepsWave[239]="3087070860508508"
    set udg_CreepsWave[240]="703706108020900104904023020500102901"
endfunction

function AllSpellsAndLevelsSetOne takes integer id, integer lvl returns nothing
    set udg_AllSpellsCount=udg_AllSpellsCount+1
    set udg_AllSpellsSpell[udg_AllSpellsCount]=id
    set udg_AllSpellsLevel[udg_AllSpellsCount]=lvl
endfunction

function AllSpellsAndLevelsSetAll takes nothing returns nothing
    set udg_AllSpellsCount = 0
    
    call AllSpellsAndLevelsSetOne('A0BV',5)// Демон (кроме дамми-скилла портала)
    call AllSpellsAndLevelsSetOne('A0B0',5)
    call AllSpellsAndLevelsSetOne('A0B6',5)
    call AllSpellsAndLevelsSetOne('A01V',5)
    call AllSpellsAndLevelsSetOne('A0CZ',3)
    call AllSpellsAndLevelsSetOne('A0G1',5)
    call AllSpellsAndLevelsSetOne('A0G4',5)
    call AllSpellsAndLevelsSetOne('A0G5',5)
    
    call AllSpellsAndLevelsSetOne('A108',5)// Альянс (базовые)
    call AllSpellsAndLevelsSetOne('A0AY',5)
    call AllSpellsAndLevelsSetOne('A05K',5)
    call AllSpellsAndLevelsSetOne('A069',5)
    call AllSpellsAndLevelsSetOne('A106',5)
    
    call AllSpellsAndLevelsSetOne('A09F',5)// Орда (базовые)
    call AllSpellsAndLevelsSetOne('A08Q',5)
    call AllSpellsAndLevelsSetOne('A107',5)
    call AllSpellsAndLevelsSetOne('A09L',5)
    
    call AllSpellsAndLevelsSetOne('A02E',5)// Нежить (базовые)
    call AllSpellsAndLevelsSetOne('A05L',5)
    call AllSpellsAndLevelsSetOne('A01M',5)
    call AllSpellsAndLevelsSetOne('A01Z',5)
    
    call AllSpellsAndLevelsSetOne('A074',5)// Эльф (базовые)
    call AllSpellsAndLevelsSetOne('A05X',5)
    call AllSpellsAndLevelsSetOne('A05D',5)
    call AllSpellsAndLevelsSetOne('A01L',5)
    
    call AllSpellsAndLevelsSetOne('A05A',5)// Нага (базовые)
    call AllSpellsAndLevelsSetOne('A05C',5)
    call AllSpellsAndLevelsSetOne('A109',5)
    call AllSpellsAndLevelsSetOne('A05E',5)
    
    call AllSpellsAndLevelsSetOne('A0FY',5)// Скиллы от пассивок
    call AllSpellsAndLevelsSetOne('A0GH',5)
    //call AllSpellsAndLevelsSetOne('A0DQ',3) items
    /////////////////G7 G8 AI
    call AllSpellsAndLevelsSetOne('A0DO',5)
    //call AllSpellsAndLevelsSetOne('A0FC',1)
    //call AllSpellsAndLevelsSetOne('A05Y',1)
    call AllSpellsAndLevelsSetOne('A066',5)
    call AllSpellsAndLevelsSetOne('A043',5)
    call AllSpellsAndLevelsSetOne('A025',5)
    //call AllSpellsAndLevelsSetOne('A09K',1)
    call AllSpellsAndLevelsSetOne('A05O',5)
    call AllSpellsAndLevelsSetOne('A01W',3)
    
    call AllSpellsAndLevelsSetOne('A0GJ',5)// ДУБЛИ
    //call AllSpellsAndLevelsSetOne('A0GK',5)
    call AllSpellsAndLevelsSetOne('A0GL',5)
    call AllSpellsAndLevelsSetOne('A0GM',5)
    call AllSpellsAndLevelsSetOne('A0GN',5)
    //call AllSpellsAndLevelsSetOne('A0GO',3) items
    //call AllSpellsAndLevelsSetOne('A0GP',3)
    //call AllSpellsAndLevelsSetOne('A0GQ',3)
    //call AllSpellsAndLevelsSetOne('A0GR',3)
    call AllSpellsAndLevelsSetOne('A0GS',3)
    call AllSpellsAndLevelsSetOne('A0GT',5)
    call AllSpellsAndLevelsSetOne('A0GU',5)
    //call AllSpellsAndLevelsSetOne('A0GV',5)
    call AllSpellsAndLevelsSetOne('A0GW',5)
    //call AllSpellsAndLevelsSetOne('A0GX',5)
    //call AllSpellsAndLevelsSetOne('A0GY',1)
    call AllSpellsAndLevelsSetOne('A0HP',5)//FACEPAM
    call AllSpellsAndLevelsSetOne('A0HQ',3)
endfunction

function CreateDemonstrUnits takes nothing returns nothing
    local integer i = 2
    local integer racenum = 1
    local real x = -5632
    local real y = 10624
    local playercolor array racecolor
    local unit u
    local unit t

    set racecolor[1] = ConvertPlayerColor(1)
    set racecolor[2] = ConvertPlayerColor(0)
    set racecolor[3] = ConvertPlayerColor(4)
    set racecolor[4] = ConvertPlayerColor(3)
    set racecolor[5] = ConvertPlayerColor(2)
    set racecolor[6] = ConvertPlayerColor(5)
    loop
        exitwhen racenum>6
        set u = CreateUnit(Player(15),udg_CreepTower[racenum*18-17], x + 128 + racenum*2432 - racenum/4*7296, y - racenum/4*1088, 270)
        call SetUnitColor(u,racecolor[racenum])
        loop
            exitwhen i>18
            set u = CreateUnit(Player(15),udg_CreepTower[(racenum-1)*18+i], x + i*128 + (i-1)/3*128 - i/10*1536 + racenum*2432 - racenum/4*7296, y - i/10*320 - racenum/4*1088, 270)
            call SetUnitColor(u,racecolor[racenum])
            set i=i+1
        endloop
        set i=2
        set racenum=racenum+1
    endloop
    
    // HUMAN
    set u = CreateUnit(Player(15),udg_CreepTower[112], x + 192 + 2432, y + 256, 270)
    call SetUnitColor(u,racecolor[1])
    set u = CreateUnit(Player(15),udg_CreepTower[113], x + 384 + 2432, y + 256, 270)
    call SetUnitColor(u,racecolor[1])
    
    // ORC
    set u = CreateUnit(Player(15),udg_CreepTower[109], x + 128 + 2*2432, y + 256, 270)
    call SetUnitColor(u,racecolor[2])
    set u = CreateUnit(Player(15),udg_CreepTower[110], x + 320 + 2*2432, y + 256, 270)
    call SetUnitColor(u,racecolor[2])
    set u = CreateUnit(Player(15),udg_CreepTower[115], x + 512 + 2*2432, y + 256, 270)
    call SetUnitColor(u,racecolor[2])
    set u = CreateUnit(Player(15),udg_CreepTower[116], x + 704 + 2*2432, y + 256, 270)
    call SetUnitColor(u,racecolor[2])
    
    // ELF
    set u = CreateUnit(Player(15),udg_CreepTower[114], x + 128 + 2432, y + 256 - 1088, 270)
    call SetUnitColor(u,racecolor[4])
    
    // NAGA
    set u = CreateUnit(Player(15),udg_CreepTower[111], x + 128 + 2*2432, y + 256 - 1088, 270)
    call SetUnitColor(u,racecolor[5])
    call SetUnitAbilityLevel(u,'A0F5',4)
    
    // DEMON
    set u = CreateUnit(Player(15),udg_CreepTower[117], x + 128 + 3*2432, y + 256 - 1088, 270)
    call SetUnitColor(u,racecolor[6])
    
    set racecolor[6] = null
    set racecolor[5] = null
    set racecolor[4] = null
    set racecolor[3] = null
    set racecolor[2] = null
    set racecolor[1] = null
    set u = null
    set t = null
endfunction

function IsPassChosenByPlayer takes integer p, integer i returns boolean
    if udg_PassChosenByPlayer[p]==i then
        return true
    elseif udg_PassChosenByPlayer[p+6]==i then
        return true
    else
        return udg_PassChosenByPlayer[p+12]==i
    endif
endfunction

function NumPassChosenByPlayer takes integer p returns integer
    local integer i = 0
    if udg_PassChosenByPlayer[p]>0 then
        set i=i+1
    endif
    if udg_PassChosenByPlayer[p+6]>0 then
        set i=i+1
    endif
    if udg_PassChosenByPlayer[p+12]>0 then
        set i=i+1
    endif
    return i
endfunction

function PlayerSlot takes integer i returns player
    return udg_PlayerSlotMass[i+1]
endfunction

function GetPlayerSlotId takes player p returns integer
    return udg_PlayerSlotId[GetPlayerId(p)+1]
endfunction

function XplusOne takes nothing returns nothing
    set udg_int = udg_int+1
endfunction

function DELETE takes nothing returns nothing
endfunction

function RemoveWarriors takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i=1
    loop
        exitwhen i>6
        call GroupRemoveUnit(udg_PlayerCreepsGroup[i],u)
        call GroupRemoveUnit(udg_PlayerWarriorsGroup[i],u)
        set i=i+1
    endloop
    call RemoveUnit(u)
    set u = null
endfunction

function BlueTurtleAndOtherSurvivors takes nothing returns nothing
    local integer a = 0
    local integer i
    local integer n
    local integer k
    local integer lvlhum
    local integer lvlelf1
    local integer lvlelf2
    local integer lvlnaga
    local integer lvlspellorc
    local integer lvlspellund
    local boolean b
    local player p
    local real x
    local real y
    local real z
    loop
        exitwhen a>5
        set i = 1
        set b = false
        loop
            exitwhen i>udg_BlueTurtleNum
            if GetOwningPlayer(udg_BlueTurtleTower[i])==PlayerSlot(a) and GetUnitState(udg_BlueTurtleWarrior[i],UNIT_STATE_LIFE)>0 then
                set b = true
            endif
            set i=i+1
        endloop
        if b then
            set i=1
            loop
                exitwhen i>udg_BlueTurtleNum
                if GetOwningPlayer(udg_BlueTurtleTower[i])==PlayerSlot(a) then
		            if GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3')==3 then
			            set p = GetOwningPlayer(udg_BlueTurtleTower[i])
			            set x = GetUnitX(udg_BlueTurtleTower[i])
			            set y = GetUnitY(udg_BlueTurtleTower[i])
			            set z = GetUnitFacing(udg_BlueTurtleTower[i])
                        
                        set lvlspellorc = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A05P')
                        set lvlspellund = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0GI')
                        set lvlhum = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0D0')
                        set lvlelf1 = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A06E')
                        set lvlelf2 = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A07G')
                        set lvlnaga = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0B3')
                        
                        set n = 0
                        set k = 1
                        loop
                            exitwhen k>udg_NagaBuildingNum
                            if udg_NagaBuildingU[k]==udg_BlueTurtleTower[i] then
                                set n = k
                                set k = udg_NagaBuildingNum
                            endif
                            set k=k+1
                        endloop
			            call RemoveUnit(udg_BlueTurtleTower[i])
                        set udg_BlueTurtleTower[i]=CreateUnit(p,'e01G',x,y,z)
                        
                        if lvlspellorc>0 then
                            call UnitAddAbility(udg_BlueTurtleTower[i],'A054')
                        endif
                        if lvlspellund>1 then
                            call UnitAddAbility(udg_BlueTurtleTower[i],'A0GI')
                            if lvlspellund==3 then
                                call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0GI',2)
                            endif
                        endif
                        
                        call UnitAddAbility(udg_BlueTurtleTower[i],'A0D0')
                        call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0D0',lvlhum)
                                        
                        call UnitAddAbility(udg_BlueTurtleTower[i],'A06E')
                        call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A06E',lvlelf1)
                        
                        call UnitAddAbility(udg_BlueTurtleTower[i],'A07G')
                        call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A07G',lvlelf2)
                        
                        call UnitAddAbility(udg_BlueTurtleTower[i],'A0B4')
                        call UnitAddAbility(udg_BlueTurtleTower[i],'A0B3')
                        set k = (R2I( I2R(udg_NagaBuildingPC[n])/I2R(udg_CreepCost[86])*100+2.5 ) )/5+1
                        if k>21 then
                            set k=21
                        endif
                        call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0B3',k)
                        set udg_NagaBuildingU[n] = udg_BlueTurtleTower[i]
                        
		            else
                        call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3',GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3')+1)
		            endif
                endif
                set i=i+1
            endloop
	    endif
        set a=a+1
    endloop
    loop
        exitwhen udg_BlueTurtleNum==0
        set udg_BlueTurtleTower[udg_BlueTurtleNum]=null
        set udg_BlueTurtleWarrior[udg_BlueTurtleNum]=null
        set udg_BlueTurtleNum=udg_BlueTurtleNum-1
    endloop
    set p = null
endfunction

function BlueTurtleAndOtherSurvivorsSolo takes integer pn returns nothing
    local integer i = 1
    local integer lvlhum
    local integer lvlelf1
    local integer lvlelf2
    local integer lvlnaga
    local integer lvlspellorc
    local integer lvlspellund
    local integer a
    local integer n
    local integer k
    local boolean b = false
    local player p
    local real x
    local real y
    local real z
    local unit u

    loop
        exitwhen i>udg_BlueTurtleNum
        if GetOwningPlayer(udg_BlueTurtleTower[i])==PlayerSlot(pn-1) and GetUnitState(udg_BlueTurtleWarrior[i],UNIT_STATE_LIFE)>0 then
            set b = true
	    endif
        set i=i+1
    endloop

    if b then
        set i=1
        loop
            exitwhen i>udg_BlueTurtleNum
            if GetOwningPlayer(udg_BlueTurtleTower[i])==PlayerSlot(pn-1) then
		        if GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3')==3 then
		            set p = GetOwningPlayer(udg_BlueTurtleTower[i])
		            set x = GetUnitX(udg_BlueTurtleTower[i])
		            set y = GetUnitY(udg_BlueTurtleTower[i])
		            set z = GetUnitFacing(udg_BlueTurtleTower[i])
                    set a = pn-1
                    
                    set lvlspellorc = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A05P')
                    set lvlspellund = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0GI')
                    set lvlhum = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0D0')
                    set lvlelf1 = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A06E')
                    set lvlelf2 = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A07G')
                    set lvlnaga = GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0B3')
                    
                    set n = 0
                    set k = 1
                    loop
                        exitwhen k>udg_NagaBuildingNum
                        if udg_NagaBuildingU[k]==udg_BlueTurtleTower[i] then
                            set n = k
                            set k = udg_NagaBuildingNum
                        endif
                        set k=k+1
                    endloop
                    
		            call RemoveUnit(udg_BlueTurtleTower[i])
                    set u = CreateUnit(p,'e01G',x,y,z)
                    
                    if lvlspellorc>0 then
                        call UnitAddAbility(u,'A054')
                    endif
                    if lvlspellund>1 then
                        call UnitAddAbility(u,'A0GI')
                        if lvlspellund==3 then
                            call SetUnitAbilityLevel(u,'A0GI',2)
                        endif
                    endif
                        
                    call UnitAddAbility(u,'A0D0')
                    call SetUnitAbilityLevel(u,'A0D0',lvlhum)
                                    
                    call UnitAddAbility(u,'A06E')
                    call SetUnitAbilityLevel(u,'A06E',lvlelf1)
                    
                    call UnitAddAbility(u,'A07G')
                    call SetUnitAbilityLevel(u,'A07G',lvlelf2)
                    
                    call UnitAddAbility(u,'A0B4')
                    call UnitAddAbility(u,'A0B3')
                    set k = (R2I( I2R(udg_NagaBuildingPC[n])/I2R(udg_CreepCost[86])*100+2.5 ) )/5+1
                    if k>21 then
                        set k=21
                    endif
                    call SetUnitAbilityLevel(u,'A0B3',k)
                    set udg_NagaBuildingU[n] = u
		            set u = null
		        else
                    call SetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3',GetUnitAbilityLevel(udg_BlueTurtleTower[i],'A0A3')+1)
		        endif

        	    set udg_BlueTurtleTower[i]=udg_BlueTurtleTower[udg_BlueTurtleNum]
        	    set udg_BlueTurtleWarrior[i]=udg_BlueTurtleWarrior[udg_BlueTurtleNum]
        	    set udg_BlueTurtleTower[udg_BlueTurtleNum]=null
        	    set udg_BlueTurtleWarrior[udg_BlueTurtleNum]=null
        	    set udg_BlueTurtleNum=udg_BlueTurtleNum-1
            	set i=i-1
            endif
            set i=i+1
        endloop
    else
        set i=1
        loop
            exitwhen i>udg_BlueTurtleNum
            if GetOwningPlayer(udg_BlueTurtleTower[i])==PlayerSlot(pn-1) then
        	    set udg_BlueTurtleTower[i]=udg_BlueTurtleTower[udg_BlueTurtleNum]
        	    set udg_BlueTurtleWarrior[i]=udg_BlueTurtleWarrior[udg_BlueTurtleNum]
        	    set udg_BlueTurtleTower[udg_BlueTurtleNum]=null
        	    set udg_BlueTurtleWarrior[udg_BlueTurtleNum]=null
        	    set udg_BlueTurtleNum=udg_BlueTurtleNum-1
            	set i=i-1
            endif
            set i=i+1
        endloop
    endif

    set p = null
endfunction

function GetNewValPeasantAbilityLvl takes unit lowered returns nothing
    local integer innerlvl = GetUnitAbilityLevel(lowered,'A046')
    local integer taken = GetUnitAbilityLevel(lowered,'A0IT')
    if taken==1 then
        call UnitRemoveAbility(lowered,'A0IT')
        call SetUnitAbilityLevel(lowered,'A046',innerlvl+1)
    else
        call SetUnitAbilityLevel(lowered,'A0IT',taken-1)
        call SetUnitAbilityLevel(lowered,'A046',innerlvl+2)
    endif
    //call DisplayTextToPlayer(Player(0),0,0,"A0IT="+I2S(GetUnitAbilityLevel(lowered,'A0IT')))
    //call DisplayTextToPlayer(Player(0),0,0,"A046="+I2S(GetUnitAbilityLevel(lowered,'A046')))
endfunction

function GetNewValPeasantAbilityFirstBuild takes unit lowered returns nothing
    local integer innerlvl = 1//GetUnitAbilityLevel(lowered,'A046')
    local integer taken = GetUnitAbilityLevel(lowered,'A0IT')
    local integer times = 6//7-innerlvl
    local integer lowedlevel = 0
    local integer i = 1
    //call DisplayTextToPlayer(Player(0),0,0,"taken="+I2S(taken))
    loop
        exitwhen taken<times
        if taken>=times then
            set taken=taken-times
            set lowedlevel=lowedlevel+1
            set times=6-lowedlevel/2
        endif
        set i=i+1
    endloop
    if taken>0 then
        call SetUnitAbilityLevel(lowered,'A0IT',taken)
        call SetUnitAbilityLevel(lowered,'A046',1+lowedlevel+1)
    else
        call UnitRemoveAbility(lowered,'A0IT')
        call SetUnitAbilityLevel(lowered,'A046',1+lowedlevel)
    endif
    //call DisplayTextToPlayer(Player(0),0,0,"A0IT="+I2S(taken))
    //call DisplayTextToPlayer(Player(0),0,0,"A046="+I2S(1+lowedlevel))
    //call DisplayTextToPlayer(Player(0),0,0,"i="+I2S(i))
endfunction

function RemoveKataSpells takes unit u returns nothing
    local integer i = 1
    //call DisplayTextToPlayer(Player(0),0,0,"go")
    call UnitRemoveAbility(u,'A0IQ')
    loop
        exitwhen i>udg_KataTowerCount
        if udg_KataTowerThrower[i]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            call UnitRemoveAbility(udg_KataTowerTarget[i*4],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-1],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-2],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-3],'A0IQ')
            set udg_KataTowerThrower[i]=udg_KataTowerThrower[udg_KataTowerCount]
            set udg_KataTowerTarget[i*4] = udg_KataTowerTarget[udg_KataTowerCount*4]
            set udg_KataTowerTarget[i*4-1]=udg_KataTowerTarget[udg_KataTowerCount*4-1]
            set udg_KataTowerTarget[i*4-2]=udg_KataTowerTarget[udg_KataTowerCount*4-2]
            set udg_KataTowerTarget[i*4-3]=udg_KataTowerTarget[udg_KataTowerCount*4-3]
            set udg_KataTowerCount=udg_KataTowerCount-1
            set i = udg_KataTowerCount
        elseif udg_KataTowerTarget[i*4]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerTarget[i*4-1]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-1]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerTarget[i*4-2]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-2]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerTarget[i*4-3]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-3]=null
            set i = udg_KataTowerCount
        endif
        set i=i+1
    endloop
endfunction                          

function TowerBack takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i
    call ShowUnit(u, true)
    call GroupRemoveUnit(udg_PlayerTowersGroup[udg_IntegerX],u)
    call UnitRemoveAbility(u,'A090')
    call UnitRemoveAbility(u,'A08F')
    if GetUnitAbilityLevel(u,'A05P')>0 then
	    call UnitRemoveAbility(u,'A05P')
    else
	    call UnitRemoveAbility(u,'A054')
    endif
    if GetUnitAbilityLevel(u,'A0GI')>0 then
        if GetUnitAbilityLevel(u,'A0GI')>1 then
            if GetUnitAbilityLevel(u,'A0GI')>2 then
                call SetUnitAbilityLevel(u,'A0GI',2)
            else
                call SetUnitAbilityLevel(u,'A0GI',1)
            endif
        else
            call UnitRemoveAbility(u,'A0GI')
        endif
    endif
    if udg_Lives[GetPlayerSlotId(GetOwningPlayer(u))+1]!=0 then
        if (GetUnitTypeId(u)=='h00D' or GetUnitTypeId(u)=='h00Q') and GetUnitAbilityLevel(u,'A045')<7 then
            call SetPlayerState(GetOwningPlayer(u),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(GetOwningPlayer(u),PLAYER_STATE_RESOURCE_GOLD)+7-GetUnitAbilityLevel(u,'A045'))
            call SetUnitAbilityLevel(u,'A045',GetUnitAbilityLevel(u,'A045')+1)
        else
            if GetUnitTypeId(u)=='h00P' and GetUnitAbilityLevel(u,'A046')<13 then
                call SetPlayerState(GetOwningPlayer(u),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(GetOwningPlayer(u),PLAYER_STATE_RESOURCE_GOLD)+13-GetUnitAbilityLevel(u,'A046'))
                if GetUnitAbilityLevel(u,'A0IT')>0 then
                    call GetNewValPeasantAbilityLvl(u)
                    //call SetUnitAbilityLevel(u,'A0IT',GetUnitAbilityLevel(u,'A0IT')+13-GetUnitAbilityLevel(u,'A046'))
                    //call SetUnitAbilityLevel(u,'A046',GetNewValPeasantAbilityLvl(GetUnitAbilityLevel(u,'A0IT')))
                else
                    if GetUnitAbilityLevel(u,'A046')<12 then
                        call SetUnitAbilityLevel(u,'A046',GetUnitAbilityLevel(u,'A046')+2)
                    else
                        call SetUnitAbilityLevel(u,'A046',GetUnitAbilityLevel(u,'A046')+1)
                    endif
                endif
            else
                if GetUnitAbilityLevel(u,'A0DI')>0 then
                    set i = GetUnitAbilityLevel(u,'A0DI')+1
                    call SetUnitAbilityLevel(u,'A0DI',i)
                    call SetHeroLevel(u,i,false)
                    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl",u,"origin"))
                    //call SetUnitAbilityLevel(u,udg_HeroPassSkillsPriority[i]+4,GetUnitAbilityLevel(u,udg_HeroPassSkillsPriority[i]+4)+1)     
                endif
            endif
        endif
        if GetUnitAbilityLevel(u,'A06E')>0 then
            if GetUnitAbilityLevel(u,'A06E')<13 then
                set i = GetUnitAbilityLevel(u,'A06E')+1
                call SetUnitAbilityLevel(u,'A06E',i)
                call SetUnitAbilityLevel(u,'A06L',i)
                call SetUnitAbilityLevel(u,'A06H',i)
                call SetUnitAbilityLevel(u,'A01S',i)
                call SetUnitAbilityLevel(u,'A06M',i)
                call SetUnitAbilityLevel(u,'A06J',i)
                call SetUnitAbilityLevel(u,'A04W',i)
                call SetUnitAbilityLevel(u,'A06G',i)
                call SetUnitAbilityLevel(u,'A06F',i)
                call SetUnitAbilityLevel(u,'A06C',i)
                call SetUnitAbilityLevel(u,'A06D',i)
                call SetUnitAbilityLevel(u,'A06I',i)
                call SetUnitAbilityLevel(u,'A06K',i)
                call SetUnitAbilityLevel(u,'A01T',i)
                call SetUnitAbilityLevel(u,'A06A',i)
                call SetUnitAbilityLevel(u,'A06B',i)
                call SetUnitAbilityLevel(u,'A01Q',i)
            endif
        else
            if GetUnitAbilityLevel(u,'A07G')>0 then
                if GetUnitAbilityLevel(u,'A07G')<13 then
                    call SetUnitAbilityLevel(u,'A07G',GetUnitAbilityLevel(u,'A07G')+1)
                endif
            endif
        endif
        if GetUnitAbilityLevel(u,'A0D0')>0 then
            call SetUnitAbilityLevel(u,'A0D0',GetUnitAbilityLevel(u,'A0D0')+1)
        endif
    endif
    set u = null
endfunction

function DeleteSummoned takes nothing returns nothing
    local unit u = GetEnumUnit()
    if not(IsUnitType(u,UNIT_TYPE_PEON) or IsUnitType(u,UNIT_TYPE_STRUCTURE)) and GetUnitTypeId(u)!='e01A' then// and GetUnitTypeId(u)!='e014'
    if GetUnitTypeId(u)!='e014' then
    //call DisplayTextToPlayer(Player(0),0,0,"!=")
        call RemoveUnit(u)
    else
    //call DisplayTextToPlayer(Player(0),0,0,"==")
    endif
    endif
    set u = null
endfunction

function DeleteWhoDies takes nothing returns nothing
    if GetUnitState(GetEnumUnit(), UNIT_STATE_LIFE) <= 0 then
        call RemoveUnit(GetEnumUnit())
    endif
endfunction

function ClearDies takes nothing returns nothing
    local group g = CreateGroup()
    call GroupEnumUnitsInRect(g,bj_mapInitialPlayableArea,null)
    call ForGroup(g, function DeleteWhoDies)
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

//Мультиборд
function MultiboardSetItemColorNew takes multiboard mb, integer col, integer row, integer x, integer y, integer z, integer f returns nothing
    set udg_mbitem = MultiboardGetItem(udg_Multiboard, row-1, col-1)
    //Не работает
    call MultiboardSetItemValueColor(udg_mbitem, x, y, z, 100-f)
    call MultiboardReleaseItem(udg_mbitem)
endfunction

function MultiboardSetItemValueNew takes multiboard mb, integer col, integer row, string val returns nothing
    set udg_mbitem = MultiboardGetItem(udg_Multiboard, row-1, col-1)
    call MultiboardSetItemValue(udg_mbitem, val)
    call MultiboardReleaseItem(udg_mbitem)
endfunction

function MultiboardSetItemWidthNew takes multiboard mb, integer col, integer row, real width returns nothing
    set udg_mbitem = MultiboardGetItem(udg_Multiboard, row-1, col-1)
    call MultiboardSetItemWidth(udg_mbitem, width/100.0)
    call MultiboardReleaseItem(udg_mbitem)
endfunction

function MultiboardSetItemStyleNew takes multiboard mb, integer col, integer row, boolean showValue, boolean showIcon returns nothing
    set udg_mbitem = MultiboardGetItem(udg_Multiboard, row-1, col-1)
    call MultiboardSetItemStyle(udg_mbitem, showValue, showIcon)
    call MultiboardReleaseItem(udg_mbitem)
endfunction

function MultiboardSetItemIconNew takes multiboard mb, integer col, integer row, string iconFileName returns nothing
    local integer curRow = 0
    local integer curCol = 0
    local integer numRows = MultiboardGetRowCount(mb)
    local integer numCols = MultiboardGetColumnCount(mb)
    set udg_mbitem = null

    // Loop over rows, using 1-based index
    loop
        set curRow = curRow + 1
        exitwhen curRow > numRows

        // Apply setting to the requested row, or all rows (if row is 0)
        if (row == 0 or row == curRow) then
            // Loop over columns, using 1-based index
            set curCol = 0
            loop
                set curCol = curCol + 1
                exitwhen curCol > numCols

                // Apply setting to the requested column, or all columns (if col is 0)
                if (col == 0 or col == curCol) then
                    set udg_mbitem = MultiboardGetItem(mb, curRow - 1, curCol - 1)
                    call MultiboardSetItemIcon(udg_mbitem, iconFileName)
                    call MultiboardReleaseItem(udg_mbitem)
                endif
            endloop
        endif
    endloop
endfunction

function killme takes nothing returns nothing
    local unit u = GetEnumUnit()
    if IsUnitHidden(u) then
        call RemoveUnit(u)
    else
        call KillUnit(u)
    endif
endfunction

function removeme takes nothing returns nothing
    if GetUnitState(GetEnumUnit(), UNIT_STATE_LIFE)>0 then
        call RemoveUnit(GetEnumUnit())
    endif
endfunction

function removealways takes nothing returns nothing
    call RemoveUnit(GetEnumUnit())
endfunction

function RemoveIfIWant takes nothing returns nothing
    local unit u = GetEnumUnit()
    if not(IsUnitInGroup(u,udg_PlayerTowersGroup[udg_IntegerX]) and u!=udg_ThrouneCaster[udg_IntegerX] and u!=udg_ThrouneUpgr[udg_IntegerX]) and u!=udg_ThrouneExtra[udg_IntegerX] then// and GetUnitTypeId(u)!='e014'
        call RemoveUnit(u)
    endif
    set u=null
endfunction

function CreateGroupGFrts takes nothing returns nothing
    call ShowUnit(GetEnumUnit(),true)
    call GroupAddUnit(udg_GroupForRemovetowersecond[udg_IntegerX],GetEnumUnit())
endfunction

function MakeProzrachnim takes nothing returns nothing
    call SetUnitVertexColor(GetEnumUnit(),0,0,0,50)
endfunction

function removetowersecond takes nothing returns nothing
    local group g = CreateGroup()
    local integer i = udg_IntegerX
    call ForGroup(udg_PlayerTowersGroup[i],function CreateGroupGFrts)
    call ForGroup(udg_GroupForRemovetowersecond[i],function MakeProzrachnim)
    call GroupEnumUnitsOfPlayer(g,PlayerSlot(i-1),null)
    call ForGroup(g,function RemoveIfIWant)
    call GroupClear(udg_PlayerTowersGroup[i])
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function MultiboardSetPos03 takes integer pn, integer n returns nothing
    local string s
    set udg_MultiboardUnitsGoldNow[pn+1]=udg_MultiboardUnitsGoldNow[pn+1]-n
    if pn<0 then
	return
    endif
    set s = I2S(R2I(udg_MultiboardUnitsGoldNow[pn+1]+0.25))
    //set s = R2S(100.0*udg_MultiboardUnitsGoldNow[pn+1]/udg_MultiboardUnitsGoldStart[pn+1])
    if pn<3 then
        call MultiboardSetItemValueNew( udg_Multiboard, 3, 3+pn,s)
        //call MultiboardSetItemValueNew( udg_Multiboard, 3, 3+pn,SubString(s,0,StringLength(s)-4))
    else
        call MultiboardSetItemValueNew( udg_Multiboard, 3, 4+pn,s)
        //call MultiboardSetItemValueNew( udg_Multiboard, 3, 4+pn,SubString(s,0,StringLength(s)-4))
    endif
    set s = null
endfunction

function MultiboardSetPos12 takes integer pn, integer n returns nothing
    local string s
    set udg_MultiboardUnitsGoldNow[pn+1]=udg_MultiboardUnitsGoldNow[pn+1]-n
    if pn<0 then
	return
    endif
    if pn<3 then
    	//set s = R2S(100.0*(udg_MultiboardUnitsGoldNow[1]+udg_MultiboardUnitsGoldNow[2]+udg_MultiboardUnitsGoldNow[3])/(udg_MultiboardUnitsGoldStart[1]+udg_MultiboardUnitsGoldStart[2]+udg_MultiboardUnitsGoldStart[3]))
	//call MultiboardSetItemValueNew( udg_Multiboard, 3, 2,SubString(s,0,StringLength(s)-4))

    	set s = I2S(R2I(udg_MultiboardUnitsGoldNow[1]+udg_MultiboardUnitsGoldNow[2]+udg_MultiboardUnitsGoldNow[3]+0.25))
	call MultiboardSetItemValueNew( udg_Multiboard, 3, 2,s)
    else
    	//set s = R2S(100.0*(udg_MultiboardUnitsGoldNow[4]+udg_MultiboardUnitsGoldNow[5]+udg_MultiboardUnitsGoldNow[6])/(udg_MultiboardUnitsGoldStart[4]+udg_MultiboardUnitsGoldStart[5]+udg_MultiboardUnitsGoldStart[6]))
	//call MultiboardSetItemValueNew( udg_Multiboard, 3, 3,SubString(s,0,StringLength(s)-4))

    	set s = I2S(R2I(udg_MultiboardUnitsGoldNow[4]+udg_MultiboardUnitsGoldNow[5]+udg_MultiboardUnitsGoldNow[6]+0.25))
	call MultiboardSetItemValueNew( udg_Multiboard, 3, 3,s)
    endif
    set s = null
endfunction

function MultiboardUpdate takes nothing returns nothing
    local integer a
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Готов" )
    //if udg_Wave<12 then
    if udg_ModNumber==0 or udg_ModNumber==3 then
        set a = 3
        loop
            exitwhen a>5
            if udg_BooleanPlay[a-2] then
                call MultiboardSetItemValueNew( udg_Multiboard, 2, a, "  "+I2S(udg_Lives[GetPlayerSlotId(PlayerSlot(a-3))+1]))
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, "|c00ff2222Нет|r")
            else
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, " ")
            endif
            set a=a+1
        endloop
        set a = 7
        loop
            exitwhen a>9
            if udg_BooleanPlay[a-3] then
                call MultiboardSetItemValueNew( udg_Multiboard, 2, a, "  "+I2S(udg_Lives[GetPlayerSlotId(PlayerSlot(a-4))+1]))
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, "|c00ff2222Нет|r")
            else
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, " ")
            endif
            set a=a+1
        endloop
    else
        if udg_ModNumber==1 then
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 2, "  "+I2S(udg_Lives[1]))
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c00ff2222Нет|r")
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 3, "  "+I2S(udg_Lives[4]))
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c00ff2222Нет|r")
        else
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 2, "  "+I2S(udg_Lives[1]))
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c00ff2222Нет|r")
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 3, "  "+I2S(udg_Lives[4]))
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c00ff2222Нет|r")
        endif
    endif
    //endif
endfunction

function CreateCreepsTowersSolo takes integer pn returns nothing
    local unit u
    local real x = udg_PlayerHomeLocX[pn]
    local real y = udg_PlayerHomeLocY[pn]+4928
    local string s = SubString(udg_CreepsWave[udg_NextCreepsWave],1,StringLength(udg_CreepsWave[udg_NextCreepsWave]))
    local integer i = S2I(SubString(udg_CreepsWave[udg_NextCreepsWave],0,1))
    local integer j = i
    local integer n
    local integer ut
    local integer nm
    local real posx
    local real posy
    
    if j>=7 then
        set y = y+256*(j-6)
    endif
    
    loop
        exitwhen i<1
        set ut = S2I(SubString(s,0,3))
        set n = S2I(SubString(s,3,5))
        set s = SubString(s,5,StringLength(s))
        if n>9 then
            set nm = 2
        else
            set nm = 1
        endif
        
        set posx = x - (n-1)*(128/nm)
        if j>=7 and i<=2*j-13 then
            set posy = y - i*256 - 64*(2*j-12-i)
        else
            set posy = y - i*256
        endif
        loop
            exitwhen n<1
            set u = CreateUnit(Player(15),udg_CreepTower[ut],posx,posy,270)
            call GroupAddUnit(udg_PlayerCreepsTowersGroup[pn],u)
            if pn<4 then
                call SetUnitColor(u,udg_PlayerColor[pn+3])
            else
                call SetUnitColor(u,udg_PlayerColor[pn-3])
            endif
            set posx = posx+(256/nm)
            set n=n-1
        endloop
        set i=i-1
    endloop
    set u = null
endfunction

function UnitAddMaxHP takes unit target, integer howmuch returns nothing
    local integer value = howmuch
    local integer id = 'A0IN'
    loop
        exitwhen value==0
        call UnitAddAbility(target,id)
        if value>=100 then
            call SetUnitAbilityLevel(target,id,2)
            set value = value-100
        elseif value>=10 then
            call SetUnitAbilityLevel(target,id,3)
            set value = value-10
        elseif value>=1 then
            call SetUnitAbilityLevel(target,id,4)
            set value = value-1
        elseif value<=-100 then
            call SetUnitAbilityLevel(target,id,5)
            set value = value+100
        elseif value<=-10 then
            call SetUnitAbilityLevel(target,id,6)
            set value = value+10
        elseif value<=-1 then
            call SetUnitAbilityLevel(target,id,7)
            set value = value+1
        endif
        call UnitRemoveAbility(target,id)
    endloop
endfunction

function SetUnitSpellsAndPassives takes unit ou, unit nu, integer pn, integer nunum, boolean isWarrior returns nothing
    local player op = GetOwningPlayer(ou)
    local integer i
    if GetUnitTypeId(ou)=='e01E' then// Стаки черепашки
        set udg_BlueTurtleNum=udg_BlueTurtleNum+1
        set udg_BlueTurtleWarrior[udg_BlueTurtleNum]=nu
        set udg_BlueTurtleTower[udg_BlueTurtleNum]=ou
    endif
    if GetUnitTypeId(ou)=='u01P' and isWarrior then// Мана волшебного дракона демонов
        call SetUnitState(udg_ThrouneCaster[pn+1],UNIT_STATE_MANA,GetUnitState(udg_ThrouneCaster[pn+1],UNIT_STATE_MANA)+1)
    endif
    if GetUnitAbilityLevel(ou,'A054')>0 then// Спелл ярость орды
        call UnitAddAbility(nu,'A054')
    endif
    if GetUnitAbilityLevel(ou,'A0GI')>0 then// Спелл удачная смерть
        call UnitAddAbility(nu,'A0GI')
        call UnitAddAbility(nu,'S00Q')
    endif
    if IsPassChosenByPlayer(pn+1,6) then// Пассивка 6 новые союзники
        //udg_KataWarriorCount
        if GetUnitTypeId(ou)=='u01I' then
            set i=1
            loop
                exitwhen i>udg_KataTowerCount
                if udg_KataTowerThrower[i]==ou then
                    if isWarrior or udg_ModNumber>1 or udg_EnableCreeps then
                        set udg_KataWarriorThrower[i]=nu
                    else
                        set udg_KataWarriorThrower[udg_KataTowerCount+i]=nu
                    endif
                    set i=udg_KataTowerCount
                endif
                set i=i+1
            endloop
        endif
        if GetUnitAbilityLevel(ou,'A0IQ')>0 then
            set i=1
            loop
                exitwhen i>udg_KataTowerCount*4
                if udg_KataTowerTarget[i]==ou then
                    if isWarrior or udg_ModNumber>1 or udg_EnableCreeps then
                        set udg_KataWarriorTarget[i]=nu
                        set udg_KataWarriorHiden[i]=false
                    else
                        set udg_KataWarriorTarget[udg_KataTowerCount*4+i]=nu
                        set udg_KataWarriorHiden[udg_KataTowerCount*4+i]=false
                    endif
                    call UnitAddAbility(nu,'A063')
                    call UnitAddAbility(nu,'A0IQ')
                    call UnitAddAbility(nu,'A105')
                    set i=udg_KataTowerCount*4
                endif
                set i=i+1
            endloop
        endif
    endif
    if IsPassChosenByPlayer(pn+1,11) and GetUnitAbilityLevel(ou,'A0GE')==0 then// Пассивка 11 инвиз выключен
        call UnitAddAbility(nu,'A0AP')
    endif
    if IsPassChosenByPlayer(pn+1,14) and GetUnitAbilityLevel(ou,'A0B3')>1 then// Пассивка 14 каннибал
        call UnitAddAbility(nu,'A0AD')
        call UnitAddAbility(nu,'A015')
        call UnitAddAbility(nu,'A008')
        call UnitAddAbility(nu,'A00W')
        call UnitAddAbility(nu,'A03O')
        call SetUnitAbilityLevel(nu,'A0AD',GetUnitAbilityLevel(ou,'A0B3')-1)
        call SetUnitAbilityLevel(nu,'A015',GetUnitAbilityLevel(ou,'A0B3')-1)
        call SetUnitAbilityLevel(nu,'A008',GetUnitAbilityLevel(ou,'A0B3')-1)
        call SetUnitAbilityLevel(nu,'A00W',GetUnitAbilityLevel(ou,'A0B3')-1)
        call SetUnitAbilityLevel(nu,'A03O',GetUnitAbilityLevel(ou,'A0B3')-1)
        call SetUnitAbilityLevel(nu,'A09J',GetUnitAbilityLevel(ou,'A0B3')-1)
        if isWarrior then
            set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+5*R2I((udg_CreepCost[nunum]*(0.05*(GetUnitAbilityLevel(ou,'A0B3')-1))+2.5)/5)
        endif
    endif
    if IsPassChosenByPlayer(pn+1,16) then// Пассивка 16 пламенный приём гидра
        call UnitAddAbility(nu,'A0B2')
    endif
    if IsPassChosenByPlayer(pn+1,9) then// Пассивка 9 предмет
        call UnitAddAbility(nu,'A0DU')
        if UnitItemInSlot(ou,0)!=null then
            call UnitAddItem(nu,CreateItem(GetItemTypeId(UnitItemInSlot(ou,0)),0,0))
        endif
    endif
    if GetUnitAbilityLevel(ou,'A0D0')>0 then// Пассивка 2 сила юности 
        call UnitAddAbility(nu,'A0D0')
        call SetUnitAbilityLevel(nu,'A0D0',GetUnitAbilityLevel(ou,'A0D0'))
        if IsPassChosenByPlayer(pn+1,2) then
            call UnitAddAbility(nu,'A0D1')
            call UnitAddAbility(nu,'A0D2')
            call SetUnitAbilityLevel(nu,'A0D1',GetUnitAbilityLevel(ou,'A0D0'))
            call SetUnitAbilityLevel(nu,'A0D2',GetUnitAbilityLevel(ou,'A0D0'))
            if GetUnitAbilityLevel(ou,'A0D0')<5 then
                call UnitAddAbility(nu,'A0D3')
                call SetUnitAbilityLevel(nu,'A0D3',GetUnitAbilityLevel(ou,'A0D0'))
            else
                call UnitAddAbility(nu,'A0D4')
                call SetUnitAbilityLevel(nu,'A0D4',GetUnitAbilityLevel(ou,'A0D0')-4)
            endif
        else
            call UnitAddAbility(nu,'A0D0')
            call SetUnitAbilityLevel(nu,'A0D0',GetUnitAbilityLevel(ou,'A0D0'))
        endif
    endif
    if GetUnitAbilityLevel(ou,'A06E')>0 then// Пассивка 10 стаки древа
        if IsPassChosenByPlayer(pn+1,10) then
            call SetUnitAbilityLevel(nu,'A06L',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06H',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A01S',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06M',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06J',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A09P',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06G',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06F',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06C',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06D',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06I',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06K',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A01T',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06A',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A06B',GetUnitAbilityLevel(ou,'A06E'))
            call SetUnitAbilityLevel(nu,'A01Q',GetUnitAbilityLevel(ou,'A06E'))
        else
            call UnitAddAbility(nu,'A06E')
            call SetUnitAbilityLevel(nu,'A06E',GetUnitAbilityLevel(ou,'A06E'))
        endif
    endif
    if GetUnitAbilityLevel(ou,'A07G')>0 then// Пассивка 10 стаки воина
        if IsPassChosenByPlayer(pn+1,10) then
            call UnitAddAbility(nu,'A01H')
            call UnitAddAbility(nu,'A04S')
            call SetUnitAbilityLevel(nu,'A01H',GetUnitAbilityLevel(ou,'A07G'))
            call SetUnitAbilityLevel(nu,'A04S',GetUnitAbilityLevel(ou,'A07G'))
        else
            call UnitAddAbility(nu,'A07G')
            call SetUnitAbilityLevel(nu,'A07G',GetUnitAbilityLevel(ou,'A07G'))
        endif
    endif
    if GetUnitTypeId(ou)==udg_CreepTower[111] then// Пассивка 15 герой
        set udg_HeroNagaCount = udg_HeroNagaCount+1
        set udg_HeroNagaHero[udg_HeroNagaCount] = nu
        set udg_HeroNagaExtraHp[udg_HeroNagaCount] = 0
        set udg_HeroNagaBounded[udg_HeroNagaCount] = null
        if GetUnitAbilityLevel(ou,'A0DI')>1 then
            call SetHeroLevel(nu,GetUnitAbilityLevel(ou,'A0DI'),false)
        endif
        
        if GetPlayerTechCount(op,'R00E'+0,true)>0 then// 1
            call UnitAddAbility(nu,'A0HT')
            call SetUnitAbilityLevel(nu,'A0HT',GetUnitAbilityLevel(ou,'A0HW'))
        endif
        if GetPlayerTechCount(op,'R00E'+1,true)>0 then// 2
            call UnitAddAbility(nu,'A0F0')
            call SetUnitAbilityLevel(nu,'A0F0',GetUnitAbilityLevel(ou,'A0HX'))
        endif
        
        if GetPlayerTechCount(op,'R00E'+2,true)>0 then// 3
            call UnitAddAbility(nu,'A0HV')
            call SetUnitAbilityLevel(nu,'A0HV',GetUnitAbilityLevel(ou,'A0HY'))
        endif
        if GetPlayerTechCount(op,'R00E'+3,true)>0 then// 4
            call UnitAddAbility(nu,'A0IE')
            call SetUnitAbilityLevel(nu,'A0IE',GetUnitAbilityLevel(ou,'A0HZ'))
            call IssueImmediateOrderById(nu,852540)
        endif
        
        if GetPlayerTechCount(op,'R00E'+4,true)>0 then// 5
            call UnitAddAbility(nu,'A0IF')
            call SetUnitAbilityLevel(nu,'A0IF',GetUnitAbilityLevel(ou,'A0IA'))
        endif
        if GetPlayerTechCount(op,'R00E'+5,true)>0 then// 6
            call UnitAddAbility(nu,'A0IG')
            call SetUnitAbilityLevel(nu,'A0IG',GetUnitAbilityLevel(ou,'A0IB'))
        endif
        if GetPlayerTechCount(op,'R00E'+6,true)>0 then// 7
            call UnitAddAbility(nu,'A0IH')
            call SetUnitAbilityLevel(nu,'A0IH',GetUnitAbilityLevel(ou,'A0IC'))
        endif
        if GetPlayerTechCount(op,'R00E'+7,true)>0 then// 8
            call UnitAddAbility(nu,'A0IL')
            call SetUnitAbilityLevel(nu,'A0IL',GetUnitAbilityLevel(ou,'A0ID'))
            call UnitAddAbility(nu,'A0IM')
            call SetUnitAbilityLevel(nu,'A0IM',GetUnitAbilityLevel(ou,'A0ID'))
        endif
    endif
    set op = null
endfunction

function ReplaceWithUnit takes nothing returns nothing
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local player pl
    local boolean b = true
    local real x
    local real y
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    if pn<3 then
        if pn ==0 then
            set pl = PlayerSlot(6)
        else
            if pn ==1 then
                set pl = PlayerSlot(8)
            else
                set pl = PlayerSlot(10)
            endif 
        endif
        set x = 8250
        set y = 8500-7164*I2R(pn)
    else
        if pn ==3 then
            set pl = PlayerSlot(7)
        else
            if pn ==4 then
                set pl = PlayerSlot(9)
            else
                set pl = PlayerSlot(11)
            endif
        endif
        set x = -8250
        set y = 8500-7164*I2R(pn-3)
    endif
    
    
    
    if udg_BooleanPlay[pn+1] then
        set nu = CreateUnit(pl,nuid,GetUnitX(ou),GetUnitY(ou),90)
	    call UnitAddAbility(nu,'A00H')
	    call UnitAddAbility(nu,'A0AG')
	    call SetUnitAbilityLevel(nu,'A0AG',nunum)
	    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
        
        call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
        
        call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
        call SetUnitColor(nu,udg_PlayerColor[pn+1])
        call IssuePointOrder(nu,"attack",GetUnitX(nu),y)
    endif
    
    
    if udg_BooleanPlay[pn+4-6*(pn/3)] and not(udg_EnableCreeps) then
        set nu = CreateUnit(pl,nuid,-1*GetUnitX(ou),2*y-5260-GetUnitY(ou),270)
	    call UnitAddAbility(nu,'A00H')
	    call UnitAddAbility(nu,'A0AG')
	    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    
        call SetUnitSpellsAndPassives(ou,nu,pn,nunum,false)
        
        if pn<3 then
            call GroupAddUnit(udg_PlayerCreepsGroup[pn+4],nu)
            call SetUnitColor(nu,udg_PlayerColor[pn+1])
            set y = 3570-7164*pn
            call IssuePointOrder(nu,"attack",GetUnitX(nu),y)
        else
            call GroupAddUnit(udg_PlayerCreepsGroup[pn-2],nu)
            call SetUnitColor(nu,udg_PlayerColor[pn+1])
            set y = 3570-7164*(pn-3)
            call IssuePointOrder(nu,"attack",GetUnitX(nu),y)
        endif
    endif
    set nu = null
    set ou = null
endfunction 

function ReplaceWithUnitTeam takes nothing returns nothing
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local player pl
    local boolean b = true
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
            set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    if pn<3 then
        if pn ==0 then
            set pl = PlayerSlot(6)
        else
            if pn ==1 then
                set pl = PlayerSlot(8)
            else
                set pl = PlayerSlot(10)
            endif
        endif
    else
        if pn ==3 then
            set pl = PlayerSlot(7)
        else
            if pn ==4 then
                set pl = PlayerSlot(9)
            else
                set pl = PlayerSlot(11)
            endif
        endif
    endif

    if udg_BooleanPlay[pn+1] then
        set nu = CreateUnit(pl,nuid,GetUnitX(ou),GetUnitY(ou),90)
	    call UnitAddAbility(nu,'A00H')
	    call UnitAddAbility(nu,'A0AG')
	    call SetUnitAbilityLevel(nu,'A0AG',nunum)
	    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
        
        call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
        
        call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
        call SetUnitColor(nu,udg_PlayerColor[pn+1])
        call IssuePointOrder(nu,"attack",GetUnitX(nu),5200)
    endif
    
    if udg_BooleanPlay[pn+4-6*(pn/3)] and not(udg_EnableCreeps) then
        set nu = CreateUnit(pl,nuid,-1*GetUnitX(ou),3705-GetUnitY(ou),270)
	    call UnitAddAbility(nu,'A00H')
        call UnitAddAbility(nu,'A0AG')
        call SetUnitAbilityLevel(nu,'A0AG',nunum)
        
        call SetUnitSpellsAndPassives(ou,nu,pn,nunum,false)
        
        if pn<3 then
            call GroupAddUnit(udg_PlayerCreepsGroup[pn+4],nu)
            call SetUnitColor(nu,udg_PlayerColor[pn+1])
        else
            call GroupAddUnit(udg_PlayerCreepsGroup[pn-2],nu)
            call SetUnitColor(nu,udg_PlayerColor[pn+1])
        endif
        call IssuePointOrder(nu,"attack",GetUnitX(nu),-1350)
        
    endif
    
    set nu = null
    set ou = null
endfunction

function ReplaceWithUnitDuels takes nothing returns nothing
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local player pl
    local boolean b = true
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    if pn<3 then
        if pn ==0 then
            set pl = PlayerSlot(6)
        else
            if pn ==1 then
                set pl = PlayerSlot(8)
            else
                set pl = PlayerSlot(10)
            endif
        endif
    else
        if pn ==3 then
            set pl = PlayerSlot(7)
        else
            if pn ==4 then
                set pl = PlayerSlot(9)
            else
                set pl = PlayerSlot(11)
            endif
        endif
    endif
    set nu = CreateUnit(pl,nuid,GetUnitX(ou),GetUnitY(ou),90)
    call UnitAddAbility(nu,'A00H')
    call UnitAddAbility(nu,'A0AG')
    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
    
    call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
    
    call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
    call SetUnitColor(nu,udg_PlayerColor[pn+1])
    if pn<3 then
        call IssuePointOrder(nu,"attack",-2300,-7885)
    else
        call IssuePointOrder(nu,"attack",2300,-7885)
    endif
    set nu = null
    set ou = null
endfunction 

function ReplaceWithUnitLast takes nothing returns nothing
    local player po
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local boolean b = true
    local real x = GetUnitX(ou)
    local real y = GetUnitY(ou)
    local real rx = udg_RealX
    local real ry = udg_RealY
    local real px
    local real py
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    set rx = x-rx
    set ry = y-ry
    if pn<3 then
        if pn ==0 then
            set po = PlayerSlot(6)
        else
            if pn ==1 then
                set po = PlayerSlot(8)
            else
                set po = PlayerSlot(10)
            endif
        endif
        set px = 4000-ry
        set py = -9650+416*pn+rx
    else
        if pn ==3 then
            set po = PlayerSlot(7)
        else
            if pn ==4 then
                set po = PlayerSlot(9)
            else
                set po = PlayerSlot(11)
            endif
        endif
        set px = -4000+ry
        set py = -9650+416*(pn-3)-rx
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    set nu = CreateUnit(po,nuid,px,py,90)
    call UnitAddAbility(nu,'A00H')
    call UnitAddAbility(nu,'A0AG')
    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
    call SetUnitState(nu,UNIT_STATE_LIFE,GetUnitState(nu,UNIT_STATE_LIFE)*udg_DuelHP[pn/3+1])
    
    call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
    
    call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
    call SetUnitColor(nu,udg_PlayerColor[pn+1])
    if pn<3 then
        call IssuePointOrder(nu,"attack",-2300,py)
    else
        call IssuePointOrder(nu,"attack",2300,py)
    endif
    set nu = null
    set ou = null
endfunction 

function ReplaceWithUnitLastTeam takes nothing returns nothing
    local player po
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local boolean b = true
    local real x = GetUnitX(ou)
    local real y = GetUnitY(ou)
    local real rx = udg_RealX
    local real ry = udg_RealY
    local real px
    local real py
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    set rx = x-rx
    set ry = y-ry
    if pn<3 then
        if pn ==0 then
            set po = PlayerSlot(6)
        else
            if pn ==1 then
                set po = PlayerSlot(8)
            else
                set po = PlayerSlot(10)
            endif
        endif
        set px = 4000-ry
        set py = -9650+rx
    else
        if pn ==3 then
            set po = PlayerSlot(7)
        else
            if pn ==4 then
                set po = PlayerSlot(9)
            else
                set po = PlayerSlot(11)
            endif
        endif
        set px = -4000+ry
        set py = -9650-rx
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    set nu = CreateUnit(po,nuid,px,py,90)
    call UnitAddAbility(nu,'A00H')
    call UnitAddAbility(nu,'A0AG')
    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
    call SetUnitState(nu,UNIT_STATE_LIFE,udg_DuelHP[pn/3+1]*GetUnitState(nu,UNIT_STATE_MAX_LIFE))
    
    call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
    
    call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
    call SetUnitColor(nu,udg_PlayerColor[pn+1])
    if pn<3 then
        call IssuePointOrder(nu,"attack",-2300,py)
    else
        call IssuePointOrder(nu,"attack",2300,py)
    endif
    set nu = null
    set ou = null
endfunction 

function ReplaceWithUnitSD takes nothing returns nothing
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local player pl
    local boolean b = true
    local real x
    local real y = GetUnitY(ou)
    local real z
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    if pn<3 then
        if pn ==0 then
            set pl = PlayerSlot(6)
            set x = 9088
        else
            if pn ==1 then
                set pl = PlayerSlot(8)
                set x = 0
            else
                set pl = PlayerSlot(10)
                set x = -9088
            endif 
        endif
	set z = 180
    else
        if pn ==3 then
            set pl = PlayerSlot(7)
            set x = 9088
        else
            if pn ==4 then
                set pl = PlayerSlot(9)
                set x = 0
            else
                set pl = PlayerSlot(11)
                set x = -9088
            endif
        endif
	set z = 0
    endif
    set nu = CreateUnit(pl,nuid,GetUnitX(ou),y,z)
    call UnitAddAbility(nu,'A00H')
    call UnitAddAbility(nu,'A0AG')
    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
    
    call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
    
    call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
    call SetUnitColor(nu,udg_PlayerColor[pn+1])
    call IssuePointOrder(nu,"attack",2*x-GetUnitX(nu),y)
    set nu = null
    set ou = null
endfunction 

function ReplaceWithUnitLastSD takes nothing returns nothing
    local player po
    local unit ou = GetEnumUnit()
    local unit nu
    local integer nunum
    local integer ouid = GetUnitTypeId(ou)
    local integer nuid
    local integer i=1
    local integer pn = GetPlayerSlotId(GetOwningPlayer(ou))
    local boolean b = true
    local real x = GetUnitX(ou)
    local real y = GetUnitY(ou)
    local real rx = udg_RealX
    local real ry = udg_RealY
    local real px
    local real py
    if GetUnitState(ou, UNIT_STATE_LIFE) <= 0 then
        set nu = null
        set ou = null
        return
    endif
    loop
        exitwhen i>udg_UTN
        if ouid == udg_CreepTower[i] then
            set b = false
	    set nunum = i
            set nuid = udg_CreepWarrior[i]
        endif
        set i=i+1
    endloop
    if b then
        set nu = null
        set ou = null
        return
    endif
    set rx = x-rx
    set ry = y-ry
    if pn<3 then
        if pn ==0 then
            set po = PlayerSlot(6)
        else
            if pn ==1 then
                set po = PlayerSlot(8)
            else
                set po = PlayerSlot(10)
            endif
        endif
        set px = 4032+rx
        set py = -9650+120*pn+ry
    else
        if pn ==3 then
            set po = PlayerSlot(7)
        else
            if pn ==4 then
                set po = PlayerSlot(9)
            else
                set po = PlayerSlot(11)
            endif
        endif
        set px = -4032+rx
        set py = -9650+120*(pn-3)+ry
    endif
    call GroupAddUnit(udg_PlayerTowersGroup[pn+1],ou)
    if IsUnitInGroup(ou,udg_Constructed) then
        call IssueImmediateOrderById(ou,851976)
    endif
    call ShowUnit(ou, false)
    set nu = CreateUnit(po,nuid,px,py,90)
    call UnitAddAbility(nu,'A00H')
    call UnitAddAbility(nu,'A0AG')
    call SetUnitAbilityLevel(nu,'A0AG',nunum)
    set udg_MultiboardUnitsGoldStart[pn+1]=udg_MultiboardUnitsGoldStart[pn+1]+udg_CreepCost[nunum]
    call SetUnitState(nu,UNIT_STATE_LIFE,GetUnitState(nu,UNIT_STATE_LIFE)*udg_DuelHP[pn/3+1])
    
    call SetUnitSpellsAndPassives(ou,nu,pn,nunum,true)
    
    call GroupAddUnit(udg_PlayerWarriorsGroup[pn+1],nu)
    call SetUnitColor(nu,udg_PlayerColor[pn+1])
    if pn<3 then
        call IssuePointOrder(nu,"attack",-2300,py)
    else
        call IssuePointOrder(nu,"attack",2300,py)
    endif
    set nu = null
    set ou = null
endfunction 

function SetCreepwavesSpellsAndPassives takes unit ou, unit nu, integer pn, integer nunum, boolean isWarrior returns nothing
endfunction

function ReplaceCreepsTowersSolo takes integer pn returns nothing
    local unit u
    local unit t
    local integer i
    local integer a
    local integer aum=0
    local integer uid
    local integer unum
    local group g = CreateGroup()
    local unit array gu
    set u = FirstOfGroup(udg_PlayerCreepsTowersGroup[pn])
    if u!=null then
    
        loop
            exitwhen u==null
            
            set i = 1
            set unum = 0
            set uid = GetUnitTypeId(u)
            loop
                exitwhen i>udg_UTN
                if uid == udg_CreepTower[i] then
                    set unum = i
                    set uid = udg_CreepWarrior[i]
                    set i = udg_UTN
                endif
                set i=i+1
            endloop
            call GroupRemoveUnit(udg_PlayerCreepsTowersGroup[pn],u)
            call RemoveUnit(u)
            if pn<4 then
                set t = CreateUnit(PlayerSlot(pn*2+5),uid,GetUnitX(u),GetUnitY(u),270)
                call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                call SetUnitColor(t,udg_PlayerColor[pn+3])
            else
                set t = CreateUnit(PlayerSlot(pn*2-2),uid,GetUnitX(u),GetUnitY(u),270)
                call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                call SetUnitColor(t,udg_PlayerColor[pn-3])
            endif
            call GroupAddUnit(g,t)
            set aum=aum+1
            call IssuePointOrder(t,"attack",GetUnitX(t),GetUnitY(t)-5086)
            call UnitAddAbility(t,'A00H')
            call UnitAddAbility(t,'A0AG')
            call SetUnitAbilityLevel(t,'A0AG',unum)
            
            
            if IsPassChosenByPlayer(pn+3-pn/4*6,11) then
                call UnitAddAbility(t,'A0AP')
            endif
            if IsPassChosenByPlayer(pn+3-pn/4*6,3) then
                if GetRandomInt(1,4)==1 then
                    call UnitAddAbility(t,'A0FK')
                    call GroupAddUnit(udg_HumPalaAura1,t)
                endif
            endif
            if IsPassChosenByPlayer(pn+3-pn/4*6,16) then
                call UnitAddAbility(t,'A0B2')
            endif
            
            set u = FirstOfGroup(udg_PlayerCreepsTowersGroup[pn])
        endloop
        
        
        
        if IsPassChosenByPlayer(pn+3-pn/4*6,5) then
            set i=0
            if udg_Wave>=2 then
                set i=i+1
                if udg_Wave>=6 then
                    set i=i+1
                    if udg_Wave==10 then
                        set i=i+1
                    endif
                endif
            endif
            loop
                exitwhen i==0
                if pn<4 then
                    set t = CreateUnit(PlayerSlot(pn*2+5),udg_CreepWarrior[109],udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn]+5086,270)
                    call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                    call SetUnitColor(t,udg_PlayerColor[pn+3])
                else
                    set t = CreateUnit(PlayerSlot(pn*2-2),udg_CreepWarrior[109],udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn]+5086,270)
                    call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                    call SetUnitColor(t,udg_PlayerColor[pn-3])
                endif
                call IssuePointOrder(t,"attack",udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn])
                call UnitAddAbility(t,'A00H')
                call UnitAddAbility(t,'A0AG')
                call SetUnitAbilityLevel(t,'A0AG',109)
                set i=i-1
            endloop
        endif
        
        if IsPassChosenByPlayer(pn+3-pn/4*6,6) then
            if udg_Wave>=4 then
                set i=udg_Wave-2
                if udg_Wave>=9 then
                    set i=i+1
                endif
            else
                if udg_Wave>=2 then
                    set i=1
                else
                    set i=0
                endif
            endif
            loop
                exitwhen i==0
                if pn<4 then
                    set t = CreateUnit(PlayerSlot(pn*2+5),udg_CreepWarrior[115],udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn]+5086,270)
                    call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                    call SetUnitColor(t,udg_PlayerColor[pn+3])
                else
                    set t = CreateUnit(PlayerSlot(pn*2-2),udg_CreepWarrior[115],udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn]+5086,270)
                    call GroupAddUnit(udg_PlayerCreepsGroup[pn],t)
                    call SetUnitColor(t,udg_PlayerColor[pn-3])
                endif
                call IssuePointOrder(t,"attack",udg_PlayerHomeLocX[pn],udg_PlayerHomeLocY[pn])
                call UnitAddAbility(t,'A00H')
                call UnitAddAbility(t,'A0AG')
                call SetUnitAbilityLevel(t,'A0AG',115)
                set i=i-1
            endloop
        endif
        if IsPassChosenByPlayer(pn+3-pn/4*6,9) then
            set t = FirstOfGroup(g)
            set i = 1
            loop
                exitwhen t==null
                set gu[i]=t
                set i = i+1
                call GroupRemoveUnit(g,t)
                set t = FirstOfGroup(g)
            endloop
            if udg_Wave<=5 then
                set i=(udg_Wave+1)/2
            else
                set i=udg_Wave-2
            endif
            loop
                exitwhen i==0 or aum==0
                set unum = GetRandomInt(1,aum)
                call UnitAddAbility(gu[unum],'A0DU')
                call UnitAddItem(gu[unum],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],0,0))
                set gu[unum]=gu[aum]
                set i = i-1
                set aum=aum-1
            endloop
            loop
                exitwhen aum==0
                set gu[aum]=null
                set aum=aum-1
            endloop
        endif
        if IsPassChosenByPlayer(pn+3-pn/4*6,3) then
            set t = FirstOfGroup(g)
            call UnitAddAbility(t,'A0FK')
            call GroupAddUnit(udg_HumPalaAura1,t)
        endif
        if IsPassChosenByPlayer(pn+3-pn/4*6,2) then
            set t = FirstOfGroup(g)
            set i = 1
            loop
                exitwhen t==null
                set gu[i]=t
                set i = i+1
                call GroupRemoveUnit(g,t)
                set t = FirstOfGroup(g)
            endloop
            
            set a = 0
            set i = udg_Wave
            loop
                exitwhen i==0 or aum==0
                if i==1 then
                    set a = a+1000
                else
                    set a = a+60+30*i
                endif
                loop
                    exitwhen a<=0 or aum==0
                    set unum = GetRandomInt(1,aum)
                    set a=a-udg_CreepCost[GetUnitAbilityLevel(gu[unum],'A0AG')]
                            
                    call UnitAddAbility(gu[unum],'A0D0')
                    call SetUnitAbilityLevel(gu[unum],'A0D0',udg_Wave-i+1)
                    
                    call UnitAddAbility(gu[unum],'A0D1')
                    call UnitAddAbility(gu[unum],'A0D2')
                    call SetUnitAbilityLevel(gu[unum],'A0D1',udg_Wave-i+1)
                    call SetUnitAbilityLevel(gu[unum],'A0D2',udg_Wave-i+1)
                    if udg_Wave-i<4 then
                        call UnitAddAbility(gu[unum],'A0D3')
                        call SetUnitAbilityLevel(gu[unum],'A0D3',udg_Wave-i+1)
                    else
                        call UnitAddAbility(gu[unum],'A0D4')
                        call SetUnitAbilityLevel(gu[unum],'A0D4',udg_Wave-i-3)
                    endif
                            
                    set gu[unum]=gu[aum]
                    set gu[aum]=null
                    set aum=aum-1
                endloop
                
                set i=i-1
            endloop
        endif
        if IsPassChosenByPlayer(pn+3-pn/4*6,10) then
            set t = FirstOfGroup(g)
            set i = 1
            loop
                exitwhen t==null
                set gu[i]=t
                set i = i+1
                call GroupRemoveUnit(g,t)
                set t = FirstOfGroup(g)
            endloop
                                
            set a = 0
            set i = udg_Wave
            loop
                exitwhen i==0 or aum==0
                if i==1 then
                    set a = a+1000
                else
                    set a = a+60+30*i
                endif
                loop
                    exitwhen a<=0 or aum==0
                    set unum = GetRandomInt(1,aum)
                    set a=a-udg_CreepCost[GetUnitAbilityLevel(gu[unum],'A0AG')]
                                        
                    if GetUnitAbilityLevel(gu[unum],'A0A1')==1 then
                        call SetUnitAbilityLevel(gu[unum],'A06L',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06H',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A01S',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06M',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06J',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A09P',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06G',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06F',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06C',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06D',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06I',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06K',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A01T',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06A',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A06B',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A01Q',udg_Wave-i+1)
                    else
                        call UnitAddAbility(gu[unum],'A01H')
                        call UnitAddAbility(gu[unum],'A04S')
                        call SetUnitAbilityLevel(gu[unum],'A01H',udg_Wave-i+1)
                        call SetUnitAbilityLevel(gu[unum],'A04S',udg_Wave-i+1)
                    endif
                    
                    set gu[unum]=gu[aum]
                    set gu[aum]=null
                    set aum=aum-1
                endloop
                                    
                set i=i-1
            endloop
                    
        endif
    endif
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set t = null
endfunction 

function DeleteForGroupWAUG takes nothing returns nothing
    call GroupRemoveUnit(udg_WAUG,GetEnumUnit())
    call RemoveUnit(GetEnumUnit())
endfunction

function DeleteForGroupWBUG takes nothing returns nothing
    call GroupRemoveUnit(udg_WBUG,GetEnumUnit())
    call RemoveUnit(GetEnumUnit())
endfunction

function ClearConstructedTW takes nothing returns nothing
    call GroupClear(udg_ConstructedTW)
    call DestroyTimer(GetExpiredTimer())
endfunction

function SetItemDropYesWorkers takes nothing returns nothing
    local unit u = GetEnumUnit()
    call SetItemDroppable(UnitItemInSlot(u,0),true)
    call SetItemDroppable(UnitItemInSlot(u,1),true)
    call SetItemDroppable(UnitItemInSlot(u,2),true)
    call SetItemDroppable(UnitItemInSlot(u,3),true)
    call SetItemDroppable(UnitItemInSlot(u,4),true)
    call SetItemDroppable(UnitItemInSlot(u,5),true)
    set u = null
endfunction

function SetItemDropNoWorkers takes nothing returns nothing
    local unit u = GetEnumUnit()
    call SetItemDroppable(UnitItemInSlot(u,0),false)
    call SetItemDroppable(UnitItemInSlot(u,1),false)
    call SetItemDroppable(UnitItemInSlot(u,2),false)
    call SetItemDroppable(UnitItemInSlot(u,3),false)
    call SetItemDroppable(UnitItemInSlot(u,4),false)
    call SetItemDroppable(UnitItemInSlot(u,5),false)
    set u = null
endfunction

function SpellsWaveStart takes nothing returns nothing
    local group g = CreateGroup()
    local unit u
    local integer pn
    local integer i//=1
    local location l
    call TimerStart(udg_DDT,10,false,null)
    call TimerStart(CreateTimer(),2,false,function ClearConstructedTW)
    call ForGroup(udg_WAUG, function DeleteForGroupWAUG)
    set i=1
    //set udg_KataWarriorCount=udg_KataTowerCount
    if udg_ModNumber<=1 and not(udg_EnableCreeps) then
        set udg_KataWarriorCount=udg_KataTowerCount*2
    else
        set udg_KataWarriorCount=udg_KataTowerCount
    endif
    loop
        exitwhen i>udg_KataWarriorCount
        set udg_KataWarriorThrower[i]=null
        set udg_KataWarriorTarget[i*4]=null
        set udg_KataWarriorHiden[i*4]=false
        set udg_KataWarriorTarget[i*4-1]=null
        set udg_KataWarriorHiden[i*4-1]=false
        set udg_KataWarriorTarget[i*4-2]=null
        set udg_KataWarriorHiden[i*4-2]=false
        set udg_KataWarriorTarget[i*4-3]=null
        set udg_KataWarriorHiden[i*4-3]=false
        set i=i+1
    endloop
    set i=0
    loop
        exitwhen i>5
        set u = CreateUnit(PlayerSlot(i),'e01C',0,0,0)
        call GroupAddUnit(udg_WBUG,u)
        set i=i+1
	    set udg_ReadyWorker[i]=false
	    call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A0A5',false)
	    call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A08P',false)
    endloop
    if udg_ModNumberUnits==2 then
        set pn=0
        loop
            exitwhen pn>5
            set i=1
            loop
                exitwhen i>udg_UTNR
                call SetPlayerTechMaxAllowed(PlayerSlot(pn),udg_CreepTower[i],0)
                set i=i+3
            endloop
            set i=1
            loop
                exitwhen i>18
                call SetPlayerTechMaxAllowed(PlayerSlot(pn),udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                set i=i+3
            endloop
            set pn=pn+1
        endloop
    endif
    set pn=1
    loop
        exitwhen pn>6
        set udg_StartSpellsWorkBool[pn] = true
        if IsPassChosenByPlayer(pn,8) then// Проклятая земля
	        if udg_Wave==11 then
		        if pn<4 then
                    set l = Location(0,-7882)
                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                    call UnitAddAbility(u,'A071')
                    call UnitAddAbility(u,'A08V')
                    call SetUnitAbilityLevel(u,'A071',2)
                    call SetUnitAbilityLevel(u,'A08V',2)
                    call RemoveLocation(l)
                    set l = Location(0,-7882)
                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                    call UnitAddAbility(u,'A076')
                    call SetUnitAbilityLevel(u,'A076',2)
                    call RemoveLocation(l)
                else
                    set l = Location(0,-7882)
                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                    call UnitAddAbility(u,'A071')
                    call UnitAddAbility(u,'A08V')
                    call SetUnitAbilityLevel(u,'A071',2)
                    call SetUnitAbilityLevel(u,'A08V',2)
                    call RemoveLocation(l)
                    set l = Location(0,-7882)
                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                    call UnitAddAbility(u,'A076')
                    call SetUnitAbilityLevel(u,'A076',2)
                    call RemoveLocation(l)
                endif
            else
                if udg_ModNumber==0 then
                    if pn<4 then
                        set l = Location(8192,13244-(7164*I2R(pn)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                        call UnitAddAbility(u,'A071')
                        call UnitAddAbility(u,'A08V')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                        set l = Location(-8192,13244-(7164*I2R(pn)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                        call UnitAddAbility(u,'A071')
                        call UnitAddAbility(u,'A08V')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)

                        set l = Location(8192,13244-(7164*I2R(pn)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                        call UnitAddAbility(u,'A076')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                        set l = Location(-8192,13244-(7164*I2R(pn)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                        call UnitAddAbility(u,'A076')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                    else
                        set l = Location(-8192,13244-(7164*I2R(pn-3)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                        call UnitAddAbility(u,'A071')
                        call UnitAddAbility(u,'A08V')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                        set l = Location(8192,13244-(7164*I2R(pn-3)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                        call UnitAddAbility(u,'A071')
                        call UnitAddAbility(u,'A08V')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)

                        set l = Location(-8192,13244-(7164*I2R(pn-3)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                        call UnitAddAbility(u,'A076')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                        set l = Location(8192,13244-(7164*I2R(pn-3)))
                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                        call UnitAddAbility(u,'A076')
                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                        call RemoveLocation(l)
                    endif
                else
                    if udg_ModNumber==1 then
                        if pn<4 then
                            set l = Location(2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A071')
                            call UnitAddAbility(u,'A08V')
                            call SetUnitAbilityLevel(u,'A071',2)
                            call SetUnitAbilityLevel(u,'A08V',2)
                            call RemoveLocation(l)
                            set l = Location(-2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A071')
                            call UnitAddAbility(u,'A08V')
                            call SetUnitAbilityLevel(u,'A071',2)
                            call SetUnitAbilityLevel(u,'A08V',2)
                            call RemoveLocation(l)

                            set l = Location(2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A076')
                            call SetUnitAbilityLevel(u,'A076',2)
                            call RemoveLocation(l)
                            set l = Location(-2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A076')
                            call SetUnitAbilityLevel(u,'A076',2)
                            call RemoveLocation(l)
                        else
                            set l = Location(-2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A071')
                            call UnitAddAbility(u,'A08V')
                            call SetUnitAbilityLevel(u,'A071',2)
                            call SetUnitAbilityLevel(u,'A08V',2)
                            call RemoveLocation(l)
                            set l = Location(2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A071')
                            call UnitAddAbility(u,'A08V')
                            call SetUnitAbilityLevel(u,'A071',2)
                            call SetUnitAbilityLevel(u,'A08V',2)
                            call RemoveLocation(l)

                            set l = Location(-2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A076')
                            call SetUnitAbilityLevel(u,'A076',2)
                            call RemoveLocation(l)
                            set l = Location(2496,1840)
                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                            call UnitAddAbility(u,'A076')
                            call SetUnitAbilityLevel(u,'A076',2)
                            call RemoveLocation(l)
                        endif
                    else
                        if udg_ModNumber==2 then
                            if pn<4 then
                                set l = Location(0,-7882)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                call UnitAddAbility(u,'A071')
                                call UnitAddAbility(u,'A08V')
                                call SetUnitAbilityLevel(u,'A071',2)
                                call SetUnitAbilityLevel(u,'A08V',2)
                                call RemoveLocation(l)

                                set l = Location(0,-7882)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                call UnitAddAbility(u,'A076')
                                call SetUnitAbilityLevel(u,'A076',2)
                                call RemoveLocation(l)
                            else
                                set l = Location(0,-7882)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                call UnitAddAbility(u,'A071')
                                call UnitAddAbility(u,'A08V')
                                call SetUnitAbilityLevel(u,'A071',2)
                                call SetUnitAbilityLevel(u,'A08V',2)
                                call RemoveLocation(l)

                                set l = Location(0,-7882)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                call UnitAddAbility(u,'A076')
                                call SetUnitAbilityLevel(u,'A076',2)
                                call RemoveLocation(l)
                            endif
                        else //udg_ModNumber==3
                            if pn<4 then
                                set l = Location(18176-(9088*I2R(pn)),-16704)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                call UnitAddAbility(u,'A071')
                                call UnitAddAbility(u,'A08V')
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                call RemoveLocation(l)

                                set l = Location(18176-(9088*I2R(pn)),-16704)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                call UnitAddAbility(u,'A076')
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                call RemoveLocation(l)
                            else
                                set l = Location(18176-(9088*I2R(pn-3)),-16704)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                call UnitAddAbility(u,'A071')
                                call UnitAddAbility(u,'A08V')
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                call RemoveLocation(l)

                                set l = Location(18176-(9088*I2R(pn-3)),-16704)
                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                call UnitAddAbility(u,'A076')
                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                call RemoveLocation(l)
                            endif
                        endif
                    endif
                endif
            endif
        endif
        if IsPassChosenByPlayer(pn,17) then
            call SetPlayerAbilityAvailable(PlayerSlot(pn-1),'A0CT',false)
        //    call SetPlayerAbilityAvailable(PlayerSlot(pn-1),'A0CZ',true)
        endif
        if IsPassChosenByPlayer(pn,9) then
            call ForGroup(udg_ThrouneWorkersGroup[pn],function SetItemDropNoWorkers)
        endif
        set pn=pn+1
    endloop
    call GroupEnumUnitsInRect(g,bj_mapInitialPlayableArea,null)
    call EnableTrigger(gg_trg_Tree)
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
    set l = null
endfunction

function DestRemove takes nothing returns nothing
    local integer i = GetDestructableTypeId(GetEnumDestructable())
    if i>='B002' and i<='B005' then
        call RemoveDestructable(GetEnumDestructable())
    endif
endfunction

function RemoveNeutral takes nothing returns nothing
    if GetOwningPlayer(GetEnumUnit())==PlayerSlot(12) then
        call RemoveUnit(GetEnumUnit())
    endif
endfunction

function WaveEndMsg takes boolean win, integer pn returns nothing
    local integer i = 0
    local string p = GetPlayerName(PlayerSlot(pn))
    if win then
	if udg_ModNumber==1 or  udg_ModNumber==2 then
	    if pn<3 then
    		loop
		    exitwhen i>5
			call DisplayTextToPlayer(PlayerSlot(i),0,0,"|c0020C000Правая команда|r выиграла раунд")
		    set i=i+1
    		endloop
	    else
    		loop
		    exitwhen i>5
			call DisplayTextToPlayer(PlayerSlot(i),0,0,"|c00E55BB0Левая команда|r выиграла раунд")
		    set i=i+1
    		endloop
	    endif
	else
	    if udg_ModNumber==0 then
    		loop
		    exitwhen i>5
                call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c0000ff11 выиграл раунд|r")
                set i=i+1
    		endloop
            call MultiboardSetItemValueNew( udg_Multiboard, 3, pn+3+pn/3, "|c0000ff11+|r ")
	    else //udg_ModNumber==3
            if pn<3 then
    		    loop
		        exitwhen i>2
                    call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c0000ff11 выиграл раунд|r против "+GetPlayerName(PlayerSlot(pn+3)))
		        set i=i+1
    		    endloop
    		    loop
		        exitwhen i>5
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,GetPlayerName(PlayerSlot(pn+3))+"|c00ff0000 проиграл раунд|r против "+p)
		        set i=i+1
    		    endloop
		else
    		    loop
		        exitwhen i>2
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,GetPlayerName(PlayerSlot(pn-3))+"|c00ff0000 проиграл раунд|r против "+p)
		        set i=i+1
    		    endloop
    		    loop
		        exitwhen i>5
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c0000ff11 выиграл раунд|r против "+GetPlayerName(PlayerSlot(pn-3)))
		        set i=i+1
    		    endloop
		endif
	    endif
	endif
    else
	if udg_ModNumber==1 or  udg_ModNumber==2 then
	    if pn<3 then
    		loop
		    exitwhen i>5
			call DisplayTextToPlayer(PlayerSlot(i),0,0,"|c0020C000Правая|r команда|c00ff0000 проиграла раунд|r")
		    set i=i+1
    		endloop
	    else
    		loop
		    exitwhen i>5
			call DisplayTextToPlayer(PlayerSlot(i),0,0,"|c00E55BB0Левая|r команда|c00ff0000 проиграла раунд|r")
		    set i=i+1
    		endloop
	    endif
	else
	    if udg_ModNumber==0 then
    		loop
		    exitwhen i>5
                call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c00ff0000 проиграл раунд|r")
                set i=i+1
    		endloop
            call MultiboardSetItemValueNew( udg_Multiboard, 3, pn+3+pn/3, "|c00ff2222-|r ")
	    else //udg_ModNumber==3
		if pn<3 then
    		    loop
		        exitwhen i>2
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c00ff0000 проиграл раунд|r против "+GetPlayerName(PlayerSlot(pn+3)))
		        set i=i+1
    		    endloop
    		    loop
		        exitwhen i>5
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,GetPlayerName(PlayerSlot(pn+3))+"|c0000ff11 выиграл раунд|r против "+p)
		        set i=i+1
    		    endloop
		else
    		    loop
		        exitwhen i>2
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,GetPlayerName(PlayerSlot(pn-3))+"|c0000ff11 выиграл раунд|r против "+p)
		        set i=i+1
    		    endloop
    		    loop
		        exitwhen i>5
			    call DisplayTextToPlayer(PlayerSlot(i),0,0,p+"|c00ff0000 проиграл раунд|r против "+GetPlayerName(PlayerSlot(pn-3)))
		        set i=i+1
    		    endloop
		endif
	    endif
	endif
    endif
    set p = null
endfunction

function DeleteSummonedUnits takes nothing returns nothing
    local unit u = GetEnumUnit()
    if not(IsUnitType(u,UNIT_TYPE_PEON) or IsUnitType(u,UNIT_TYPE_STRUCTURE)) and GetUnitTypeId(u)!='e01A' and GetUnitTypeId(u)!='n018' then
        call RemoveUnit(u)
    endif
    set u = null
endfunction

function DetonateCorruptedEarthDummies takes nothing returns nothing
    local unit u = GetEnumUnit()
    call IssuePointOrder(u,"detonate",GetUnitX(u),GetUnitY(u))
    set u = null
endfunction

function SpellbookUpgrdInMain takes integer i returns nothing
    local unit u = udg_ThrouneCaster[i]
    local integer array lvl
    local integer n = 1
    set lvl[1]='A0DQ'
    set lvl[2]='A0G7'
    set lvl[3]='A0G8'
    set lvl[4]='A0AI'
    
    set lvl[5]='A0GO'
    set lvl[6]='A0GP'
    set lvl[7]='A0GQ'
    set lvl[8]='A0GR'
    loop
        exitwhen n>3
        if GetUnitAbilityLevel(u,lvl[n])==1 then
            call UnitRemoveAbility(u,lvl[n])
            call UnitAddAbility(u,lvl[n+1])
            if udg_PlayerUsedIncomeSpell[i] then
                call SetPlayerAbilityAvailable(PlayerSlot(i-1),lvl[n+1],false)
            endif
            set n=8
        endif
        set n=n+1
    endloop
    set n=n+1
    loop
        exitwhen n>7
        if GetUnitAbilityLevel(u,lvl[n])==1 then
            call UnitRemoveAbility(u,lvl[n])
            call UnitAddAbility(u,lvl[n+1])
            if udg_PlayerUsedIncomeSpell[i] then
                call SetPlayerAbilityAvailable(PlayerSlot(i-1),lvl[n+1],false)
            endif
            set n=8
        endif
        set n=n+1
    endloop
    set u = null
endfunction

function Trig_StartConstr_ActionsDo takes unit who returns nothing
    local unit u = who
    
    call UnitAddAbility(u,'A0D0')// Пассивка 2 молодость
    if GetUnitAbilityLevel(u,'A07F')>0 then// Пассивка 10 стаки
        call UnitAddAbility(u,'A06E')
    else
        call UnitAddAbility(u,'A07G')
    endif
    call UnitAddAbility(u,'A0GC')// Пассивка 11 инвиз
    call UnitAddAbility(u,'A0B3')// Пассивка 13 каннибал
    call UnitAddAbility(u,'A0B4')// Пассивка 13 проглотить
    
    //call UnitAddAbility(u,'A08F')// Построен на этой волне
    set u = null
endfunction

function Trig_EndConstr_ActionsDo takes unit who returns nothing
    local unit u = who
    if not(IsUnitInGroup(u,udg_Constructed)) then
	    call GroupAddUnit(udg_Constructed,u)
    	
        set udg_NagaBuildingNum=udg_NagaBuildingNum+1// Каннибалы
        set udg_NagaBuildingU[udg_NagaBuildingNum]=u
        set udg_NagaBuildingPC[udg_NagaBuildingNum]=0
    	
    endif
    set u = null
endfunction

function Trig_StartUpgr_ActionsDo takes unit who, boolean upgrd returns integer
    local unit u = who
    call RemoveKataSpells(u)
    //local integer i = 1
    set udg_UUN=udg_UUN+1
    //call DisplayTextToPlayer(Player(0),0,0,"name="+GetUnitName(u))
    //call DisplayTextToPlayer(Player(0),0,0,"udg_UUN="+I2S(udg_UUN))
    set udg_UUT[udg_UUN]=u
    //set udg_UUL[udg_UUN]=GetUnitAbilityLevel(u,'A05P')+GetUnitAbilityLevel(u,'A054')+GetUnitAbilityLevel(u,'A0GI')+GetUnitAbilityLevel(u,'A07G')+GetUnitAbilityLevel(u,'A06E')+GetUnitAbilityLevel(u,'A0D0')+GetUnitAbilityLevel(u,'A0B3')
    set udg_UUL2[udg_UUN]=GetUnitAbilityLevel(u,'A0A3')+GetUnitAbilityLevel(u,'A045')+GetUnitAbilityLevel(u,'A046')// Стаки черепашки и золото налогов
    set udg_UUL3[udg_UUN]=GetUnitAbilityLevel(u,'A0GE')// Инвиз эльфа
    
    set udg_UULevelSpellOrc[udg_UUN]=GetUnitAbilityLevel(u,'A05P')+GetUnitAbilityLevel(u,'A054')// Спелл орк ярость
    set udg_UULevelSpellUnd[udg_UUN]=GetUnitAbilityLevel(u,'A0GI')// Спелл нежить респавн
    set udg_UULevelHum[udg_UUN]=GetUnitAbilityLevel(u,'A0D0')
    set udg_UULevelElf[udg_UUN]=GetUnitAbilityLevel(u,'A06E')+GetUnitAbilityLevel(u,'A07G')
    set udg_UULevelNaga[udg_UUN]=GetUnitAbilityLevel(u,'A0B3')
    //call DisplayTextToPlayer(Player(0),0,0,"can="+I2S(udg_UULevelNaga[udg_UUN]))
    //call DisplayTextToPlayer(Player(0),0,0,"elf="+I2S(udg_UULevelElf[udg_UUN]))
    
    if upgrd then
        call TriggerSleepAction(0)
        call UnitSetUpgradeProgress(u,100)
    endif
    set u = null
    return udg_UUN
endfunction

function Trig_EndUpgr_ActionsDo takes unit who, integer cann, integer UUNnum returns nothing
    local unit u = who
    local boolean b = true
    local integer i = 1
    local integer n = 1
    local integer k = 1
    local integer val
    local integer id = GetUnitTypeId(u)
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            if not(IsUnitInGroup(u,udg_ConstructedTW)) and cann==0 then
                call UnitAddAbility(u,'A090')
                set b = false
            endif
        endif
        set i=i+1
    endloop
    if b then
	    call UnitAddAbility(u,'A08F')
    endif
    set b = false
    set i=1
    loop
        exitwhen i>udg_UUN or b
        if udg_UUT[i]==u or i==UUNnum then
	        set b = true
            if udg_UUL2[i]>0 then// Стаки черепашки и золото налогов
                if id=='e01G' or id=='e01F' then
                    call UnitAddAbility(u,'A0A4')
                    call SetUnitAbilityLevel(u,'A0A4',udg_UUL2[i])
                else
                    if id=='h00Q' then
                        call UnitAddAbility(u,'A0A4')
                        call SetUnitAbilityLevel(u,'A0A4',udg_UUL2[i])
                        call SetUnitAbilityLevel(u,'A045',udg_UUL2[i])
                    else
                        if id=='h00P' then
                            call UnitAddAbility(u,'A0A4')
                            call SetUnitAbilityLevel(u,'A0A4',udg_UUL2[i])
                            if udg_UUL2[i]>1 then
                                call UnitAddAbility(u,'A0IT')
                                set val = 0
                                set n=1
                                loop
                                    exitwhen n>udg_UUL2[i]-1
                                    set val=val+7-n
                                    set n=n+1
                                endloop
                                call SetUnitAbilityLevel(u,'A0IT',val)
                                call SetUnitAbilityLevel(u,'A046',udg_UUL2[i])
                                call GetNewValPeasantAbilityFirstBuild(u)
                            else
                                call SetUnitAbilityLevel(u,'A046',udg_UUL2[i])
                            endif
                        endif
                    endif
                endif
            endif
            if udg_UUL3[i]>0 then// Инвиз эльф
                call UnitAddAbility(u,'A0GD')
                call UnitAddAbility(u,'A0GE')
            else
                call UnitAddAbility(u,'A0GC')
            endif
            
            
            if udg_UULevelSpellOrc[i]>0 then// Спелл орк ярость
                call UnitAddAbility(u,'A054')
                if udg_UULevelSpellOrc[i]==2 then
                    call UnitAddAbility(u,'A05P')
                endif
            endif
            if udg_UULevelSpellUnd[i]>0 then// Спелл нежить респавн
                call UnitAddAbility(u,'A0GI')
                call SetUnitAbilityLevel(u,'A0GI',udg_UULevelSpellUnd[i])
            endif
            call UnitAddAbility(u,'A0D0')// Пассивка альянс молодость
            call SetUnitAbilityLevel(u,'A0D0',udg_UULevelHum[i])
            if GetUnitAbilityLevel(u,'A07F')>0 then// Пассивка эльф стаки
                call UnitAddAbility(u,'A06E')
                call SetUnitAbilityLevel(u,'A06E',udg_UULevelElf[i])
                if IsPassChosenByPlayer(GetPlayerSlotId(GetOwningPlayer(u))+1,10) then
                    call SetUnitAbilityLevel(u,'A06E',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06L',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06H',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A01S',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06M',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06J',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A04W',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06G',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06F',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06C',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06D',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06I',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06K',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A01T',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06A',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A06B',udg_UULevelElf[i])
                    call SetUnitAbilityLevel(u,'A01Q',udg_UULevelElf[i])
                endif
            else
                call UnitAddAbility(u,'A07G')
                call SetUnitAbilityLevel(u,'A07G',udg_UULevelElf[i])
            endif
            call UnitAddAbility(u,'A0B3')// Пассивка нага каннибалы (В5-для дегрейда)
            call UnitAddAbility(u,'A0B4')
            if cann==0 then
                call UnitAddAbility(u,'A0B5')
                call SetUnitAbilityLevel(u,'A0B5',udg_UULevelNaga[i])
                set id = 0
                loop
                    exitwhen k>udg_NagaBuildingNum or id>0
                    if udg_NagaBuildingU[k]==u then
                        set id = k
                    endif
                    set k=k+1
                endloop
                set k=id
            else
                set k=cann
                set udg_NagaBuildingU[k]=u
            endif
            set id=GetUnitTypeId(u)
            set n=1
            loop
                exitwhen n>udg_UTN
                if id == udg_CreepTower[n] then
                    set n = (R2I( I2R(udg_NagaBuildingPC[k])/I2R(udg_CreepCost[n])*100+2.5))/5+1
                    if n>21 then
                        set n=21
                    endif
                    call SetUnitAbilityLevel(u,'A0B3',n)
                    if GetUnitAbilityLevel(u,'A0B3')>1 then
                        call UnitAddAbility(u,'A080')
                    endif
                    set n = udg_UTN
                endif
                set n=n+1
            endloop
            
            
            set udg_UUT[i]=udg_UUT[udg_UUN]
            //set udg_UUL[i]=udg_UUL[udg_UUN]
            set udg_UULevelSpellOrc[i]=udg_UULevelSpellOrc[udg_UUN]
            set udg_UULevelSpellUnd[i]=udg_UULevelSpellUnd[udg_UUN]
            set udg_UULevelHum[i]=udg_UULevelHum[udg_UUN]
            set udg_UULevelElf[i]=udg_UULevelElf[udg_UUN]
            set udg_UULevelNaga[i]=udg_UULevelNaga[udg_UUN]
            
            set udg_UUL2[i]=udg_UUL2[udg_UUN]
            set udg_UUL3[i]=udg_UUL3[udg_UUN]
            set udg_UUT[udg_UUN]=null
            //set udg_UUL[udg_UUN]=0
            set udg_UULevelSpellOrc[udg_UUN]=0
            set udg_UULevelSpellUnd[udg_UUN]=0
            set udg_UULevelHum[udg_UUN]=0
            set udg_UULevelElf[udg_UUN]=0
            set udg_UULevelNaga[udg_UUN]=0
            
            set udg_UUL2[udg_UUN]=0
            set udg_UUL3[udg_UUN]=0
            set udg_UUN=udg_UUN-1
            set i=i-1
        endif
        set i=i+1
    endloop
    set u=null
endfunction

function WaveEndForAll takes nothing returns nothing
    local integer a = 1
    local integer i
    local boolean b
    local group g = CreateGroup()
    local real x
    local real y
    local unit u
    call DisableTrigger(gg_trg_Tree)
    loop
        exitwhen udg_TreeGhostNum==0
        set x = GetUnitX(udg_TreeGhost[udg_TreeGhostNum])
        set y = GetUnitY(udg_TreeGhost[udg_TreeGhostNum])
        call SetTerrainType(x,y,'Zsan',-1,5,0)
        call RemoveUnit(udg_TreeGhost[udg_TreeGhostNum])
        set udg_TreeGhost[udg_TreeGhostNum]=null
        set udg_TreeGhostNum=udg_TreeGhostNum-1
    endloop
    call ForGroup(udg_CorruptedEarthDummy,function DetonateCorruptedEarthDummies)
    call EnumDestructablesInRect(bj_mapInitialPlayableArea,null,function DestRemove)
    call GroupEnumUnitsOfPlayer(g,PlayerSlot(12),null)
    call ForGroup(g,function removealways)
    call ForGroup(udg_WBUG, function DeleteForGroupWBUG)
    set udg_DemonPass17CreateFinalTime = 0
    loop
        exitwhen a>6
        set udg_StartSpellsWorkBool[a] = false
        call GroupClear(udg_StartSpellsWorkGroup[a])
	    set udg_ReadyWorker[a]=false
        if IsPassChosenByPlayer(a,17) then
            set udg_DemonPass17CreateNetworth[a]=0
            call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0CT',true)
            //call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0CZ',false)
        endif
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A08P',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0DQ',true)// items
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0G7',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0G8',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0AI',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0GO',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0GP',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0GQ',true)
	    call SetPlayerAbilityAvailable(PlayerSlot(a-1),'A0GR',true)
        if udg_ModNumber==0 and not(udg_BooleanPlay[a]) then
            call ForGroup(udg_PlayerTowersGroup[a], function TowerBack)
        endif
        set udg_WaveGoingForPlayer[a]=false
        set udg_PlayerUsedIncomeSpell[a]=false
        set u = CreateUnit(PlayerSlot(a-1),'e01A',0,0,0)
        call GroupAddUnit(udg_WAUG,u)
        call UnitResetCooldown(udg_ThrouneCaster[a])
        call UnitResetCooldown(udg_ThrouneExtra[a])
        call SetUnitState(udg_ThrouneCaster[a],UNIT_STATE_MANA,GetUnitState(udg_ThrouneCaster[a],UNIT_STATE_MANA)+3)
        call SetUnitState(udg_ThrouneExtra[a],UNIT_STATE_MANA,GetUnitState(udg_ThrouneExtra[a],UNIT_STATE_MANA)+3)
        if udg_BooleanPlay[a] then
            if IsPassChosenByPlayer(a,18) then
                if GetPlayerTechCount(PlayerSlot(a*2+4-a/4*5),'R00M',true)<3 then
                    call SetPlayerTechResearched(PlayerSlot(a*2+4-a/4*5),'R00M',IMinBJ((udg_Wave+1)/2,3))
                endif
                if IsPassChosenByPlayer(a,5) and GetPlayerTechCount(PlayerSlot(a*2+4-a/4*5),'R10Y',true)<5 then
                    call SetPlayerTechResearched(PlayerSlot(a*2+4-a/4*5),'R10Y',IMinBJ((udg_Wave+1),5))
                endif//(udg_Wave+1)/2+1
                set i = 1
                loop
                    exitwhen i>udg_AllSpellsCount
                    if GetUnitAbilityLevel(udg_ThrouneCaster[a],udg_AllSpellsSpell[i])>0 then
                        set u = udg_ThrouneCaster[a]
                    elseif GetUnitAbilityLevel(udg_ThrouneExtra[a],udg_AllSpellsSpell[i])>0 then
                        set u = udg_ThrouneExtra[a]
                    else
                        set u = null
                    endif
                    if u!=null then
                        if udg_Wave<=4 then
                            if udg_AllSpellsLevel[i]==5 then
                                call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],udg_Wave+2)
                            elseif udg_AllSpellsLevel[i]==3 then
                                call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],(udg_Wave+1)/2+1)
                            endif
                        else
                            if udg_Wave<7 then
                                if udg_AllSpellsLevel[i]==5 then
                                    call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],6)
                                elseif udg_AllSpellsLevel[i]==3 then
                                    call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],3)
                                endif
                            else
                                if udg_AllSpellsLevel[i]==5 then
                                    call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],7)
                                elseif udg_AllSpellsLevel[i]==3 then
                                    call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],4)
                                endif
                            endif
                        endif
                    endif
                    set i=i+1
                endloop
                if IsPassChosenByPlayer(a,9) then
                    set i=1
                    loop
                        if udg_Wave>=1 then
                            if udg_Wave>=3 then
                                if udg_Wave>=7 then
                                    //call DisplayTextToPlayer(Player(0),0,0,"go3")
                                    exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0AI')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GR')+i/11>0
                                else
                                    //call DisplayTextToPlayer(Player(0),0,0,"go2")
                                    exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0G8')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GQ')+i/11>0
                                endif
                            else
                                    //call DisplayTextToPlayer(Player(0),0,0,"go1")
                                exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0G7')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GP')+i/11>0
                            endif
                        else
                            exitwhen true
                        endif
                        call SpellbookUpgrdInMain(a)
                        set i=i+1
                    endloop
                endif
            else
                call SetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_LUMBER,GetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_LUMBER)+1)
            endif
        endif
        set a = a+1
    endloop
    
    set udg_WaveGoing = false
    
    call PauseTimer(udg_TimerWaveSpeedUp)
    
    call TimerStart(udg_TimerWave,(34+2*udg_Wave)*udg_WaveTimeMultiplier,false,null)
    call DestroyTimerDialog(udg_TimerWaveWindow)
    set udg_TimerWaveWindow = CreateTimerDialog(udg_TimerWave)
    if udg_TimerOffed then
        call PauseTimer(udg_TimerWave)
    endif
    set udg_Wave=udg_Wave+1
    if udg_Wave==11 then
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Финальная дуэль:")
    else
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль "+I2S(udg_Wave)+" через:")
    endif
    call TimerDialogDisplay(udg_TimerWaveWindow,true)
    call ClearDies()
    call MultiboardUpdate()
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function WaveEndForPlayerSolo takes player pl returns nothing
    local integer a = 1
    local integer i
    local group g = CreateGroup()
    local integer plnum = GetPlayerSlotId(pl)+1
    local real x
    local real y
    local unit u
    
    call BlueTurtleAndOtherSurvivorsSolo(GetPlayerSlotId(pl)+1)
    call ForGroup(udg_PlayerWarriorsGroup[plnum], function RemoveWarriors)
    set udg_IntegerX=plnum
    call ForGroup(udg_PlayerTowersGroup[plnum], function TowerBack)
    call GroupEnumUnitsInRect(g,udg_PlayerSectorFight[plnum],null)
    call ForGroup(g,function DeleteSummonedUnits)

    if IsPassChosenByPlayer(plnum,5) then
	    if udg_Wave==1 then
            set u = CreateUnit(pl,'h00C',GetUnitX(udg_Throune[plnum]),GetUnitY(udg_Throune[plnum]), 270)
            call Trig_StartConstr_ActionsDo(u)
            call Trig_EndConstr_ActionsDo(u)
	    else
	        if udg_Wave==5 then
                set u = CreateUnit(pl,'h00C',GetUnitX(udg_Throune[plnum]),GetUnitY(udg_Throune[plnum]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
	        else
		        if udg_Wave==9 then
                    set u = CreateUnit(pl,'h00C',GetUnitX(udg_Throune[plnum]),GetUnitY(udg_Throune[plnum]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
		        endif
	        endif
	    endif
    endif
    if IsPassChosenByPlayer(plnum,9) then
        if udg_Wave/2*2==udg_Wave then
            call UnitAddItem(udg_ThrouneWorker[plnum],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],GetUnitX(udg_ThrouneWorker[plnum]),GetUnitY(udg_ThrouneWorker[plnum])))
        endif
        call ForGroup(udg_ThrouneWorkersGroup[plnum],function SetItemDropYesWorkers)
    endif
    
    call EnumDestructablesInRect(udg_PlayerSectorFight[plnum],null,function DestRemove)
    call GroupEnumUnitsInRect(g,udg_PlayerSectorFight[plnum],null)
    call ForGroup(g,function RemoveNeutral)
    set u = CreateUnit(pl,'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    if IsPassChosenByPlayer(plnum,6) then
        call SetPlayerState(PlayerSlot(plnum-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(plnum-1),PLAYER_STATE_RESOURCE_GOLD)+105+udg_Wave*35)
    else
        call SetPlayerState(PlayerSlot(plnum-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(plnum-1),PLAYER_STATE_RESOURCE_GOLD)+90+udg_Wave*30)
    endif
    
    call MultiboardSetItemValueNew( udg_Multiboard, 2, plnum/4+2+plnum, "  "+I2S(udg_Lives[GetPlayerSlotId(PlayerSlot(plnum-1))+1]))
    
    if udg_EnableCreeps and udg_Wave<10 then
        call CreateCreepsTowersSolo(plnum)
    endif

    set udg_WaveGoingForPlayer[plnum]=false
    if not(udg_WaveGoingForPlayer[1] or udg_WaveGoingForPlayer[2] or udg_WaveGoingForPlayer[3] or udg_WaveGoingForPlayer[4] or udg_WaveGoingForPlayer[5] or udg_WaveGoingForPlayer[6]) then
        call WaveEndForAll()
    endif
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function WaveEndForPlayerTeam takes integer Int returns nothing
    local integer a = 1
    local group g = CreateGroup()
    local unit u
    
    call BlueTurtleAndOtherSurvivors()
    loop
        exitwhen a>6
        call ForGroup(udg_PlayerWarriorsGroup[a], function RemoveWarriors)
        call ForGroup(udg_PlayerCreepsGroup[a], function RemoveWarriors)
        set udg_IntegerX=a
        call ForGroup(udg_PlayerTowersGroup[udg_IntegerX], function TowerBack)
        call GroupEnumUnitsInRect(g,udg_PlayerSectorFight[a],null)
        call ForGroup(g,function DeleteSummonedUnits)

    	if IsPassChosenByPlayer(a,5) then
	        if udg_Wave==1 then
                set u = CreateUnit(PlayerSlot(a-1),'h00C',GetUnitX(udg_Throune[a]),GetUnitY(udg_Throune[a]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
	        else
	            if udg_Wave==5 then
                    set u = CreateUnit(PlayerSlot(a-1),'h00C',GetUnitX(udg_Throune[a]),GetUnitY(udg_Throune[a]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
	            else
		            if udg_Wave==9 then
                        set u = CreateUnit(PlayerSlot(a-1),'h00C',GetUnitX(udg_Throune[a]),GetUnitY(udg_Throune[a]), 270)
                        call Trig_StartConstr_ActionsDo(u)
                        call Trig_EndConstr_ActionsDo(u)
		            endif
	            endif
	        endif
        endif
        if IsPassChosenByPlayer(a,9) then
            if udg_Wave/2*2==udg_Wave then
                call UnitAddItem(udg_ThrouneWorker[a],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],GetUnitX(udg_ThrouneWorker[a]),GetUnitY(udg_ThrouneWorker[a])))
            endif
            call ForGroup(udg_ThrouneWorkersGroup[a],function SetItemDropYesWorkers)
        endif
    
        if IsPassChosenByPlayer(a,6) then
            call SetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_GOLD)+105+udg_Wave*35)
        else
            call SetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(a-1),PLAYER_STATE_RESOURCE_GOLD)+90+udg_Wave*30)
        endif
        set udg_WaveGoingForPlayer[a]=false
        set a=a+1
    endloop


    if Int==0 then
	if udg_Lives[4]<=1 then
	    set a=0
	    loop
		exitwhen a>5
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(3))+" был повержен!")
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(4))+" был повержен!")
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(5))+" был повержен!")
		set a=a+1
	    endloop
	    set a=4
	    loop
		exitwhen a>6
            	set udg_Lives[a] = 0
            	set udg_BooleanPlay[a] = false
            	call KillUnit(udg_ThrouneCaster[a])
            	call KillUnit(udg_ThrouneExtra[a])
            	call KillUnit(udg_ThrouneUpgr[a])
            	set udg_IntegerX=a
           	call ExecuteFunc("removetowersecond")
		set a=a+1
	    endloop
            call TimerStart(udg_TimerWin,0.01,false,null)
	else
	    call WaveEndMsg(true,0)
            set udg_Lives[4] = udg_Lives[4]-1
            set udg_Lives[5] = udg_Lives[4]
            set udg_Lives[6] = udg_Lives[4]
            call SetUnitState(udg_ThrouneCaster[4], UNIT_STATE_LIFE,udg_Lives[4])
            call WaveEndForAll()
	endif
    else
	if udg_Lives[1]<=1 then
	    set a=0
	    loop
		exitwhen a>5
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(0))+" был повержен!")
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(1))+" был повержен!")
            	call DisplayTextToPlayer(PlayerSlot(a),0,0, GetPlayerName(PlayerSlot(2))+" был повержен!")
		set a=a+1
	    endloop
	    set a=1
	    loop
		exitwhen a>3
            	set udg_Lives[a] = 0
            	set udg_BooleanPlay[a] = false
            	call KillUnit(udg_ThrouneCaster[a])
            	call KillUnit(udg_ThrouneExtra[a])
            	call KillUnit(udg_ThrouneUpgr[a])
            	set udg_IntegerX=a
           	call ExecuteFunc("removetowersecond")
		set a=a+1
	    endloop
            call TimerStart(udg_TimerWin,0.01,false,null)
	else
	    call WaveEndMsg(true,3)
            set udg_Lives[1] = udg_Lives[1]-1
            set udg_Lives[2] = udg_Lives[1]
            set udg_Lives[3] = udg_Lives[1]
            call SetUnitState(udg_ThrouneCaster[1], UNIT_STATE_LIFE,udg_Lives[1])
            call WaveEndForAll()
	endif
    endif


    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null

endfunction

function WaveEndForPlayerTeamDuels takes nothing returns nothing
    local group g = CreateGroup()
    local integer i = 1
    local unit u
    call BlueTurtleAndOtherSurvivors()
    loop
        exitwhen i>6
        if IsPassChosenByPlayer(i,6) then
            call SetPlayerState(PlayerSlot(i-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(i-1),PLAYER_STATE_RESOURCE_GOLD)+105+udg_Wave*35)
        else
            call SetPlayerState(PlayerSlot(i-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(i-1),PLAYER_STATE_RESOURCE_GOLD)+90+udg_Wave*30)
        endif
        call ForGroup(udg_PlayerWarriorsGroup[i], function RemoveWarriors)
        set udg_IntegerX=i
        call ForGroup(udg_PlayerTowersGroup[i], function TowerBack)

    	if IsPassChosenByPlayer(i,5) then
	        if udg_Wave==1 then
                set u = CreateUnit(PlayerSlot(i-1),'h00C',GetUnitX(udg_Throune[i]),GetUnitY(udg_Throune[i]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
	        else
	            if udg_Wave==5 then
                    set u = CreateUnit(PlayerSlot(i-1),'h00C',GetUnitX(udg_Throune[i]),GetUnitY(udg_Throune[i]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
	            else
		            if udg_Wave==9 then
                        set u = CreateUnit(PlayerSlot(i-1),'h00C',GetUnitX(udg_Throune[i]),GetUnitY(udg_Throune[i]), 270)
                        call Trig_StartConstr_ActionsDo(u)
                        call Trig_EndConstr_ActionsDo(u)
		            endif
	            endif
	        endif
        endif
        if IsPassChosenByPlayer(i,9) then
            if udg_Wave/2*2==udg_Wave then
                call UnitAddItem(udg_ThrouneWorker[i],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],GetUnitX(udg_ThrouneWorker[i]),GetUnitY(udg_ThrouneWorker[i])))
            endif
            call ForGroup(udg_ThrouneWorkersGroup[i],function SetItemDropYesWorkers)
        endif

        set i=i+1
    endloop
    call GroupEnumUnitsInRect(g,gg_rct_Duels,null)
    call ForGroup(g,function DeleteSummonedUnits)
    if udg_Lives[1] == 0 then
        call TimerStart(udg_TimerWin, 0.1, false, null)
        set udg_BooleanPlay[1] = false
        set udg_BooleanPlay[2] = false
        set udg_BooleanPlay[3] = false
        set udg_BooleanPlay[4] = true
        set udg_BooleanPlay[5] = true
        set udg_BooleanPlay[6] = true
    endif
    if udg_Lives[4] == 0 then
        call TimerStart(udg_TimerWin, 0.1, false, null)
        set udg_BooleanPlay[1] = true
        set udg_BooleanPlay[2] = true
        set udg_BooleanPlay[3] = true
        set udg_BooleanPlay[4] = false
        set udg_BooleanPlay[5] = false
        set udg_BooleanPlay[6] = false
    endif
    call WaveEndForAll()
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

function WaveEndForPlayerSD takes integer Int1 returns nothing
    local integer Int2
    local integer a = 1
    local integer n = 1
    local integer i
    local boolean b
    local group g = CreateGroup()
    local real x
    local real y
    local unit u
    local player pln
    if Int1<4 then
        set Int2=Int1+3
    else
        set Int2=Int1-3
    endif
    //call DisplayTextToPlayer(PlayerSlot(0),0,0,"!2tw "+I2S(udg_HeroPassExpTW[Int2]))
    //call DisplayTextToPlayer(PlayerSlot(0),0,0,"!2all "+I2S(udg_HeroPassExpAll[Int2]))
    
    call BlueTurtleAndOtherSurvivorsSolo(Int1)
    call BlueTurtleAndOtherSurvivorsSolo(Int2)
    //call HeroPassGetLimitOfExp(Int2)
    if udg_Lives[Int1]>1 then
        set udg_Lives[Int1]=udg_Lives[Int1]-1
	    call WaveEndMsg(true,Int2-1)
        call SetUnitState(udg_ThrouneCaster[Int1], UNIT_STATE_LIFE, I2R(udg_Lives[Int1]))
    else
        if udg_BooleanPlay[Int1] then
            set udg_Lives[Int1]=0
            call MultiboardSetItemValueNew( udg_Multiboard, 2, Int1+2+Int1/4, "  |c00ff55550|r ")
            call DisplayTextToPlayer(PlayerSlot(0),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(1),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(2),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(3),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(4),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(5),0,0, GetPlayerName(PlayerSlot(Int1-1))+" был повержен!")
            call SetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_GOLD,0)
            call SetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerAbilityAvailable(PlayerSlot(Int1-1),'A0B4',false)
            set udg_BooleanPlay[Int1] = false
            call KillUnit(udg_ThrouneCaster[Int1])
            call KillUnit(udg_ThrouneExtra[Int1])
            call KillUnit(udg_ThrouneUpgr[Int1])
            set udg_IntegerX=Int1
            call ExecuteFunc("removetowersecond")
            
            if Int1<4 then
                if not(udg_BooleanPlay[1] or udg_BooleanPlay[2] or udg_BooleanPlay[3]) then
                    call TimerStart(udg_TimerWin, 0.001, false, null)
                    set udg_BooleanPlay[1] = false
                    set udg_BooleanPlay[2] = false
                    set udg_BooleanPlay[3] = false
                    set udg_BooleanPlay[4] = true
                    set udg_BooleanPlay[5] = true
                    set udg_BooleanPlay[6] = true
                endif
            else
                if not(udg_BooleanPlay[4] or udg_BooleanPlay[5] or udg_BooleanPlay[6]) then
                    call TimerStart(udg_TimerWin, 0.001, false, null)
                    set udg_BooleanPlay[1] = true
                    set udg_BooleanPlay[2] = true
                    set udg_BooleanPlay[3] = true
                    set udg_BooleanPlay[4] = false
                    set udg_BooleanPlay[5] = false
                    set udg_BooleanPlay[6] = false
                endif
            endif
        endif
    endif
    
    call ForGroup(udg_PlayerWarriorsGroup[Int1], function RemoveWarriors)
    call ForGroup(udg_PlayerWarriorsGroup[Int2], function RemoveWarriors)
    
    set udg_IntegerX=Int1
    call ForGroup(udg_PlayerTowersGroup[Int1], function TowerBack)

    if IsPassChosenByPlayer(Int1,5) then
	    if udg_Wave==1 then
            set u = CreateUnit(PlayerSlot(Int1-1),'h00C',GetUnitX(udg_Throune[Int1]),GetUnitY(udg_Throune[Int1]), 270)
            call Trig_StartConstr_ActionsDo(u)
            call Trig_EndConstr_ActionsDo(u)
	    else
	        if udg_Wave==5 then
                set u = CreateUnit(PlayerSlot(Int1-1),'h00C',GetUnitX(udg_Throune[Int1]),GetUnitY(udg_Throune[Int1]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
	        else
		        if udg_Wave==9 then
                    set u = CreateUnit(PlayerSlot(Int1-1),'h00C',GetUnitX(udg_Throune[Int1]),GetUnitY(udg_Throune[Int1]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
		        endif
	        endif
	    endif
    endif
    if IsPassChosenByPlayer(Int1,9) then
        if udg_Wave/2*2==udg_Wave then
            call UnitAddItem(udg_ThrouneWorker[Int1],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],GetUnitX(udg_ThrouneWorker[Int1]),GetUnitY(udg_ThrouneWorker[Int1])))
        endif
        call ForGroup(udg_ThrouneWorkersGroup[Int1],function SetItemDropYesWorkers)
    endif

    set udg_IntegerX=Int2
    call ForGroup(udg_PlayerTowersGroup[Int2], function TowerBack)

    if IsPassChosenByPlayer(Int2,5) then
	    if udg_Wave==1 then
            set u = CreateUnit(PlayerSlot(Int2-1),'h00C',GetUnitX(udg_Throune[Int2]),GetUnitY(udg_Throune[Int2]), 270)
            call Trig_StartConstr_ActionsDo(u)
            call Trig_EndConstr_ActionsDo(u)
	    else
	        if udg_Wave==5 then
                set u = CreateUnit(PlayerSlot(Int2-1),'h00C',GetUnitX(udg_Throune[Int2]),GetUnitY(udg_Throune[Int2]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
	        else
		        if udg_Wave==9 then
                    set u = CreateUnit(PlayerSlot(Int2-1),'h00C',GetUnitX(udg_Throune[Int2]),GetUnitY(udg_Throune[Int2]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
		        endif
	        endif
	    endif
    endif
    if IsPassChosenByPlayer(Int2,9) then
        if udg_Wave/2*2==udg_Wave then
            call UnitAddItem(udg_ThrouneWorker[Int2],CreateItem(udg_UndeadItemsPassAll[GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])+20],GetUnitX(udg_ThrouneWorker[Int2]),GetUnitY(udg_ThrouneWorker[Int2])))
        endif
        call ForGroup(udg_ThrouneWorkersGroup[Int2],function SetItemDropYesWorkers)
    endif


    call GroupEnumUnitsInRect(g,udg_PlayerSectorFight[Int1],null)
    call ForGroup(g,function DeleteSummonedUnits)
    
    call EnumDestructablesInRect(udg_PlayerSectorFight[Int1],null,function DestRemove)
    call GroupEnumUnitsInRect(g,udg_PlayerSectorFight[Int1],null)
    call ForGroup(g,function RemoveNeutral)
    set u = CreateUnit(PlayerSlot(Int1-1),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(Int2-1),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    if udg_BooleanPlay[Int1] then
        if IsPassChosenByPlayer(Int1,6) then
            call SetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_GOLD)+105+udg_Wave*35)
        else
            call SetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(Int1-1),PLAYER_STATE_RESOURCE_GOLD)+90+udg_Wave*30)
        endif
    endif
    if udg_BooleanPlay[Int2] then
        if IsPassChosenByPlayer(Int2,6) then
            call SetPlayerState(PlayerSlot(Int2-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(Int2-1),PLAYER_STATE_RESOURCE_GOLD)+105+udg_Wave*35)
        else
            call SetPlayerState(PlayerSlot(Int2-1),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(Int2-1),PLAYER_STATE_RESOURCE_GOLD)+90+udg_Wave*30)
        endif
    endif
    set udg_WaveGoingForPlayer[Int1]=false
    set udg_WaveGoingForPlayer[Int2]=false
    if not(udg_WaveGoingForPlayer[1] or udg_WaveGoingForPlayer[2] or udg_WaveGoingForPlayer[3] or udg_WaveGoingForPlayer[4] or udg_WaveGoingForPlayer[5] or udg_WaveGoingForPlayer[6]) then
        call WaveEndForAll()
    endif
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Duel1
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function IsUnitPeon takes nothing returns boolean
    return IsUnitType(GetLeavingUnit(), UNIT_TYPE_PEON)
endfunction

function Trig_Duel1_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_DuelsPeons1),GetRectCenterY(gg_rct_DuelsPeons1))
endfunction

//===========================================================================
function InitTrig_Duel1 takes nothing returns nothing
    set gg_trg_Duel1 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Duel1, gg_rct_DuelsPeons1 )
    call TriggerAddCondition( gg_trg_Duel1, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Duel1, function Trig_Duel1_Actions )
endfunction

//===========================================================================
// Trigger: Duel2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Duel2_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_DuelsPeons2),GetRectCenterY(gg_rct_DuelsPeons2))
endfunction

//===========================================================================
function InitTrig_Duel2 takes nothing returns nothing
    set gg_trg_Duel2 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Duel2, gg_rct_DuelsPeons2 )
    call TriggerAddCondition( gg_trg_Duel2, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Duel2, function Trig_Duel2_Actions )
endfunction//===========================================================================
// Trigger: Single1
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight1peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight1peons),GetRectCenterY(gg_rct_Fight1peons))
endfunction

//===========================================================================
function InitTrig_Single1 takes nothing returns nothing
    set gg_trg_Single1 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single1, gg_rct_Fight1peons )
    call TriggerAddCondition( gg_trg_Single1, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single1, function Trig_Fight1peons_Actions )
endfunction

//===========================================================================
// Trigger: Single2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight2peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight2peons),GetRectCenterY(gg_rct_Fight2peons))
endfunction

//===========================================================================
function InitTrig_Single2 takes nothing returns nothing
    set gg_trg_Single2 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single2, gg_rct_Fight2peons )
    call TriggerAddCondition( gg_trg_Single2, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single2, function Trig_Fight2peons_Actions )
endfunction

//===========================================================================
// Trigger: Single3
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight3peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight3peons),GetRectCenterY(gg_rct_Fight3peons))
endfunction

//===========================================================================
function InitTrig_Single3 takes nothing returns nothing
    set gg_trg_Single3 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single3, gg_rct_Fight3peons )
    call TriggerAddCondition( gg_trg_Single3, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single3, function Trig_Fight3peons_Actions )
endfunction

//===========================================================================
// Trigger: Single4
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight4peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight4peons),GetRectCenterY(gg_rct_Fight4peons))
endfunction

//===========================================================================
function InitTrig_Single4 takes nothing returns nothing
    set gg_trg_Single4 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single4, gg_rct_Fight4peons )
    call TriggerAddCondition( gg_trg_Single4, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single4, function Trig_Fight4peons_Actions )
endfunction

//===========================================================================
// Trigger: Single5
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight5peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight5peons),GetRectCenterY(gg_rct_Fight5peons))
endfunction

//===========================================================================
function InitTrig_Single5 takes nothing returns nothing
    set gg_trg_Single5 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single5, gg_rct_Fight5peons )
    call TriggerAddCondition( gg_trg_Single5, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single5, function Trig_Fight5peons_Actions )
endfunction

//===========================================================================
// Trigger: Single6
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Fight6peons_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_Fight6peons),GetRectCenterY(gg_rct_Fight6peons))
endfunction

//===========================================================================
function InitTrig_Single6 takes nothing returns nothing
    set gg_trg_Single6 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Single6, gg_rct_Fight6peons )
    call TriggerAddCondition( gg_trg_Single6, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Single6, function Trig_Fight6peons_Actions )
endfunction

//===========================================================================
// Trigger: Team1
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Team1_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_TeamFight1peons),GetRectCenterY(gg_rct_TeamFight1peons))
endfunction

//===========================================================================
function InitTrig_Team1 takes nothing returns nothing
    set gg_trg_Team1 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Team1, gg_rct_TeamFight1peons )
    call TriggerAddCondition( gg_trg_Team1, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Team1, function Trig_Team1_Actions )
endfunction

//===========================================================================
// Trigger: Team2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Team2_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_TeamFight2peons),GetRectCenterY(gg_rct_TeamFight2peons))
endfunction

//===========================================================================
function InitTrig_Team2 takes nothing returns nothing
    set gg_trg_Team2 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_Team2, gg_rct_TeamFight2peons )
    call TriggerAddCondition( gg_trg_Team2, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_Team2, function Trig_Team2_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel1
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel1_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel1peons),GetRectCenterY(gg_rct_SoloDuel1peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel1 takes nothing returns nothing
    set gg_trg_SoloDuel1 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel1, gg_rct_SoloDuel1peons )
    call TriggerAddCondition( gg_trg_SoloDuel1, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel1, function Trig_SoloDuel1_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel2_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel2peons),GetRectCenterY(gg_rct_SoloDuel2peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel2 takes nothing returns nothing
    set gg_trg_SoloDuel2 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel2, gg_rct_SoloDuel2peons )
    call TriggerAddCondition( gg_trg_SoloDuel2, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel2, function Trig_SoloDuel2_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel3
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel3_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel3peons),GetRectCenterY(gg_rct_SoloDuel3peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel3 takes nothing returns nothing
    set gg_trg_SoloDuel3 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel3, gg_rct_SoloDuel3peons )
    call TriggerAddCondition( gg_trg_SoloDuel3, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel3, function Trig_SoloDuel3_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel4
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel4_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel4peons),GetRectCenterY(gg_rct_SoloDuel4peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel4 takes nothing returns nothing
    set gg_trg_SoloDuel4 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel4, gg_rct_SoloDuel4peons )
    call TriggerAddCondition( gg_trg_SoloDuel4, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel4, function Trig_SoloDuel4_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel5
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel5_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel5peons),GetRectCenterY(gg_rct_SoloDuel5peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel5 takes nothing returns nothing
    set gg_trg_SoloDuel5 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel5, gg_rct_SoloDuel5peons )
    call TriggerAddCondition( gg_trg_SoloDuel5, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel5, function Trig_SoloDuel5_Actions )
endfunction

//===========================================================================
// Trigger: SoloDuel6
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SoloDuel6_Actions takes nothing returns nothing
    call SetUnitPosition(GetLeavingUnit(),GetRectCenterX(gg_rct_SoloDuel6peons),GetRectCenterY(gg_rct_SoloDuel6peons))
endfunction

//===========================================================================
function InitTrig_SoloDuel6 takes nothing returns nothing
    set gg_trg_SoloDuel6 = CreateTrigger(  )
    call TriggerRegisterLeaveRectSimple( gg_trg_SoloDuel6, gg_rct_SoloDuel6peons )
    call TriggerAddCondition( gg_trg_SoloDuel6, Condition( function IsUnitPeon ) )
    call TriggerAddAction( gg_trg_SoloDuel6, function Trig_SoloDuel6_Actions )
endfunction

//===========================================================================
// Trigger: AddTriggersAll
//===========================================================================
//TESH.scrollpos=204
//TESH.alwaysfold=0
function Return1 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<7046 then
        call SetUnitX(u,7046)
    else
        if GetUnitX(u)>9341 then
            call SetUnitX(u,9341)
        endif
    endif
    if GetUnitY(u)<3162 then
        call SetUnitY(u,3162)
    else
        if GetUnitY(u)>8986 then
            call SetUnitY(u,8986)
        endif
    endif
    set u = null
endfunction

function Return2 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<7046 then
        call SetUnitX(u,7046)
    else
        if GetUnitX(u)>9341 then
            call SetUnitX(u,9341)
        endif
    endif
    if GetUnitY(u)<-3994 then
        call SetUnitY(u,-3994)
    else
        if GetUnitY(u)>1818 then
            call SetUnitY(u,1818)
        endif
    endif
    set u = null
endfunction

function Return3 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<7046 then
        call SetUnitX(u,7046)
    else
        if GetUnitX(u)>9341 then
            call SetUnitX(u,9341)
        endif
    endif
    if GetUnitY(u)<-11162 then
        call SetUnitY(u,-11162)
    else
        if GetUnitY(u)>-5344 then
            call SetUnitY(u,-5344)
        endif
    endif
    set u = null
endfunction

function Return4 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-9341 then
        call SetUnitX(u,-9341)
    else
        if GetUnitX(u)>-7046 then
            call SetUnitX(u,-7046)
        endif
    endif
    if GetUnitY(u)<3162 then
        call SetUnitY(u,3162)
    else
        if GetUnitY(u)>8986 then
            call SetUnitY(u,8986)
        endif
    endif
    set u = null
endfunction

function Return5 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-9341 then
        call SetUnitX(u,-9341)
    else
        if GetUnitX(u)>-7046 then
            call SetUnitX(u,-7046)
        endif
    endif
    if GetUnitY(u)<-3994 then
        call SetUnitY(u,-3994)
    else
        if GetUnitY(u)>1818 then
            call SetUnitY(u,1818)
        endif
    endif
    set u = null
endfunction

function Return6 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-9341 then
        call SetUnitX(u,-9341)
    else
        if GetUnitX(u)>-7046 then
            call SetUnitX(u,-7046)
        endif
    endif
    if GetUnitY(u)<-11162 then
        call SetUnitY(u,-11162)
    else
        if GetUnitY(u)>-3962 then
            call SetUnitY(u,-3962)
        endif
    endif
    set u = null
endfunction

function ReturnTeam1 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<1018 then
        call SetUnitX(u,1018)
    else
        if GetUnitX(u)>3962 then
            call SetUnitX(u,3962)
        endif
    endif
    if GetUnitY(u)<-1914 then
        call SetUnitY(u,-1914)
    else
        if GetUnitY(u)>9082 then
            call SetUnitY(u,9082)
        endif
    endif
    set u = null
endfunction

function ReturnTeam2 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-3962 then
        call SetUnitX(u,-3962)
    else
        if GetUnitX(u)>-1024 then
            call SetUnitX(u,-1024)
        endif
    endif
    if GetUnitY(u)<-1914 then
        call SetUnitY(u,-1914)
    else
        if GetUnitY(u)>9082 then
            call SetUnitY(u,9082)
        endif
    endif
    set u = null
endfunction

function ReturnDuels takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-3994 then
        call SetUnitX(u,-3994)
    else
        if GetUnitX(u)>3994 then
            call SetUnitX(u,3994)
        endif
    endif
    if GetUnitY(u)<-9636 then
        call SetUnitY(u,-9636)
    else
        if GetUnitY(u)>-6106 then
            call SetUnitY(u,-6106)
        endif
    endif
    set u = null
endfunction

function ReturnSoloDuel14 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<5472 then
        call SetUnitX(u,5472)
    else
        if GetUnitX(u)>12704 then
            call SetUnitX(u,12704)
        endif
    endif
    if GetUnitY(u)<-18336 then
        call SetUnitY(u,-18336)
    else
        if GetUnitY(u)>-15072 then
            call SetUnitY(u,-15072)
        endif
    endif
    set u = null
endfunction

function ReturnSoloDuel25 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-3616 then
        call SetUnitX(u,-3616)
    else
        if GetUnitX(u)>3616 then
            call SetUnitX(u,3616)
        endif
    endif
    if GetUnitY(u)<-18336 then
        call SetUnitY(u,-18336)
    else
        if GetUnitY(u)>-15072 then
            call SetUnitY(u,-15072)
        endif
    endif
    set u = null
endfunction

function ReturnSoloDuel36 takes nothing returns nothing
    local unit u = GetLeavingUnit()
    if GetUnitX(u)<-12704 then
        call SetUnitX(u,-12704)
    else
        if GetUnitX(u)>-5472 then
            call SetUnitX(u,-5472)
        endif
    endif
    if GetUnitY(u)<-18336 then
        call SetUnitY(u,-18336)
    else
        if GetUnitY(u)>-15072 then
            call SetUnitY(u,-15072)
        endif
    endif
    set u = null
endfunction

//===========================================================================
function InitTrig_AddTriggersAll takes nothing returns nothing
    local trigger t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight1 )
    call TriggerAddAction( t, function Return1 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight2 )
    call TriggerAddAction( t, function Return2 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight3 )
    call TriggerAddAction( t, function Return3 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight4 )
    call TriggerAddAction( t, function Return4 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight5 )
    call TriggerAddAction( t, function Return5 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Fight6 )
    call TriggerAddAction( t, function Return6 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_TeamFight1 )
    call TriggerAddAction( t, function ReturnTeam1 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_TeamFight2 )
    call TriggerAddAction( t, function ReturnTeam2 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_Duels )
    call TriggerAddAction( t, function ReturnDuels )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_SoloDuel14 )
    call TriggerAddAction( t, function ReturnSoloDuel14 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_SoloDuel25 )
    call TriggerAddAction( t, function ReturnSoloDuel25 )
    set t = CreateTrigger()
    call TriggerRegisterLeaveRectSimple( t, gg_rct_SoloDuel36 )
    call TriggerAddAction( t, function ReturnSoloDuel36 )
    set t = null
endfunction

//===========================================================================
// Trigger: Waving
//===========================================================================
//TESH.scrollpos=222
//TESH.alwaysfold=0
function TimerWaveSpeedUpTicCond takes nothing returns boolean
    return udg_TimerWaveSpeedUpNum!=0 and not(udg_DmgOffed)
endfunction

function TimerWaveSpeedUpFG takes nothing returns nothing
    local unit u = GetEnumUnit()
    call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)-(0.002*udg_TimerWaveSpeedUpNum)*GetUnitState(u,UNIT_STATE_MAX_LIFE))
    set u = null
endfunction

function TimerWaveSpeedUpTic takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>6
        call ForGroup(udg_PlayerWarriorsGroup[i], function TimerWaveSpeedUpFG)
        call ForGroup(udg_PlayerCreepsGroup[i], function TimerWaveSpeedUpFG)
        set i=i+1
    endloop
endfunction


function TimerWaveSpeedUpEnd takes nothing returns nothing
    call TimerStart(udg_TimerWaveSpeedUp,5,false,null)
    if udg_TimerWaveSpeedUpNum==0 then
        call DisplayTextToPlayer(PlayerSlot(0),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
        call DisplayTextToPlayer(PlayerSlot(1),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
        call DisplayTextToPlayer(PlayerSlot(2),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
        call DisplayTextToPlayer(PlayerSlot(3),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
        call DisplayTextToPlayer(PlayerSlot(4),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
        call DisplayTextToPlayer(PlayerSlot(5),0,0, "|cffff8c00Раунд затянулся, все войска начинают терять здоровье со временем|r")
    endif
    set udg_TimerWaveSpeedUpNum=udg_TimerWaveSpeedUpNum+1
endfunction

function TimerWaveSpeedUpStart takes nothing returns nothing
    call TimerStart(udg_TimerWaveSpeedUp,60,false,null)
    set udg_TimerWaveSpeedUpNum=0
endfunction


function TowersNum takes nothing returns nothing
    local integer id=GetUnitTypeId(GetEnumUnit())
    local integer i = 1
    if GetUnitState(GetEnumUnit(),UNIT_STATE_LIFE)==0 then
	return
    endif
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            set udg_int = udg_int+1
        endif
        set i=i+1
    endloop
endfunction

function Trig_Waving_ActionsTeam takes nothing returns nothing
    local unit u
    local group g = CreateGroup()
    local integer i = 1
    local integer n
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Цена" )
    call SpellsWaveStart()
    if udg_Wave <11 then
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль "+I2S(udg_Wave)+"")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        set i=1
        loop
            exitwhen i>6
            set udg_WaveGoingForPlayer[i]=true
            if udg_BooleanPlayForTA[i] then
                set udg_MultiboardUnitsGoldStart[i]=0
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                set udg_int=0
                call ForGroup(g,function TowersNum)
                if udg_int>0 then
                    call ForGroup(g, function ReplaceWithUnitTeam)
                    set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
                else
                    set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
                    if i<4 then
                        set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],90)
                        call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+6000)
                        set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',-1*udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+6000,270)
                        call GroupAddUnit(udg_PlayerCreepsGroup[i+3],u)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i+3],udg_PlayerHomeLocY[i+3])
                    else
                        set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],90)
                        call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+6000)
                        set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',-1*udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+6000,270)
                        call GroupAddUnit(udg_PlayerCreepsGroup[i-3],u)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i+3],udg_PlayerHomeLocY[i+3])
                    endif
                endif
            endif
            set i=i+1
        endloop
    	call MultiboardSetItemValueNew( udg_Multiboard, 3, 2,I2S(R2I(udg_MultiboardUnitsGoldNow[1]+udg_MultiboardUnitsGoldNow[2]+udg_MultiboardUnitsGoldNow[3]+0.25)))
    	call MultiboardSetItemValueNew( udg_Multiboard, 3, 3,I2S(R2I(udg_MultiboardUnitsGoldNow[4]+udg_MultiboardUnitsGoldNow[5]+udg_MultiboardUnitsGoldNow[6]+0.25)))
    else
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Финальная дуэль")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] then
    		set udg_MultiboardUnitsGoldStart[i]=0
                set udg_WaveGoingForPlayer[i]=true
            endif
            set i=i+1
        endloop
        set i=1
        call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call SetCameraPosition(0,-7857)
        if udg_Lives[1]+udg_Lives[2]+udg_Lives[3]<udg_Lives[4]+udg_Lives[5]+udg_Lives[6] then
            set udg_DuelHP[1]=I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])/I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])
            set udg_DuelHP[2]=1
        else
            set udg_DuelHP[1]=1
            set udg_DuelHP[2]=I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])/I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])
        endif
        loop
            exitwhen i>6
            if i<4 then
                set udg_RealX = 975
                set n = i-1
            else
                set udg_RealX = -975
                set n = i-4
            endif
            set udg_RealY = -1970
            call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
            call ForGroup(g, function ReplaceWithUnitLastTeam)
    	    set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
            set i=i+1
        endloop
    	call MultiboardSetItemValueNew( udg_Multiboard, 3, 2,I2S(R2I(udg_MultiboardUnitsGoldNow[1]+udg_MultiboardUnitsGoldNow[2]+udg_MultiboardUnitsGoldNow[3]+0.25)))
    	call MultiboardSetItemValueNew( udg_Multiboard, 3, 3,I2S(R2I(udg_MultiboardUnitsGoldNow[4]+udg_MultiboardUnitsGoldNow[5]+udg_MultiboardUnitsGoldNow[6]+0.25)))
    endif
    set udg_WaveGoing = true
    call TimerWaveSpeedUpStart()
    call GroupClear(g)
    call DestroyGroup(g)
    set g=null
    set u=null
endfunction

function Trig_Waving_ActionsSingle takes nothing returns nothing
    local unit u
    local group g = CreateGroup()
    local integer i = 1
    local integer n
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Цена" )
    call SpellsWaveStart()
    if udg_Wave<11 then
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль "+I2S(udg_Wave)+"")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        set i=1
        loop
            exitwhen i>3
            if udg_BooleanPlay[i] or udg_BooleanPlay[i+3] then
                set udg_MultiboardUnitsGoldStart[i]=0
                if udg_BooleanPlay[i] then
                    set udg_WaveGoingForPlayer[i]=true
                endif
                if udg_EnableCreeps then
                    call ReplaceCreepsTowersSolo(i)
                endif
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                set udg_int=0
                call ForGroup(g,function TowersNum)
                if udg_int>0 then
                    call ForGroup(g, function ReplaceWithUnit)
                    set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
            	    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+i,I2S(R2I(udg_MultiboardUnitsGoldNow[i]+0.25)))
                else
            	    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+i,"0")
                    if udg_BooleanPlay[i] then
                        set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],90)
                        call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                        call SetUnitColor(u,udg_PlayerColor[i])
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+4400)
                    endif
                    if udg_BooleanPlay[i+3] and not(udg_EnableCreeps) then
                        set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',-1*udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+4400,270)
                        call GroupAddUnit(udg_PlayerCreepsGroup[i+3],u)
                        call SetUnitColor(u,udg_PlayerColor[i])
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i+3],udg_PlayerHomeLocY[i+3])
                    endif
                endif
            endif
            set i=i+1
        endloop
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] or udg_BooleanPlay[i-3] then
    		set udg_MultiboardUnitsGoldStart[i]=0
                if udg_BooleanPlay[i] then
                    set udg_WaveGoingForPlayer[i]=true
                endif
                if udg_EnableCreeps then
                    call ReplaceCreepsTowersSolo(i)
                endif
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                set udg_int=0
                call ForGroup(g,function TowersNum)
                if udg_int>0 then
                    call ForGroup(g, function ReplaceWithUnit)
                    set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
            	    call MultiboardSetItemValueNew( udg_Multiboard, 3, 3+i,I2S(R2I(udg_MultiboardUnitsGoldNow[i]+0.25)))
                else
                    if udg_BooleanPlay[i] then
                        set udg_MultiboardUnitsGoldNow[i]=0
                        call MultiboardSetItemValueNew( udg_Multiboard, 3, 3+i,I2S(0))
                        set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],90)
                        call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                        call SetUnitColor(u,udg_PlayerColor[i])
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+4400)
                    endif
                    if udg_BooleanPlay[i-3] and not(udg_EnableCreeps) then
                        set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',-1*udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i]+4400,270)
                        call GroupAddUnit(udg_PlayerCreepsGroup[i-3],u)
                        call SetUnitColor(u,udg_PlayerColor[i])
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i-3],udg_PlayerHomeLocY[i-3])
                    endif
                endif
            endif
            set i=i+1
        endloop
        set udg_NextCreepsWave = GetRandomInt(udg_Wave*udg_CreepsWaveNum+1,(udg_Wave+1)*udg_CreepsWaveNum)
        //set udg_NextCreepsWave = (udg_Wave+1)*udg_CreepsWaveNum
    else
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Финальная дуэль")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        
        set i=1
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] then
    		set udg_MultiboardUnitsGoldStart[i]=0
                set udg_WaveGoingForPlayer[i]=true
            endif
            set i=i+1
        endloop
        call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call SetCameraPosition(0,-7857)
        if udg_Lives[1]+udg_Lives[2]+udg_Lives[3]<udg_Lives[4]+udg_Lives[5]+udg_Lives[6] then
            set udg_DuelHP[1]=I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])/I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])
            set udg_DuelHP[2]=1
        else
            set udg_DuelHP[1]=1
            set udg_DuelHP[2]=I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])/I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])
        endif
        set i = 1
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] then
                if i<4 then
                    set udg_RealX = 7000
                    set n = i-1
                else
                    set udg_RealX = -7000
                    set n = i-4
                endif
                set udg_RealY = 3050-(7068*n)
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                set udg_MultiboardUnitsGoldStart[i]=0
                call ForGroup(g, function ReplaceWithUnitLast)
                set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
                call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+i+i/4,I2S(R2I(udg_MultiboardUnitsGoldNow[i]+0.25)))
            endif
            set i=i+1
        endloop
    endif
    set udg_WaveGoing = true
    call TimerWaveSpeedUpStart()
    call GroupClear(g)
    call DestroyGroup(g)
    set g=null
    set u=null
endfunction

function Trig_Waving_ActionsDuels takes nothing returns nothing
    local unit u
    local group g = CreateGroup()
    local integer i = 1
    local integer n
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Цена" )
    call SpellsWaveStart()
    if udg_Wave==11 then
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Финальная дуэль")
    else
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль "+I2S(udg_Wave)+"")
    endif
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
    loop
        exitwhen i>6
        if udg_BooleanPlay[i] then
    	    set udg_MultiboardUnitsGoldStart[i]=0
            set udg_WaveGoingForPlayer[i]=true
            call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
            set udg_int=0
            call ForGroup(g,function TowersNum)
            if udg_int>0 then
                call ForGroup(g, function ReplaceWithUnitDuels)
    	        set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
            else
    	        set udg_MultiboardUnitsGoldNow[i]=0
                if i<4 then
                    set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],180)
                    call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                    call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i]-6300,udg_PlayerHomeLocY[i])
                else
                    set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],0)
                    call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                    call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i]+6300,udg_PlayerHomeLocY[i])
                endif
            endif
        endif
        set i=i+1
    endloop
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2,I2S(R2I(udg_MultiboardUnitsGoldNow[1]+udg_MultiboardUnitsGoldNow[2]+udg_MultiboardUnitsGoldNow[3]+0.25)))
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 3,I2S(R2I(udg_MultiboardUnitsGoldNow[4]+udg_MultiboardUnitsGoldNow[5]+udg_MultiboardUnitsGoldNow[6]+0.25)))
    set udg_WaveGoing = true
    call TimerWaveSpeedUpStart()
    call GroupClear(g)
    call DestroyGroup(g)
endfunction

function Trig_Waving_ActionSoloDuels takes nothing returns nothing
    local unit u
    local group g = CreateGroup()
    local integer i = 1
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Цена" )
    call SpellsWaveStart()
    if udg_Wave<11 then
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль "+I2S(udg_Wave)+"")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] or udg_BooleanPlay[i+3-6*(i/4)] then
    		set udg_MultiboardUnitsGoldStart[i]=0
                set udg_WaveGoingForPlayer[i]=true
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                set udg_int=0
                call ForGroup(g,function TowersNum)
                if udg_int>0 then
                    call ForGroup(g, function ReplaceWithUnitSD)
    	            set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+(i/4)+i,I2S(R2I(udg_MultiboardUnitsGoldNow[i]+0.25)))
                else
                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+(i/4)+i,"0")
                    if i<4 then
                        set u = CreateUnit(PlayerSlot((i-1)*2+6),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],180)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i]-5000,udg_PlayerHomeLocY[i])
                    else
                        set u = CreateUnit(PlayerSlot((i-1)*2+1),'n01K',udg_PlayerHomeLocX[i],udg_PlayerHomeLocY[i],0)
                        call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i]+5000,udg_PlayerHomeLocY[i])
                    endif
                    call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                    call SetUnitColor(u,udg_PlayerColor[i])
                endif
            endif
            set i=i+1
        endloop
    else
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Финальная дуэль")
        call TimerDialogSetRealTimeRemaining(udg_TimerWaveWindow,0)
        
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] then
    		set udg_MultiboardUnitsGoldStart[i]=0
                set udg_WaveGoingForPlayer[i]=true
            endif
            set i=i+1
        endloop
        call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_Duels )
        call SetCameraPosition(0,-7857)
        if udg_Lives[1]+udg_Lives[2]+udg_Lives[3]<udg_Lives[4]+udg_Lives[5]+udg_Lives[6] then
            set udg_DuelHP[1]=I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])/I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])
            set udg_DuelHP[2]=1
        else
            set udg_DuelHP[1]=1
            set udg_DuelHP[2]=I2R(udg_Lives[4]+udg_Lives[5]+udg_Lives[6])/I2R(udg_Lives[1]+udg_Lives[2]+udg_Lives[3])
        endif
        set i = 1
        loop
            exitwhen i>6
            if udg_BooleanPlay[i] then
                if i<4 then
                    set udg_RealX = 12730-9086*(i-1)
                else
                    set udg_RealX = 5442-9086*(i-4)
                endif
                set udg_RealY = -18360
                call GroupEnumUnitsOfPlayer(g, PlayerSlot(i-1),null)
                call ForGroup(g, function ReplaceWithUnitLastSD)
    	        set udg_MultiboardUnitsGoldNow[i]=udg_MultiboardUnitsGoldStart[i]
                call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+(i/4)+i,I2S(R2I(udg_MultiboardUnitsGoldNow[i]+0.25)))
            endif
            set i=i+1
        endloop
        
    endif
    set udg_WaveGoing = true
    call TimerWaveSpeedUpStart()
    call GroupClear(g)
    call DestroyGroup(g)
endfunction

//===========================================================================
function InitTrig_Waving takes nothing returns nothing
    set gg_trg_Waving = CreateTrigger(  )
    call TriggerRegisterTimerExpireEvent(gg_trg_Waving, udg_TimerWaveSpeedUp)
    call TriggerAddAction(gg_trg_Waving, function TimerWaveSpeedUpEnd )
    
    set gg_trg_Waving = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Waving,0.2,true)
    call TriggerAddCondition(gg_trg_Waving, Condition( function TimerWaveSpeedUpTicCond ) )
    call TriggerAddAction(gg_trg_Waving, function TimerWaveSpeedUpTic )
    
    set gg_trg_Waving = CreateTrigger(  )
    call TriggerRegisterTimerExpireEvent(gg_trg_Waving, udg_TimerWave)
endfunction

//===========================================================================
// Trigger: ThroneAttacked
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_ThroneAttacked_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetTriggerUnit())=='H008'
endfunction

function Trig_ThroneAttackedTeam_Actions takes unit u, integer pl, integer lvl returns nothing
    local group g = CreateGroup()
    local integer i = 1
    local boolean ball = true
    if udg_Lives[pl]>lvl then
        set udg_Lives[pl] = udg_Lives[pl] - lvl
        set udg_Lives[pl+1] = udg_Lives[pl]
        set udg_Lives[pl+2] = udg_Lives[pl]
        call SetUnitState(udg_ThrouneCaster[pl], UNIT_STATE_LIFE,udg_Lives[pl])
        set udg_int = 0
        call ForGroup(udg_PlayerCreepsGroup[1], function XplusOne)
        call ForGroup(udg_PlayerCreepsGroup[2], function XplusOne)
        call ForGroup(udg_PlayerCreepsGroup[3], function XplusOne)
        if udg_Wave<11 and (udg_WaveGoingForPlayer[1] or udg_WaveGoingForPlayer[2] or udg_WaveGoingForPlayer[3]) and udg_int==0 and not(udg_BE) and udg_WaveGoing then
            call WaveEndForPlayerTeam(1)
        else
            set udg_int = 0
            call ForGroup(udg_PlayerCreepsGroup[4], function XplusOne)
            call ForGroup(udg_PlayerCreepsGroup[5], function XplusOne)
            call ForGroup(udg_PlayerCreepsGroup[6], function XplusOne)
            if udg_int==0 and not(udg_BE) and udg_WaveGoing and (udg_WaveGoingForPlayer[4] or udg_WaveGoingForPlayer[5] or udg_WaveGoingForPlayer[6]) then
                call WaveEndForPlayerTeam(0)
            endif
        endif
    else
        set udg_BooleanPlay[pl] = false
        set udg_BooleanPlay[pl+1] = false
        set udg_BooleanPlay[pl+2] = false
        loop
            exitwhen i>6
            call DisplayTextToPlayer(PlayerSlot(i-1),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(i-1),0,0, GetPlayerName(PlayerSlot(pl))+" был повержен!")
            call DisplayTextToPlayer(PlayerSlot(i-1),0,0, GetPlayerName(PlayerSlot(pl+1))+" был повержен!")
            set i=i+1
        endloop
        set udg_Lives[pl] = 0
        set udg_Lives[pl+1] = 0
        set udg_Lives[pl+2] = 0
        call KillUnit(udg_ThrouneCaster[pl])
        call KillUnit(udg_ThrouneExtra[pl])
        set i = pl
        loop
            exitwhen i>pl+2
            call ForGroup(udg_PlayerCreepsGroup[i],function killme)
            call ForGroup(udg_PlayerWarriorsGroup[i],function killme)
            set udg_IntegerX=i
            call ExecuteFunc("removetowersecond")
            set i=i+1
        endloop
        call TimerStart(udg_TimerWin,0.1,false,null)
    	call MultiboardUpdate()
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function Trig_ThroneAttacked_Actions takes unit u, integer pl, integer lvl returns nothing
    local group g = CreateGroup()
    local integer i = 1
    local boolean ball = true
    if udg_Lives[pl]>lvl then
        set udg_Lives[pl] = udg_Lives[pl] - lvl
	    call WaveEndMsg(false,pl-1)
        call SetUnitState(udg_ThrouneCaster[pl], UNIT_STATE_LIFE,udg_Lives[pl])
        set udg_int=0
        call ForGroup(udg_PlayerCreepsGroup[pl], function XplusOne)
        if udg_Wave<11 and udg_WaveGoingForPlayer[pl] and udg_int==0 and not(udg_BE) and udg_WaveGoing then
            call WaveEndForPlayerSolo(PlayerSlot(pl-1))
        endif
    else
        set udg_WaveGoingForPlayer[pl]=false
        set udg_Lives[pl] = 0
        call MultiboardSetItemValueNew( udg_Multiboard, 2, pl+2+pl/4, "  |c00ff55550|r ")
        
        call DisplayTextToPlayer(PlayerSlot(0),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call DisplayTextToPlayer(PlayerSlot(1),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call DisplayTextToPlayer(PlayerSlot(2),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call DisplayTextToPlayer(PlayerSlot(3),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call DisplayTextToPlayer(PlayerSlot(4),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call DisplayTextToPlayer(PlayerSlot(5),0,0, GetPlayerName(PlayerSlot(pl-1))+" был повержен!")
        call SetPlayerState(PlayerSlot(pl-1),PLAYER_STATE_RESOURCE_GOLD,0)
        call SetPlayerState(PlayerSlot(pl-1),PLAYER_STATE_RESOURCE_LUMBER,0)
	    call SetPlayerAbilityAvailable(PlayerSlot(pl-1),'A0B4',false)
        set udg_BooleanPlay[pl] = false
        call KillUnit(udg_ThrouneCaster[pl])
        call KillUnit(udg_ThrouneExtra[pl])
        call KillUnit(udg_ThrouneUpgr[pl])
        call ForGroup(udg_PlayerCreepsGroup[pl],function RemoveWarriors)
        call ForGroup(udg_PlayerWarriorsGroup[pl],function RemoveWarriors)
        set udg_IntegerX=pl
        call ExecuteFunc("removetowersecond")
        set i = 1
        loop
            exitwhen i>3
            if udg_BooleanPlay[i] then
                set ball = false
            endif
            set i=i+1
        endloop
        if ball then
            call TimerStart(udg_TimerWin, 0.1, false, null)
    	    call MultiboardUpdate()
        else
            set ball = true
            loop
                exitwhen i>6
                if udg_BooleanPlay[i] then
                    set ball = false
                endif
                set i=i+1
            endloop
            if ball then
                call TimerStart(udg_TimerWin, 0.1, false, null)
                call MultiboardUpdate()
            endif
        endif
        call ForceClear(udg_PlayingPlayers)
        set i = 0
        set udg_PlayersNumber = 0
        loop
            exitwhen i>5
            if udg_Lives[i+1]>0 then
                call ForceAddPlayer(udg_PlayingPlayers, PlayerSlot(i))
                set udg_PlayersNumber = udg_PlayersNumber+1
                set udg_PlayerInPlaying[udg_PlayersNumber]=PlayerSlot(i)
            endif
            set i=i+1
        endloop
        set i=1
        if not(udg_WaveGoingForPlayer[1] or udg_WaveGoingForPlayer[2] or udg_WaveGoingForPlayer[3] or udg_WaveGoingForPlayer[4] or udg_WaveGoingForPlayer[5] or udg_WaveGoingForPlayer[6]) then
            call WaveEndForAll()
        endif
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function Trig_ThroneAttacked_check takes nothing returns nothing
    local unit u = GetAttacker()
    local integer i=1
    set udg_int = 0
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
            call GroupRemoveUnit(udg_PlayerCreepsGroup[i],u)
            call ForGroup(udg_PlayerCreepsGroup[i], function XplusOne)
        endif
        set i=i+1
    endloop
    if udg_ModNumber==0 then
        if udg_int==0 then
            call Trig_ThroneAttacked_Actions(u,GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1,1)
        else
            call Trig_ThroneAttacked_Actions(u,GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1,0)
        endif
    else
        if udg_int==0 then
            call Trig_ThroneAttackedTeam_Actions(u,GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1,1)
        else
            call Trig_ThroneAttackedTeam_Actions(u,GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1,0)
        endif
    endif
    call RemoveUnit(u)
endfunction

//===========================================================================
function InitTrig_ThroneAttacked takes nothing returns nothing
    set gg_trg_ThroneAttacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(0), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(1), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(2), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(3), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(4), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ThroneAttacked, Player(5), EVENT_PLAYER_UNIT_ATTACKED, null)
    call TriggerAddCondition( gg_trg_ThroneAttacked, Condition( function Trig_ThroneAttacked_Conditions ) )
    call TriggerAddAction( gg_trg_ThroneAttacked, function Trig_ThroneAttacked_check )
endfunction

//===========================================================================
// Trigger: UnitDies
//===========================================================================
//TESH.scrollpos=131
//TESH.alwaysfold=0
function CreateUndeadManaSpellAbilities takes integer forsedWarGroup, unit oldUnit, unit newUnit returns nothing
    local integer i = 1
    if GetUnitAbilityLevel(oldUnit,'A00H')>0 and GetUnitAbilityLevel(newUnit,'A00H')==0 then
        call UnitAddAbility(newUnit,'A00H')
    endif
    loop
        exitwhen i>6
        if IsUnitInGroup(oldUnit,udg_PlayerWarriorsGroup[i]) or (forsedWarGroup==i and forsedWarGroup>0) then// Проверяем, если СТАРЫЙ юнит в групппе ЗАЩИТНИКОВ
            // Добавляем воина в группу защитников и приказываем атаковать нужную точку
            call GroupAddUnit(udg_PlayerWarriorsGroup[i],newUnit)
            call SetUnitColor(newUnit,udg_PlayerColor[i])
            if udg_Wave==11 or udg_ModNumber==2 then
                if i<4 then
                    call IssuePointOrder(newUnit,"attack",-2300,-7885)
                else
                    call IssuePointOrder(newUnit,"attack",2300,-7885)
                endif
            else
                if udg_ModNumber!=3 then
                    if udg_ModNumber==0 then
                        if i<4 then
                            call IssuePointOrder(newUnit,"attack",8250,8500-7200*I2R(i-1))
                        else
                            call IssuePointOrder(newUnit,"attack",-8250,8500-7200*I2R(i-4))
                        endif
                    else
                        if i<4 then
                            call IssuePointOrder(newUnit,"attack",2550,8400)
                        else
                            call IssuePointOrder(newUnit,"attack",-2550,8400)
                        endif
                    endif
                endif
            endif
            set i=6
                                                
        else
            if IsUnitInGroup(oldUnit,udg_PlayerCreepsGroup[i]) or (forsedWarGroup==i+6 and forsedWarGroup>0) then// Если в группе крипов, добавляем туда же
                call GroupAddUnit(udg_PlayerCreepsGroup[i],newUnit)
                set i=6
            endif
        endif
        set i=i+1
    endloop
    
    set i = 1
    loop
        exitwhen i>udg_UndeadSpellManaCount
        if udg_UndeadSpellManaUnit[i]==oldUnit then
            //
            call UnitAddAbility(newUnit,'S00T')
            call SetUnitAbilityLevel(newUnit,'S00T',GetUnitAbilityLevel(oldUnit,'S00T'))
            call UnitAddAbility(newUnit,'A0IV')
            if GetUnitAbilityLevel(newUnit,'S00T')==1 then
                call SetUnitAbilityLevel(newUnit,'A0IV',GetUnitAbilityLevel(oldUnit,'A0IU'))
            else
                call SetUnitAbilityLevel(newUnit,'A0IV',IMinBJ(GetUnitAbilityLevel(oldUnit,'A0IU')+3,100))
            endif
            //call DisplayTextToPlayer(Player(0),0,0,"die="+R2S(udg_UndeadSpellManaHealth[i]))
            if GetUnitAbilityLevel(newUnit,'S00T')<=2 then
                call UnitAddMaxHP(newUnit,R2I(udg_UndeadSpellManaHealth[i]*0.1))
            elseif GetUnitAbilityLevel(newUnit,'S00T')<=3 then
                call UnitAddMaxHP(newUnit,100+R2I(udg_UndeadSpellManaHealth[i]*0.1))
            elseif GetUnitAbilityLevel(newUnit,'S00T')<=4 then
                call UnitAddMaxHP(newUnit,160+R2I(udg_UndeadSpellManaHealth[i]*0.2))
            elseif GetUnitAbilityLevel(newUnit,'S00T')<=5 then
                call UnitAddMaxHP(newUnit,160+R2I(udg_UndeadSpellManaHealth[i]*0.3))
            elseif GetUnitAbilityLevel(newUnit,'S00T')<=6 then
                call UnitAddMaxHP(newUnit,260+R2I(udg_UndeadSpellManaHealth[i]*0.3))
            else// GetUnitAbilityLevel(newUnit,'S00T')<=7 then
                call UnitAddMaxHP(newUnit,360+R2I(udg_UndeadSpellManaHealth[i]*0.3))
            endif
            //
            set i=udg_UndeadSpellManaCount
        endif
        set i=i+1
    endloop
endfunction

function CopySpecialUnitAbilitiesAddAddToWarCreepGroup takes integer forsedWarGroup, unit oldUnit, unit newUnit, boolean changeValue, boolean replicateItems, boolean giveRood returns nothing
    local integer i = 1
    if GetUnitAbilityLevel(oldUnit,'A00H')>0 and GetUnitAbilityLevel(newUnit,'A00H')==0 then
        call UnitAddAbility(newUnit,'A00H')
    endif
    loop
        exitwhen i>6
        if IsUnitInGroup(oldUnit,udg_PlayerWarriorsGroup[i]) or (forsedWarGroup==i and forsedWarGroup>0) then// Проверяем, если СТАРЫЙ юнит в групппе ЗАЩИТНИКОВ
            if changeValue then
                if GetUnitAbilityLevel(oldUnit,'A0AD')>0 then// Проверяем, есть ли у СТАРОГО юнита каннибазизм, меняем цену
                    if udg_ModNumber==0 or udg_ModNumber==3 then
                        call MultiboardSetPos03(i-1,5*(-R2I((udg_CreepCost[GetUnitAbilityLevel(newUnit,'A0AG')]*(1+0.05*GetUnitAbilityLevel(newUnit,'A0AD'))+2.5)/5)))
                    else
                        call MultiboardSetPos12(i-1,5*(-R2I((udg_CreepCost[GetUnitAbilityLevel(newUnit,'A0AG')]*(1+0.05*GetUnitAbilityLevel(newUnit,'A0AD'))+2.5)/5)))
                    endif
                else// Иначе просто меняем цену без учёта каннибализма
                    if udg_ModNumber==0 or udg_ModNumber==3 then
                        call MultiboardSetPos03(i-1,-udg_CreepCost[GetUnitAbilityLevel(newUnit,'A0AG')])
                    else
                        call MultiboardSetPos12(i-1,-udg_CreepCost[GetUnitAbilityLevel(newUnit,'A0AG')])
                    endif
                endif
            endif
            // Добавляем воина в группу защитников и приказываем атаковать нужную точку
            call GroupAddUnit(udg_PlayerWarriorsGroup[i],newUnit)
            call SetUnitColor(newUnit,udg_PlayerColor[i])
            if udg_Wave==11 or udg_ModNumber==2 then
                if i<4 then
                    call IssuePointOrder(newUnit,"attack",-2300,-7885)
                else
                    call IssuePointOrder(newUnit,"attack",2300,-7885)
                endif
            else
                if udg_ModNumber!=3 then
                    if udg_ModNumber==0 then
                        if i<4 then
                            call IssuePointOrder(newUnit,"attack",8250,8500-7200*I2R(i-1))
                        else
                            call IssuePointOrder(newUnit,"attack",-8250,8500-7200*I2R(i-4))
                        endif
                    else
                        if i<4 then
                            call IssuePointOrder(newUnit,"attack",2550,8400)
                        else
                            call IssuePointOrder(newUnit,"attack",-2550,8400)
                        endif
                    endif
                endif
            endif
            set i=6
                                                
        else
            if IsUnitInGroup(oldUnit,udg_PlayerCreepsGroup[i]) or (forsedWarGroup==i+6 and forsedWarGroup>0) then// Если в группе крипов, добавляем туда же
                call GroupAddUnit(udg_PlayerCreepsGroup[i],newUnit)
                set i=6
            endif
        endif
        set i=i+1
    endloop
    
    if GetUnitAbilityLevel(oldUnit,'A0IX')>0 then// Был воскрешён скиллом жреца войны
        call UnitAddAbility(newUnit,'A0IX')
    endif
    if GetUnitAbilityLevel(oldUnit,'A07K')>0 then// Был воскрешён пассивкой нежити
        call UnitAddAbility(newUnit,'A07K')
    endif
    if GetUnitAbilityLevel(oldUnit,'A04U')>0 then// Доп урон пустынники
        call SetUnitAbilityLevel(newUnit,'A04U',GetUnitAbilityLevel(oldUnit,'A04U'))
    endif
    set i=GetUnitAbilityLevel(oldUnit,'A0AD')// Каннибализм
    if i>0 then
        call UnitAddAbility(newUnit,'A0AD')
        call SetUnitAbilityLevel(newUnit,'A0AD',i)
        call UnitAddAbility(newUnit,'A015')
        call SetUnitAbilityLevel(newUnit,'A015',i)
        call UnitAddAbility(newUnit,'A008')
        call SetUnitAbilityLevel(newUnit,'A008',i)
        call UnitAddAbility(newUnit,'A00W')
        call SetUnitAbilityLevel(newUnit,'A00W',i)
        call UnitAddAbility(newUnit,'A03O')
        call SetUnitAbilityLevel(newUnit,'A03O',i)
        call SetUnitAbilityLevel(newUnit,'A09J',i+1)
    endif
    if GetUnitAbilityLevel(oldUnit,'A0AP')>0 then// Инвиз эльфа 
        call UnitAddAbility(newUnit,'A0AP')
    endif
    if GetUnitAbilityLevel(oldUnit,'A0B2')>0 then// Пламенный приём гидра
        call UnitAddAbility(newUnit,'A0B2')
    endif
    set i=GetUnitAbilityLevel(oldUnit,'A01H')// Стаки эльфа воин
    if i>0 then
        call UnitAddAbility(newUnit,'A01H')
        call SetUnitAbilityLevel(newUnit,'A01H',i)
        call UnitAddAbility(newUnit,'A04S')
        call SetUnitAbilityLevel(newUnit,'A04S',i)
    elseif GetUnitAbilityLevel(oldUnit,'A07G')>0 then// Стаки эльфа воин ожидание
        call UnitAddAbility(newUnit,'A07G')
        call SetUnitAbilityLevel(newUnit,'A07G',GetUnitAbilityLevel(oldUnit,'A07G'))
    elseif GetUnitAbilityLevel(oldUnit,'A06E')>0 then// Стаки эльфа древо
        call UnitAddAbility(newUnit,'A06E')
        call SetUnitAbilityLevel(newUnit,'A06E',GetUnitAbilityLevel(oldUnit,'A06E'))
        set i = GetUnitAbilityLevel(oldUnit,'A06C')+GetUnitAbilityLevel(oldUnit,'A06K')+GetUnitAbilityLevel(oldUnit,'A06L')+GetUnitAbilityLevel(oldUnit,'A06G')+GetUnitAbilityLevel(oldUnit,'A06M')+GetUnitAbilityLevel(oldUnit,'A06A')
        if i>0 then
            if GetUnitTypeId(newUnit)=='e00A' then//     ЭНТ
                call UnitAddAbility(newUnit,'A06A')
                call SetUnitAbilityLevel(newUnit,'A06A',i)
                call UnitAddAbility(newUnit,'A06B')
                call SetUnitAbilityLevel(newUnit,'A06B',i)
                call UnitAddAbility(newUnit,'A01Q')
                call SetUnitAbilityLevel(newUnit,'A01Q',i)
            elseif GetUnitTypeId(newUnit)=='e00B' then// ГОРНОЕ
                call UnitAddAbility(newUnit,'A06L')
                call SetUnitAbilityLevel(newUnit,'A06L',i)
                call UnitAddAbility(newUnit,'A06H')
                call SetUnitAbilityLevel(newUnit,'A06H',i)
                call UnitAddAbility(newUnit,'A01S')
                call SetUnitAbilityLevel(newUnit,'A01S',i)
            elseif GetUnitTypeId(newUnit)=='e00C' then// ВЕТРОВ
                call UnitAddAbility(newUnit,'A06K')
                call SetUnitAbilityLevel(newUnit,'A06K',i)
                call UnitAddAbility(newUnit,'A06I')
                call SetUnitAbilityLevel(newUnit,'A06I',i)
                call UnitAddAbility(newUnit,'A01T')
                call SetUnitAbilityLevel(newUnit,'A01T',i)
            elseif GetUnitTypeId(newUnit)=='e00D' then// ДРЕВЕНЬ
                call UnitAddAbility(newUnit,'A06G')
                call SetUnitAbilityLevel(newUnit,'A06G',i)
                call UnitAddAbility(newUnit,'A06F')
                call SetUnitAbilityLevel(newUnit,'A06F',i)
            elseif GetUnitTypeId(newUnit)=='e00E' then// ДИКИЙ
                call UnitAddAbility(newUnit,'A06M')
                call SetUnitAbilityLevel(newUnit,'A06M',i)
                call UnitAddAbility(newUnit,'A06J')
                call SetUnitAbilityLevel(newUnit,'A06J',i)
                call UnitAddAbility(newUnit,'A09P')
                call SetUnitAbilityLevel(newUnit,'A09P',i)
            else// GetUnitTypeId(newUnit)=='e00F' then   ДРЕВНИЙ
                call UnitAddAbility(newUnit,'A06C')
                call SetUnitAbilityLevel(newUnit,'A06C',i)
                call UnitAddAbility(newUnit,'A06D')
                call SetUnitAbilityLevel(newUnit,'A06D',i)
            endif
        endif
    endif
    set i=GetUnitAbilityLevel(oldUnit,'A00X')// Стальное братство
    if i>0 then
        call UnitAddAbility(newUnit,'A00X')
        call SetUnitAbilityLevel(newUnit,'A00X',i)
        if i>0 then
            call UnitAddAbility(newUnit,'A0DE')
        endif
    endif
    set i=GetUnitAbilityLevel(oldUnit,'A0D1')// Сила молодости
    if i>0 then
        call UnitAddAbility(newUnit,'A0D1')
        call SetUnitAbilityLevel(newUnit,'A0D1',i)
        call UnitAddAbility(newUnit,'A0D2')
        call SetUnitAbilityLevel(newUnit,'A0D2',i)
        if i>4 then
            call UnitAddAbility(newUnit,'A0D4')
            call SetUnitAbilityLevel(newUnit,'A0D4',i-4)
        else
            call UnitAddAbility(newUnit,'A0D3')
            call SetUnitAbilityLevel(newUnit,'A0D3',i)
        endif
    endif
    set i=GetUnitAbilityLevel(oldUnit,'A0GI')// Удачная смерть бафф
    if i>0 then
        call UnitAddAbility(newUnit,'A0GI')
        call UnitAddAbility(newUnit,'S00Q')
    endif
    if GetUnitAbilityLevel(oldUnit,'A07K')>0 then// undead respawn block
        call UnitAddAbility(newUnit,'A07K')
    endif
    if GetUnitAbilityLevel(oldUnit,'A0DU')>0 then// Предметы нежить
        call UnitAddAbility(newUnit,'A0DU')
        if replicateItems and UnitItemInSlot(oldUnit,0)!=null and ((GetItemTypeId(UnitItemInSlot(oldUnit,0))!='I00U' and GetItemTypeId(UnitItemInSlot(oldUnit,0))!='I017' and GetItemTypeId(UnitItemInSlot(oldUnit,0))!='I018') or giveRood) then
            call UnitAddItem(newUnit,CreateItem(GetItemTypeId(UnitItemInSlot(oldUnit,0)),0,0))
        endif
    endif
    if GetUnitAbilityLevel(oldUnit,'A054')>0 then// Ярость орда
        call UnitAddAbility(newUnit,'A054')
    endif
    if GetUnitAbilityLevel(oldUnit,'A07O')>0 then// Псевдорандом
        call SetUnitAbilityLevel(newUnit,'A07O',GetUnitAbilityLevel(oldUnit,'A07O'))
    endif
    if GetUnitAbilityLevel(oldUnit,'A07O')>0 then// Псевдорандом
        call UnitAddAbility(newUnit,'A07O')
        call SetUnitAbilityLevel(newUnit,'A07O',GetUnitAbilityLevel(oldUnit,'A07O'))
    endif
    if GetUnitAbilityLevel(oldUnit,'A022')>0 then// Номер удара таурена
        call SetUnitAbilityLevel(newUnit,'A022',GetUnitAbilityLevel(oldUnit,'A07O'))
    endif
    if GetUnitTypeId(newUnit)==udg_CreepWarrior[111] then// Герой наг
        set udg_HeroNagaCount = udg_HeroNagaCount+1
        set udg_HeroNagaHero[udg_HeroNagaCount] = newUnit
        set udg_HeroNagaExtraHp[udg_HeroNagaCount] = 0
        set udg_HeroNagaBounded[udg_HeroNagaCount] = null
        if GetHeroLevel(oldUnit)>1 then
            call SetHeroLevel(newUnit,GetHeroLevel(oldUnit),false)
        endif
        if GetUnitAbilityLevel(oldUnit,'A0HT')>0 then// 1
            call UnitAddAbility(newUnit,'A0HT')
            call SetUnitAbilityLevel(newUnit,'A0HT',GetUnitAbilityLevel(oldUnit,'A0HT'))
        endif
        if GetUnitAbilityLevel(oldUnit,'A0F0')>0 then// 2
            call UnitAddAbility(newUnit,'A0F0')
            call SetUnitAbilityLevel(newUnit,'A0F0',GetUnitAbilityLevel(oldUnit,'A0F0'))
        endif
        if GetUnitAbilityLevel(oldUnit,'A0HV')>0 then// 3
            call UnitAddAbility(newUnit,'A0HV')
            call SetUnitAbilityLevel(newUnit,'A0HV',GetUnitAbilityLevel(oldUnit,'A0HV'))
            call IssueImmediateOrderById(newUnit,852540)
        endif
        if GetUnitAbilityLevel(oldUnit,'A0IE')>0 then// 4
            call UnitAddAbility(newUnit,'A0IE')
            call SetUnitAbilityLevel(newUnit,'A0IE',GetUnitAbilityLevel(oldUnit,'A0IE'))
        endif
        
        if GetUnitAbilityLevel(oldUnit,'A0IF')>0 then// 5
            call UnitAddAbility(newUnit,'A0IF')
            call SetUnitAbilityLevel(newUnit,'A0IF',GetUnitAbilityLevel(oldUnit,'A0IF'))
        endif
        if GetUnitAbilityLevel(oldUnit,'A0IG')>0 then// 6
            call UnitAddAbility(newUnit,'A0IG')
            call SetUnitAbilityLevel(newUnit,'A0IG',GetUnitAbilityLevel(oldUnit,'A0IG'))
        endif
        if GetUnitAbilityLevel(oldUnit,'A0IH')>0 then// 7
            call UnitAddAbility(newUnit,'A0IH')
            call SetUnitAbilityLevel(newUnit,'A0IH',GetUnitAbilityLevel(oldUnit,'A0IH'))
        endif
        if GetUnitAbilityLevel(oldUnit,'A0IL')>0 then// 8
            call UnitAddAbility(newUnit,'A0IL')
            call SetUnitAbilityLevel(newUnit,'A0IL',GetUnitAbilityLevel(oldUnit,'A0IL'))
            call UnitAddAbility(newUnit,'A0IM')
            call SetUnitAbilityLevel(newUnit,'A0IM',GetUnitAbilityLevel(oldUnit,'A0IM'))
        endif
    endif
    if GetUnitTypeId(oldUnit)==GetUnitTypeId(newUnit) and GetUnitTypeId(oldUnit)=='n01R' then// Паразит от скилла нежити воскрешён
        call UnitAddMaxHP(newUnit,R2I(GetUnitState(oldUnit,UNIT_STATE_MAX_LIFE)-GetUnitState(newUnit,UNIT_STATE_MAX_LIFE)))
        call UnitAddAbility(newUnit,'S00T')
        call SetUnitAbilityLevel(newUnit,'S00T',GetUnitAbilityLevel(oldUnit,'S00T'))
        call UnitAddAbility(newUnit,'A0IV')
        call SetUnitAbilityLevel(newUnit,'A0IV',GetUnitAbilityLevel(oldUnit,'A0IV'))
        set i = 1
        loop
            exitwhen i>udg_UndeadSpellManaCount
            if udg_UndeadSpellManaUnit[i]==oldUnit then
                set udg_UndeadSpellManaUnit[udg_UndeadSpellManaCount]=newUnit
                set i=udg_UndeadSpellManaCount
            endif
            set i=i+1
        endloop
    endif
endfunction

function Trig_KingOfTheDeathSecondSpell_loop takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitTypeId(u)=='u00C' and GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(u,'A0FQ')<51 then
        call SetUnitAbilityLevel(u,'A0FQ',GetUnitAbilityLevel(u,'A0FQ')+1)
    endif
    set u = null
endfunction

function Trig_UnitDies_TCDT_LivesNum takes nothing returns nothing
    set udg_int = udg_int + GetUnitLevel(GetEnumUnit())
endfunction

function Trig_UnitDies_TCDT takes nothing returns nothing
    local group g = CreateGroup()
    local integer i=0
    loop
        exitwhen GetExpiredTimer()==udg_TCDT[i]
        set i=i+1
    endloop
    set udg_int = 0
    if not(udg_BE) then
        if udg_ModNumber==0 then
            call ForGroup(udg_PlayerCreepsGroup[i], function XplusOne)
            if udg_int>0 then
                set udg_int = 0
                call ForGroup(udg_PlayerWarriorsGroup[i], function XplusOne)
                if udg_int==0 then
                    call ForGroup(udg_PlayerCreepsGroup[i],function RemoveWarriors)
                    call Trig_ThroneAttacked_Actions(null,i,1)
                endif
            endif
        else
            set i=(i/4)*3+1
            call ForGroup(udg_PlayerCreepsGroup[i], function XplusOne)
            call ForGroup(udg_PlayerCreepsGroup[i+1], function XplusOne)
            call ForGroup(udg_PlayerCreepsGroup[i+2], function XplusOne)
            if udg_int>0 then
                set udg_int = 0
                call ForGroup(udg_PlayerWarriorsGroup[i], function XplusOne)
                call ForGroup(udg_PlayerWarriorsGroup[i+1], function XplusOne)
                call ForGroup(udg_PlayerWarriorsGroup[i+2], function XplusOne)
                if udg_int==0 then
                    call ForGroup(udg_PlayerCreepsGroup[i],function RemoveWarriors)
                    call ForGroup(udg_PlayerCreepsGroup[i+1],function RemoveWarriors)
                    call ForGroup(udg_PlayerCreepsGroup[i+2],function RemoveWarriors)
                    call Trig_ThroneAttackedTeam_Actions(null,i,0)
                endif
            endif
        endif
    else
        call TimerStart(udg_TCDT[i],2,false,function Trig_UnitDies_TCDT)
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

function Trig_UnitDies_Actions takes nothing returns nothing
    local group g = CreateGroup()
    local group gou
    local unit u = GetDyingUnit()
    local unit extrau
    local integer id = GetUnitTypeId(u)
    local integer i = 1
    local integer pn
    local integer tn
    local boolean warrior = false
    local integer warriorgridforres = 0
    local boolean creep = false
    local boolean forundead = true
    local boolean undeadres = false

    if GetUnitAbilityLevel(u,'A0BE')==1 then
        call UnitAddAbility(u,'A0BE')
        call UnitRemoveAbility(u,'A0BE')
    endif
    call UnitRemoveAbility(u,'A09X')
    call UnitRemoveAbility(u,'A0A6')
    call UnitRemoveAbility(u,'A0DE')
    call GroupRemoveUnit(udg_GLC,u)
    call GroupRemoveUnit(udg_MargolInviGroup,u)
    
    call UnitRemoveAbility(u,'A06N')
    call UnitRemoveAbility(u,'A06O')
    call UnitRemoveAbility(u,'A06P')
    call UnitRemoveAbility(u,'A06Q')
    call UnitRemoveAbility(u,'A06R')
    call UnitRemoveAbility(u,'A06S')
    
    set udg_int = 0
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            //call RemoveItem(UnitItemInSlot(u,0))
            //Следущее действие - спелл Короля Мёртвых
            if GetUnitAbilityLevel(u,'A001')==0 then
                call ForGroup(udg_PlayerWarriorsGroup[i],function Trig_KingOfTheDeathSecondSpell_loop)
            endif
            set gou=udg_PlayerWarriorsGroup[i]
            call GroupRemoveUnit(udg_PlayerWarriorsGroup[i],u)
            set warrior = true
            set tn = i
            set warriorgridforres = tn
            if not(udg_BlockUdPass) and forundead and IsPassChosenByPlayer(tn,7) and (GetUnitAbilityLevel(u,'A0GI')>0 or GetRandomReal(0,100)<=udg_UndeadPassive[tn]*8.475) and GetUnitAbilityLevel(u,'A07K')==0 and GetUnitState(u,UNIT_STATE_MAX_LIFE)<600 then
                set undeadres = true
            endif
            //Следущее действие - грабёж марголов
            if (GetUnitAbilityLevel(GetKillingUnit(),'A088')==1 or GetUnitAbilityLevel(u,'S00M')==1) and IsUnitEnemy(u,GetOwningPlayer(GetKillingUnit())) and udg_ModNumber>=2 then
                set tn=GetPlayerSlotId(GetOwningPlayer(GetKillingUnit()))
                if tn/2*2==tn then
                    set tn=(tn-6)/2
                else
                    set tn=tn/2
                endif
                call SetPlayerState(PlayerSlot(tn),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(tn),PLAYER_STATE_RESOURCE_GOLD)+5)
                set tn = i
            endif
        else
            if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
                //call RemoveItem(UnitItemInSlot(u,0))
                //Следущее действие - спелл Короля Мёртвых
                if GetUnitAbilityLevel(u,'A001')==0 then
                    call ForGroup(udg_PlayerCreepsGroup[i],function Trig_KingOfTheDeathSecondSpell_loop)
                endif
                set gou=udg_PlayerCreepsGroup[i]
                call GroupRemoveUnit(udg_PlayerCreepsGroup[i],u)
                set creep = true
                set pn = i-1
                set warriorgridforres = i+6
                if not(udg_BlockUdPass) and forundead and IsPassChosenByPlayer(4-6*(pn/3)+pn,7) and (GetUnitAbilityLevel(u,'A0GI')>0 or GetRandomReal(0,100)<=25) and GetUnitAbilityLevel(u,'A07K')==0 and GetUnitState(u,UNIT_STATE_MAX_LIFE)<600 then
                    set undeadres = true
                endif
                //Следущее действие - грабёж марголов
                if (GetUnitAbilityLevel(GetKillingUnit(),'A088')==1 or GetUnitAbilityLevel(u,'S00M')==1) and IsUnitEnemy(u,GetOwningPlayer(GetKillingUnit())) then
                    set pn=GetPlayerSlotId(GetOwningPlayer(GetKillingUnit()))
                    if pn/2*2==pn then
                        set pn=(pn-6)/2
                    else
                        set pn=pn/2
                    endif
                    call SetPlayerState(PlayerSlot(pn),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(pn),PLAYER_STATE_RESOURCE_GOLD)+5)
                    set pn=i-1
                endif
            endif
        endif
        set i=i+1
    endloop
    if GetUnitAbilityLevel(u,'S00T')>0 and GetUnitAbilityLevel(u,'A0G9')==0 and GetUnitTypeId(u)!='n01R' then//UndeadManaSpell
        set extrau = CreateUnit(GetOwningPlayer(u),'n01R',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
        call UnitAddAbility(extrau,'S00T')
        call SetUnitAbilityLevel(extrau,'S00T',GetUnitAbilityLevel(u,'S00T'))
        call GroupAddUnit(gou,extrau)
        call CreateUndeadManaSpellAbilities(warriorgridforres,u,extrau)
    endif
    if GetUnitTypeId(u)=='o009' and not(undeadres) and GetUnitAbilityLevel(u,'A0G9')==0 then
        set u = CreateUnit(GetOwningPlayer(u),'n00U',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
	    call UnitAddAbility(u,'A00H')
	    call UnitAddAbility(u,'A0AG')
	    call SetUnitAbilityLevel(u,'A0AG',27)
        call GroupAddUnit(gou,u)
        call UnitRemoveAbility(u,'A0GI')//Красный круг удачная смерть
        call UnitRemoveAbility(u,'S00Q')//Красный круг удачная смерть
        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(warriorgridforres,GetDyingUnit(),u,false,true,true)
        call UnitRemoveAbility(GetDyingUnit(),'A054')
    else
        if GetUnitTypeId(u)=='o00F' and not(undeadres) and GetUnitAbilityLevel(u,'A0G9')==0 then
            set u = CreateUnit(GetOwningPlayer(u),'n00T',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
	        call SetUnitVertexColor(u,255,255,255,122)
            call UnitAddAbility(u,'A00H')
	        call UnitAddAbility(u,'A0AG')
	        call SetUnitAbilityLevel(u,'A0AG',21)
    	    call UnitApplyTimedLife(u,'BTLF',6)
            call GroupAddUnit(gou,u)
            call UnitRemoveAbility(u,'A0GI')//Красный круг удачная смерть
            call UnitRemoveAbility(u,'S00Q')//Красный круг удачная смерть
            call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(warriorgridforres,GetDyingUnit(),u,false,true,true)
            call UnitRemoveAbility(GetDyingUnit(),'A054')
        else
    	    call UnitRemoveAbility(u,'A054')
            if warrior then
                if undeadres then
                    if GetUnitAbilityLevel(u,'A0GI')>0 then
                        call UnitRemoveAbility(u,'A0GI')//Красный круг удачная смерть
                        call UnitRemoveAbility(u,'S00Q')//Красный круг удачная смерть
                        //call DestroyEffect(AddSpecialEffect("RaiseSkeletonRed.mdx",GetUnitX(u),GetUnitY(u))) 
                        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl",GetUnitX(u),GetUnitY(u))) 
                    else
                        set udg_UndeadPassive[tn]=1
                        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl",GetUnitX(u),GetUnitY(u))) 
                    endif
		            set i = GetUnitAbilityLevel(u,'A0AG')
                    set u = CreateUnit(GetOwningPlayer(u),GetUnitTypeId(u),GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                    if i>0 then
                        call UnitAddAbility(u,'A00H')
	    	            call UnitAddAbility(u,'A0AG')
	    	            call SetUnitAbilityLevel(u,'A0AG',i)
                    else
                        call UnitApplyTimedLife(u,'BTLF',7)
                    endif
                    call GroupAddUnit(gou,u)
                    call SetUnitColor(u,udg_PlayerColor[tn])
                    call SetUnitState(u,UNIT_STATE_LIFE,0.5*GetUnitState(u,UNIT_STATE_LIFE))
                    call SetUnitState(u,UNIT_STATE_MANA,0)
                    call UnitAddAbility(u,'A07K')
                    call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(warriorgridforres,GetDyingUnit(),u,false,true,true)
                    call RemoveUnit(GetDyingUnit())
                else
                    if IsPassChosenByPlayer(tn,7) and GetUnitAbilityLevel(u,'A07K')==0 then
                        set udg_UndeadPassive[tn]=udg_UndeadPassive[tn]+1
                    endif
                    if udg_Wave==11 and udg_WaveGoing then
                        set udg_int = 0
                        call ForGroup(udg_PlayerWarriorsGroup[1], function XplusOne)
                        call ForGroup(udg_PlayerWarriorsGroup[2], function XplusOne)
                        call ForGroup(udg_PlayerWarriorsGroup[3], function XplusOne)
                        if udg_int==0 then
                            set udg_WaveGoing = false
                            call TimerStart(udg_TimerWin, 0.001, false, null)
                            set udg_BooleanPlay[1] = false
                            set udg_BooleanPlay[2] = false
                            set udg_BooleanPlay[3] = false
                            set udg_BooleanPlay[4] = true
                            set udg_BooleanPlay[5] = true
                            set udg_BooleanPlay[6] = true
                            //call MultiboardUpdate()
                        else
                            set udg_int = 0
                            call ForGroup(udg_PlayerWarriorsGroup[4], function XplusOne)
                            call ForGroup(udg_PlayerWarriorsGroup[5], function XplusOne)
                            call ForGroup(udg_PlayerWarriorsGroup[6], function XplusOne)
                            if udg_int==0 then
                            	set udg_WaveGoing = false
                                call TimerStart(udg_TimerWin, 0.001, false, null)
                                set udg_BooleanPlay[1] = true
                                set udg_BooleanPlay[2] = true
                                set udg_BooleanPlay[3] = true
                                set udg_BooleanPlay[4] = false
                                set udg_BooleanPlay[5] = false
                                set udg_BooleanPlay[6] = false
                                //call MultiboardUpdate()
                            else
                                if udg_ModNumber==0 or udg_ModNumber==3 then
                                    if GetUnitAbilityLevel(u,'A0AG')>0 then
                                        call MultiboardSetPos03(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
                                    endif
                                else
                                    if GetUnitAbilityLevel(u,'A0AG')>0 then
                                        call MultiboardSetPos12(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
                                    endif
                                endif
                            endif
                        endif
                    else
                        if udg_ModNumber==2 and udg_WaveGoing then
                            set i = 1
                            set udg_int = 0
                            loop
                                exitwhen i>6
                                call ForGroup(udg_PlayerWarriorsGroup[i], function XplusOne)
                                set i=i+1
                            endloop
                            if udg_int==0 then
                                if not(udg_WaveGoingForPlayer[1] or udg_WaveGoingForPlayer[2] or udg_WaveGoingForPlayer[3] or udg_WaveGoingForPlayer[4] or udg_WaveGoingForPlayer[5] or udg_WaveGoingForPlayer[6]) then
                                    set udg_Lives[1] = udg_Lives[1] - 1
                                    set udg_Lives[2] = udg_Lives[1]
                                    set udg_Lives[3] = udg_Lives[1]
                                    set udg_Lives[4] = udg_Lives[4] - 1
                                    set udg_Lives[5] = udg_Lives[4]
                                    set udg_Lives[6] = udg_Lives[4]
                                    call WaveEndForPlayerTeamDuels()
                                endif
                            else
                                set i = 1
                                set udg_int = 0
                                loop
                                    exitwhen i>3
                                    call ForGroup(udg_PlayerWarriorsGroup[i], function XplusOne)
                                    set i=i+1
                                endloop
                                if udg_int==0 then
                                    set i = 1
                                    set udg_Lives[1] = udg_Lives[1] - 1
                                    set udg_Lives[2] = udg_Lives[1]
                                    set udg_Lives[3] = udg_Lives[1]
				                    call WaveEndMsg(true,3)
                                    //call HeroPassGetLimitOfExp(8)
                                    call WaveEndForPlayerTeamDuels()
                                    if udg_Lives[1] == 0 then
                                        call TimerStart(udg_TimerWin, 0.001, false, null)
                                        set udg_BooleanPlay[1] = false
                                        set udg_BooleanPlay[2] = false
                                        set udg_BooleanPlay[3] = false
                                        set udg_BooleanPlay[4] = true
                                        set udg_BooleanPlay[5] = true
                                        set udg_BooleanPlay[6] = true
                                    endif
                                else
                                    set i=4
                                    set udg_int = 0
                                    loop
                                        exitwhen i>6
                                        call ForGroup(udg_PlayerWarriorsGroup[i], function XplusOne)
                                        set i=i+1
                                    endloop
                                    if udg_int==0 then
                                        set udg_Lives[4] = udg_Lives[4] - 1
                                        set udg_Lives[5] = udg_Lives[4]
                                        set udg_Lives[6] = udg_Lives[4]
				    	                call WaveEndMsg(true,0)
                                        //call HeroPassGetLimitOfExp(7)
                                        call WaveEndForPlayerTeamDuels()
                                        if udg_Lives[4] == 0 then
                                            call TimerStart(udg_TimerWin, 0.001, false, null)
                                            set udg_BooleanPlay[1] = true
                                            set udg_BooleanPlay[2] = true
                                            set udg_BooleanPlay[3] = true
                                            set udg_BooleanPlay[4] = false
                                            set udg_BooleanPlay[5] = false
                                            set udg_BooleanPlay[6] = false
                                        endif
                                    else
				    	                if GetUnitAbilityLevel(u,'A0AG')>0 then
				                            call MultiboardSetPos12(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
				    	                endif
				                    endif
                                endif
                            endif
                        else
                            if udg_WaveGoing and udg_ModNumber==3 and udg_WaveGoingForPlayer[tn] then
                                set udg_int = 0
                                call ForGroup(udg_PlayerWarriorsGroup[tn], function XplusOne)
                                if udg_int==0 then
                                    call WaveEndForPlayerSD(tn)
                                else
				                    if GetUnitAbilityLevel(u,'A0AG')>0 then
				                    	call MultiboardSetPos03(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
				                    endif
				                endif
                            else
                                set udg_int = 0
                                if udg_ModNumber==0 then
				                    if GetUnitAbilityLevel(u,'A0AG')>0 then
				                        call MultiboardSetPos03(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
				                    endif
                                    call ForGroup(udg_PlayerWarriorsGroup[tn], function XplusOne)
                                    if udg_int==0 then
                                        call TimerStart(udg_TCDT[tn],3.5,false,function Trig_UnitDies_TCDT)
				                    endif
                                else
				                    if GetUnitAbilityLevel(u,'A0AG')>0 then
				                        call MultiboardSetPos12(tn-1,5*R2I((udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]*(1+0.05*GetUnitAbilityLevel(u,'A015'))+2.5)/5))
				                    endif
                                    if tn<4 then
                                        call ForGroup(udg_PlayerWarriorsGroup[1], function XplusOne)
                                        call ForGroup(udg_PlayerWarriorsGroup[2], function XplusOne)
                                        call ForGroup(udg_PlayerWarriorsGroup[3], function XplusOne)
                                    else
                                        call ForGroup(udg_PlayerWarriorsGroup[4], function XplusOne)
                                        call ForGroup(udg_PlayerWarriorsGroup[5], function XplusOne)
                                        call ForGroup(udg_PlayerWarriorsGroup[6], function XplusOne)
                                    endif
                                    if udg_int==0 then
                                        call TimerStart(udg_TCDT[tn],3.5,false,function Trig_UnitDies_TCDT)
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
                
            else
                if creep then
                    if undeadres then
		    	        set i = GetUnitAbilityLevel(u,'A0AG')
                        call UnitRemoveAbility(u,'A0GI')//Красный круг удачная смерть
                        call UnitRemoveAbility(u,'S00Q')//Красный круг удачная смерть
                        set u = CreateUnit(GetOwningPlayer(u),GetUnitTypeId(u),GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                        if i>0 then
                            call UnitAddAbility(u,'A00H')
	    	                call UnitAddAbility(u,'A0AG')
	    	                call SetUnitAbilityLevel(u,'A0AG',i)
                        endif
                        call GroupAddUnit(gou,u)
                        call SetUnitColor(u,udg_PlayerColor[pn+4-6*(pn/3)])
                        call SetUnitState(u,UNIT_STATE_LIFE,0.5*GetUnitState(u,UNIT_STATE_LIFE))
                        call SetUnitState(u,UNIT_STATE_MANA,0)
                        call UnitAddAbility(u,'A07K')
                        call IssuePointOrder(u,"attack",0,0)
                        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(warriorgridforres,GetDyingUnit(),u,false,true,true)
                        call RemoveUnit(GetDyingUnit())
                        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\AnimateDead\\AnimateDeadTarget.mdl",GetUnitX(u),GetUnitY(u))) 
                    else
                        if not(udg_BE) and udg_WaveGoing then
                            if udg_ModNumber==0 then
                                set udg_int=0
                                call ForGroup(udg_PlayerCreepsGroup[pn+1], function XplusOne)
                                if udg_Wave<11 and udg_WaveGoingForPlayer[pn+1] and udg_int==0 then
                                    //call HeroPassGetLimitOfExp(pn+1)
                                    //call DisplayTextToPlayer(PlayerSlot(0),0,0,"pn+1="+I2S(pn+1))
				                    call WaveEndMsg(true,pn)
                                    call WaveEndForPlayerSolo(PlayerSlot(pn))
                                endif
                            else
                                if udg_ModNumber==1 then
                                    set udg_int=0
                                    call ForGroup(udg_PlayerCreepsGroup[1], function XplusOne)
                                    call ForGroup(udg_PlayerCreepsGroup[2], function XplusOne)
                                    call ForGroup(udg_PlayerCreepsGroup[3], function XplusOne)
                                    if udg_Wave<11 and udg_WaveGoing and udg_int==0 then
                                        //call HeroPassGetLimitOfExp(7)
                                        call WaveEndForPlayerTeam(0)
                                    else
                                        set udg_int=0
                                        call ForGroup(udg_PlayerCreepsGroup[4], function XplusOne)
                                        call ForGroup(udg_PlayerCreepsGroup[5], function XplusOne)
                                        call ForGroup(udg_PlayerCreepsGroup[6], function XplusOne)
                                        if udg_Wave<11 and udg_WaveGoing and udg_int==0 then
                                            //call HeroPassGetLimitOfExp(8)
                                            call WaveEndForPlayerTeam(1)
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endif
        endif
    endif
    set u = null
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

//===========================================================================
function InitTrig_UnitDies takes nothing returns nothing
    set gg_trg_UnitDies = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(13), EVENT_PLAYER_UNIT_DEATH, null)
    //call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(14), EVENT_PLAYER_UNIT_DEATH, null)
    //call TriggerRegisterPlayerUnitEvent(gg_trg_UnitDies, Player(15), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddAction( gg_trg_UnitDies, function Trig_UnitDies_Actions )
endfunction

//===========================================================================
// Trigger: WarriorReturnToFightSingle
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_WarriorReturnToFight1_Actions takes nothing returns nothing
    local integer i = 1
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitY(u, GetUnitY(u)-3777)
	    call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

function Trig_WarriorReturnToFight2_Actions takes nothing returns nothing
    local integer i = 1
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
            call SetUnitY(u, GetUnitY(u)+3400)
	        call UnitRemoveAbility(u,'A07Z')
	        call UnitRemoveAbility(u,'Bvul')
    	    set u = null
	    return
        endif
        set i=i+1
    endloop
    set u = null
endfunction

//===========================================================================
function InitTrig_WarriorReturnToFightSingle takes nothing returns nothing
    set gg_trg_WarriorReturnToFightSingle = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player1 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player2 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player3 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player4 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player5 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Player6 )
    call TriggerAddAction( gg_trg_WarriorReturnToFightSingle, function Trig_WarriorReturnToFight1_Actions )
    set gg_trg_WarriorReturnToFightSingle = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight1peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight2peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight3peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight4peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight5peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSingle, gg_rct_Fight6peons )
    call TriggerAddAction( gg_trg_WarriorReturnToFightSingle, function Trig_WarriorReturnToFight2_Actions )
endfunction

//===========================================================================
// Trigger: WarriorReturnToFightTeam
//===========================================================================
//TESH.scrollpos=18
//TESH.alwaysfold=0
function Trig_WarriorReturnToFightTeam1_Actions takes nothing returns nothing
    local integer i = 1
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitY(u, GetUnitY(u)-1380)
        call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

function Trig_WarriorReturnToFightTeam2_Actions takes nothing returns nothing
    local integer i = 1
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
            call SetUnitY(u, GetUnitY(u)+4500)
            call UnitRemoveAbility(u,'A07Z')
	        call UnitRemoveAbility(u,'Bvul')
	    set u = null
	    return
        endif
        set i=i+1
    endloop
    set u = null
endfunction

//===========================================================================
function InitTrig_WarriorReturnToFightTeam takes nothing returns nothing
    set gg_trg_WarriorReturnToFightTeam = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTeam, gg_rct_Team1 )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTeam, gg_rct_Team2 )
    call TriggerAddAction( gg_trg_WarriorReturnToFightTeam, function Trig_WarriorReturnToFightTeam1_Actions )
    set gg_trg_WarriorReturnToFightTeam = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTeam, gg_rct_TeamFight1peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTeam, gg_rct_TeamFight2peons )
    call TriggerAddAction( gg_trg_WarriorReturnToFightTeam, function Trig_WarriorReturnToFightTeam2_Actions )
endfunction

//===========================================================================
// Trigger: WarriorReturnToFightTD
//===========================================================================
//TESH.scrollpos=18
//TESH.alwaysfold=0
function TD1 takes nothing returns nothing
    local integer i = 4
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitX(u,-1984)
        call SetUnitY(u,-7872)
        call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

function TD2 takes nothing returns nothing
    local integer i = 1
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>3
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitX(u,1984)
        call SetUnitY(u,-7872)
        call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

//===========================================================================
function InitTrig_WarriorReturnToFightTD takes nothing returns nothing
    set gg_trg_WarriorReturnToFightTD = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTD, gg_rct_DuelsPeons1 )
    call TriggerAddAction( gg_trg_WarriorReturnToFightTD, function TD1 )
    set gg_trg_WarriorReturnToFightTD = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightTD, gg_rct_DuelsPeons2 )
    call TriggerAddAction( gg_trg_WarriorReturnToFightTD, function TD2 )
endfunction

//===========================================================================
// Trigger: WarriorReturnToFightSD
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_WarriorReturnToFightSD1_Actions takes nothing returns nothing
    local integer i = 4
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitX(u, GetUnitX(u)-3230)
        call SetUnitY(u,-16704)
        call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

function Trig_WarriorReturnToFightSD2_Actions takes nothing returns nothing
    local integer i = 1
    local boolean ball = false
    local unit u = GetEnteringUnit()
    loop
        exitwhen i>3
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set ball = true
        endif
        set i=i+1
    endloop
    if ball then
        call SetUnitX(u, GetUnitX(u)+3230)
        call SetUnitY(u,-16704)
        call UnitRemoveAbility(u,'A07Z')
        call UnitRemoveAbility(u,'Bvul')
    endif
    set u = null
endfunction

//===========================================================================
function InitTrig_WarriorReturnToFightSD takes nothing returns nothing
    set gg_trg_WarriorReturnToFightSD = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel1peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel2peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel3peons )
    call TriggerAddAction( gg_trg_WarriorReturnToFightSD, function Trig_WarriorReturnToFightSD1_Actions )
    set gg_trg_WarriorReturnToFightSD = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel4peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel5peons )
    call TriggerRegisterEnterRectSimple( gg_trg_WarriorReturnToFightSD, gg_rct_SoloDuel6peons )
    call TriggerAddAction( gg_trg_WarriorReturnToFightSD, function Trig_WarriorReturnToFightSD2_Actions )
endfunction

//===========================================================================
// Trigger: BebugSingle2
//===========================================================================
//TESH.scrollpos=22
//TESH.alwaysfold=0
function Trig_BebugCreeps takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitCurrentOrder(u)==0 or GetUnitCurrentOrder(u)==851983 and GetUnitAbilityLevel(u,'A00H')<2 then
        if udg_ModNumber==0 then
            if udg_IntegerX<4 then
                call IssuePointOrder(u, "attack",8250,3600-7200*I2R(udg_IntegerX-1))
            else
                call IssuePointOrder(u, "attack",-8250,3600-7200*I2R(udg_IntegerX-4))
            endif
        else
            call IssuePointOrder(u, "attack",udg_PlayerHomeLocX[udg_IntegerX],udg_PlayerHomeLocY[udg_IntegerX])
        endif
    endif
endfunction

function Trig_BebugSingle takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitCurrentOrder(u)==0 or GetUnitCurrentOrder(u)==851983 and GetUnitAbilityLevel(u,'A00H')<2 then
        if udg_Wave<11 then
            if udg_IntegerX<4 then
                call IssuePointOrder(u,"attack",8250,8500-7200*I2R(udg_IntegerX-1))
            else
                call IssuePointOrder(u,"attack",-8250,8500-7200*I2R(udg_IntegerX-4))
            endif
        else
            call IssuePointOrder(u,"attack",0,-7857)
        endif
    endif
endfunction

function Trig_BebugTeam takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitCurrentOrder(u)==0 or GetUnitCurrentOrder(u)==851983 and GetUnitAbilityLevel(u,'A00H')<2 then
        if udg_IntegerX<4 then
            call IssuePointOrder(u,"attack", 2550,8400)
        else
            call IssuePointOrder(u,"attack",-2550,8400)
        endif
    endif
endfunction

function Trig_BebugDuels takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitCurrentOrder(u)==0 or GetUnitCurrentOrder(u)==851983 and GetUnitAbilityLevel(u,'A00H')<2 then
        if udg_IntegerX<4 then
            call IssuePointOrder(u,"attack",-2300,-7885)
        else
            call IssuePointOrder(u,"attack",2300,-7885)
        endif
    endif
endfunction

function Trig_BebugSD takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = udg_IntegerX
    if GetUnitCurrentOrder(u)==0 or GetUnitCurrentOrder(u)==851983 and GetUnitAbilityLevel(u,'A00H')<2 then
        if i<4 then
            if i==1 then
                set i = 6938
            else
                if i==2 then
                    set i = -2150
                else
                    set i = -11238
                endif 
            endif
        else
            if i==4 then
                set i = 11238
            else
                if i==5 then
                    set i = 2150
                else
                    set i = -6938
                endif
            endif
        endif
        call IssuePointOrder(u,"attack",i,GetUnitY(u))
    endif
endfunction

function Trig_BebugSingle2_Actions takes nothing returns nothing
    set udg_IntegerX = 1
    loop
        exitwhen udg_IntegerX>6
        call ForGroup(udg_PlayerCreepsGroup[udg_IntegerX], function Trig_BebugCreeps)
        if udg_Wave==11 then
            call ForGroup(udg_PlayerWarriorsGroup[udg_IntegerX], function Trig_BebugDuels)
        else
            if udg_ModNumber==0 then
                call ForGroup(udg_PlayerWarriorsGroup[udg_IntegerX], function Trig_BebugSingle)
            else
                if udg_ModNumber==1 then
                    call ForGroup(udg_PlayerWarriorsGroup[udg_IntegerX], function Trig_BebugTeam)
                else
                    if udg_ModNumber==2 then
                        call ForGroup(udg_PlayerWarriorsGroup[udg_IntegerX], function Trig_BebugDuels)
                    else
                        call ForGroup(udg_PlayerWarriorsGroup[udg_IntegerX], function Trig_BebugSD)
                    endif
                endif
            endif
        endif
        set udg_IntegerX=udg_IntegerX+1
    endloop
endfunction


//===========================================================================
function InitTrig_BebugSingle2 takes nothing returns nothing
    set gg_trg_BebugSingle2 = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_BebugSingle2, 5, true)
    call TriggerAddAction( gg_trg_BebugSingle2, function Trig_BebugSingle2_Actions )
endfunction

//===========================================================================
// Trigger: TimerWinExp
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_TimerWinExp_Actions takes nothing returns nothing
    local integer i = 1
    //call DestroyMultiboard(udg_Multiboard)
    loop
        exitwhen i>6
        if udg_BooleanPlay[i] then
            call CustomVictoryBJ( PlayerSlot(i-1), true, true )
        else
            call CustomDefeatBJ( PlayerSlot(i-1), "Ваши армии разбиты,|n      Вы проиграли" )
        endif
        set i=i+1
    endloop
    call PauseTimer(udg_TimerWave)
    //call DestroyTimer(udg_TimerWave)
endfunction

//===========================================================================
function InitTrig_TimerWinExp takes nothing returns nothing
    set gg_trg_TimerWinExp = CreateTrigger(  )
    call TriggerRegisterTimerExpireEvent(gg_trg_TimerWinExp,udg_TimerWin)
    call TriggerAddAction( gg_trg_TimerWinExp, function Trig_TimerWinExp_Actions )
endfunction
//===========================================================================
// Trigger: StartConstr
//===========================================================================
//TESH.scrollpos=13
//TESH.alwaysfold=0
function Trig_StartConstr_Conditions takes nothing returns boolean
    local integer i = 1
    local integer id = GetUnitTypeId(GetConstructingStructure())
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            return true
        endif
        set i=i+1
    endloop
    return false
endfunction

function Trig_StartConstr_Actions takes nothing returns nothing
    local unit u = GetConstructingStructure()
    local group g = CreateGroup()
    call Trig_StartConstr_ActionsDo(u)
    if GetUnitTypeId(u)!=udg_CreepTower[111] then
        call GroupAddUnit(udg_ConstructedTW,u)
        call UnitAddAbility(u,'A08F')
    endif
    call TriggerSleepAction(0)
    call UnitSetConstructionProgress(u,100)
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1400,null)
    set u = FirstOfGroup(g)
    loop
        exitwhen u==null
        if IsUnitType(u,UNIT_TYPE_PEON) then
            call SetUnitAnimation(u,"stand")
        endif
        call GroupRemoveUnit(g,u)
        set u = FirstOfGroup(g)
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

//===========================================================================
function InitTrig_StartConstr takes nothing returns nothing
    set gg_trg_StartConstr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_StartConstr, EVENT_PLAYER_UNIT_CONSTRUCT_START )
    call TriggerAddAction( gg_trg_StartConstr, function Trig_StartConstr_Actions )
endfunction

//===========================================================================
// Trigger: EndConstr
//===========================================================================
//TESH.scrollpos=1
//TESH.alwaysfold=0
function Trig_EndConstr_Conditions takes nothing returns boolean
    local integer i = 1
    local integer id = GetUnitTypeId(GetConstructedStructure())
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            return true
        endif
        set i=i+1
    endloop
    return false
endfunction

function Trig_EndConstr_Actions takes nothing returns nothing
    call Trig_EndConstr_ActionsDo(GetConstructedStructure())
endfunction

//===========================================================================
function InitTrig_EndConstr takes nothing returns nothing
    set gg_trg_EndConstr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EndConstr, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH )
    call TriggerAddCondition( gg_trg_EndConstr, Condition( function Trig_EndConstr_Conditions ) )
    call TriggerAddAction( gg_trg_EndConstr, function Trig_EndConstr_Actions )
endfunction

//===========================================================================
// Trigger: DiedConstr
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DiedConstr_Conditions takes nothing returns boolean
    return IsUnitInGroup(GetDyingUnit(),udg_Constructed)
endfunction

function Trig_DiedConstr_Actions takes nothing returns nothing
    local unit u = GetDyingUnit()
    local integer i = 1
    call RemoveKataSpells(u)
    call GroupRemoveUnit(udg_Constructed,u)
    call GroupRemoveUnit(udg_ConstructedTW,u)
    loop
        exitwhen i>udg_NagaBuildingNum
        if udg_NagaBuildingU[i]==u then
            set udg_NagaBuildingU[i]=udg_NagaBuildingU[udg_NagaBuildingNum]
            set udg_NagaBuildingPC[i]=udg_NagaBuildingPC[udg_NagaBuildingNum]
            set udg_NagaBuildingNum=udg_NagaBuildingNum-1
            set u = null
            return
        endif
        set i=i+1
    endloop
    
    
    set u = null
endfunction

//===========================================================================
function InitTrig_DiedConstr takes nothing returns nothing
    set gg_trg_DiedConstr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_DiedConstr, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_DiedConstr, Condition( function Trig_DiedConstr_Conditions ) )
    call TriggerAddAction( gg_trg_DiedConstr, function Trig_DiedConstr_Actions )
endfunction

//===========================================================================
// Trigger: StartUpgr
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_StartUpgr_Conditions takes nothing returns boolean
    local integer i = 1
    local integer id = GetUnitTypeId(GetTriggerUnit())
    if id=='e01E' then
        return true
    endif
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            return true
        endif
        set i=i+1
    endloop
    return false
endfunction

function Trig_StartUpgr_Actions takes nothing returns nothing
    call Trig_StartUpgr_ActionsDo(GetTriggerUnit(),true)
endfunction

//===========================================================================
function InitTrig_StartUpgr takes nothing returns nothing
    set gg_trg_StartUpgr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_StartUpgr, EVENT_PLAYER_UNIT_UPGRADE_START )
    call TriggerAddCondition( gg_trg_StartUpgr, Condition( function Trig_StartUpgr_Conditions ) )
    call TriggerAddAction( gg_trg_StartUpgr, function Trig_StartUpgr_Actions )
endfunction



//===========================================================================
// Trigger: StopUpgr
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_StopUpgr_ActionsDo takes unit who returns nothing
    local integer i=1
    loop
        exitwhen i>udg_UUN
        if udg_UUT[i]==who then
            set udg_UUT[i]=udg_UUT[udg_UUN]
            //set udg_UUL[i]=udg_UUL[udg_UUN]
            set udg_UULevelSpellOrc[i]=udg_UULevelSpellOrc[udg_UUN]
            set udg_UULevelSpellUnd[i]=udg_UULevelSpellUnd[udg_UUN]
            set udg_UULevelHum[i]=udg_UULevelHum[udg_UUN]
            set udg_UULevelElf[i]=udg_UULevelElf[udg_UUN]
            set udg_UULevelNaga[i]=udg_UULevelNaga[udg_UUN]
    
            set udg_UUL2[i]=udg_UUL2[udg_UUN]
            set udg_UUL3[i]=udg_UUL3[udg_UUN]
            
            set udg_UUT[udg_UUN]=null
            //set udg_UUL[udg_UUN]=0
            set udg_UULevelSpellOrc[udg_UUN]=0
            set udg_UULevelSpellUnd[udg_UUN]=0
            set udg_UULevelHum[udg_UUN]=0
            set udg_UULevelElf[udg_UUN]=0
            set udg_UULevelNaga[udg_UUN]=0
            
            set udg_UUL2[udg_UUN]=0
            set udg_UUL3[udg_UUN]=0
            set udg_UUN=udg_UUN-1
            set i=i-1
        endif
        set i=i+1
    endloop
endfunction

function Trig_StopUpgr_Actions takes nothing returns nothing
    call Trig_StopUpgr_ActionsDo(GetTriggerUnit())
endfunction

//===========================================================================
function InitTrig_StopUpgr takes nothing returns nothing
    set gg_trg_StopUpgr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_StopUpgr, EVENT_PLAYER_UNIT_UPGRADE_CANCEL )
    call TriggerAddAction( gg_trg_StopUpgr, function Trig_StopUpgr_Actions )
endfunction

//===========================================================================
// Trigger: EndUpgr
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_EndUpgr_Actions takes nothing returns nothing
    call Trig_EndUpgr_ActionsDo(GetTriggerUnit(),0,0)
endfunction

//===========================================================================
function InitTrig_EndUpgr takes nothing returns nothing
    set gg_trg_EndUpgr = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EndUpgr, EVENT_PLAYER_UNIT_UPGRADE_FINISH )
    call TriggerAddAction( gg_trg_EndUpgr, function Trig_EndUpgr_Actions )
endfunction


//===========================================================================
// Trigger: initvars
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_initvars_Actions takes nothing returns nothing
    set udg_WaveValueStandart[1]=200
    set udg_WaveValueStandart[2]=320
    set udg_WaveValueStandart[3]=470
    set udg_WaveValueStandart[4]=650
    set udg_WaveValueStandart[5]=860
    set udg_WaveValueStandart[6]=1100
    set udg_WaveValueStandart[7]=1370
    set udg_WaveValueStandart[8]=1670
    set udg_WaveValueStandart[9]=2000
    set udg_WaveValueStandart[10]=2360
    set udg_WaveValueStandart[11]=2750
    
    set udg_UndeadPassive[1]=3
    set udg_UndeadPassive[2]=3
    set udg_UndeadPassive[3]=3
    set udg_UndeadPassive[4]=3
    set udg_UndeadPassive[5]=3
    set udg_UndeadPassive[6]=3
    set udg_PassChoseNum=18
    set udg_RaceNumName[1]="Люди"
    set udg_RaceNumName[2]="Орда"
    set udg_RaceNumName[3]="Нежить"
    set udg_RaceNumName[4]="Ночные эльфы"
    set udg_RaceNumName[5]="Нага"
    set udg_RaceNumName[6]="Демоны"
    set udg_RaceIcon[1]="ReplaceableTextures\\CommandButtons\\BTNArthas.blp"
    set udg_RaceIcon[2]="ReplaceableTextures\\CommandButtons\\BTNHellScream.blp"
    set udg_RaceIcon[3]="ReplaceableTextures\\CommandButtons\\BTNRevenant.blp"
    set udg_RaceIcon[4]="ReplaceableTextures\\CommandButtons\\BTNAssassin.blp"
    set udg_RaceIcon[5]="ReplaceableTextures\\CommandButtons\\BTNNagaMyrmidon.blp"
    set udg_RaceIcon[6]="ReplaceableTextures\\CommandButtons\\BTNDoomGuard.blp"
    
    set udg_HeroPassSkillsPriority[1]='A0F1'
    set udg_HeroPassSkillsPriority[2]='A0F0'
    set udg_HeroPassSkillsPriority[3]='A0F0'
    set udg_HeroPassSkillsPriority[4]='A0F2'
    set udg_HeroPassSkillsPriority[5]='A0F2'
    set udg_HeroPassSkillsPriority[6]='A0F3'
    set udg_HeroPassSkillsPriority[7]='A0F1'
    set udg_HeroPassSkillsPriority[8]='A0F1'
    set udg_HeroPassSkillsPriority[9]='A0F2'
    set udg_HeroPassSkillsPriority[10]='A0F0'
    
    
    set udg_UndeadItemsPassLvls=3
    
    set udg_UndeadItemsPassAll[1]='I00V'
    set udg_UndeadItemsPassAll[2]='I00Z'
    set udg_UndeadItemsPassAll[3]='I00O'
    set udg_UndeadItemsPassAll[4]='I00Q'
    set udg_UndeadItemsPassAll[5]='I012'
    set udg_UndeadItemsPassAll[6]='I00S'
    set udg_UndeadItemsPassAll[7]='I00W'
    set udg_UndeadItemsPassAll[8]='I00T'
    set udg_UndeadItemsPassAll[9]='I00U'
    set udg_UndeadItemsPassAll[10]='I00R'
    set udg_UndeadItemsPassLvlItNums[1]=10
    
    set udg_UndeadItemsPassAll[11]='I00I'
    set udg_UndeadItemsPassAll[12]='I00K'
    set udg_UndeadItemsPassAll[13]='I00P'
    set udg_UndeadItemsPassAll[14]='I00X'
    set udg_UndeadItemsPassAll[15]='I013'
    set udg_UndeadItemsPassAll[16]='I01B'
    set udg_UndeadItemsPassAll[17]='I00M'
    set udg_UndeadItemsPassAll[18]='I011'
    set udg_UndeadItemsPassAll[19]='I017'
    set udg_UndeadItemsPassAll[20]='I01F'
    set udg_UndeadItemsPassLvlItNums[2]=10
    
    set udg_UndeadItemsPassAll[21]='I00J'
    set udg_UndeadItemsPassAll[22]='I00L'
    set udg_UndeadItemsPassAll[23]='I00Y'
    set udg_UndeadItemsPassAll[24]='I01J'
    set udg_UndeadItemsPassAll[25]='I014'
    set udg_UndeadItemsPassAll[26]='I01C'
    set udg_UndeadItemsPassAll[27]='I00N'
    set udg_UndeadItemsPassAll[28]='I01M'
    set udg_UndeadItemsPassAll[29]='I018'
    set udg_UndeadItemsPassAll[30]='I01G'
    set udg_UndeadItemsPassLvlItNums[3]=10
endfunction

//===========================================================================
function InitTrig_initvars takes nothing returns nothing
    set gg_trg_initvars = CreateTrigger(  )
    call TriggerAddAction( gg_trg_initvars, function Trig_initvars_Actions )
endfunction

//===========================================================================
// Trigger: UEPMA
//===========================================================================
//TESH.scrollpos=210
//TESH.alwaysfold=0
function Trig_UEPMA_Actions takes nothing returns nothing
    local unit u = GetEnteringUnit()
    local integer id
    if not(IsUnitType(u,UNIT_TYPE_STRUCTURE) or IsUnitType(u,UNIT_TYPE_PEON)) then
        call TriggerRegisterUnitEvent(gg_trg_Dmg_taken,GetEnteringUnit(),EVENT_UNIT_DAMAGED)
        call GroupAddUnit(udg_GroupDmgTaken,GetEnteringUnit())
    else
        if GetUnitTypeId(u)==udg_CreepTower[111] then
            call SetUnitAbilityLevel(u,'A0DI',udg_Wave)
            if GetUnitAbilityLevel(u,'A0DI')>GetHeroLevel(u) then
                call SetHeroLevel(u,GetUnitAbilityLevel(u,'A0DI'),false)
            endif
            /*set id = 2
            loop
                exitwhen id>udg_Wave
                call SetUnitAbilityLevel(u,udg_HeroPassSkillsPriority[id]+4,GetUnitAbilityLevel(u,udg_HeroPassSkillsPriority[id]+4)+1)     
                set id=id+1
            endloop*/
        endif
    endif
    
    set id = GetUnitTypeId(u)
    if id=='u01F' then
        call SetUnitOwner(u,PlayerSlot( GetPlayerSlotId(GetOwningPlayer(u)) + 1 - 2*(GetPlayerSlotId(GetOwningPlayer(u))/2*2-GetPlayerSlotId(GetOwningPlayer(u)))  ),false)
        call IssueImmediateOrder(u,"fanofknives")
        call TriggerSleepAction(0)
        call RemoveUnit(u)
        set u = null
        return
    else
    
    if GetUnitAbilityLevel(u,'A0A1')>0 then
	    call GroupAddUnit(udg_EntGroupRage,u)
    endif
    
    if GetUnitAbilityLevel(u,'A022')>0 then
        call SetUnitAbilityLevel(u,'A022',GetRandomInt(1,3))
    else
        if id>='o001' and id<='o003' then
            call GroupAddUnit(udg_GruntSpellGroup,u)
        else
            if GetUnitAbilityLevel(u,'A07O')>0 then
                call SetUnitAbilityLevel(u,'A07O',GetRandomInt(1,3))
            else
                if id=='n011' then
                    call GroupAddUnit(udg_MargolDaggerGroup,u)
                else
                    if id=='n000' then
                        call GroupAddUnit(udg_ChumZomb,u)
                    else
                        if id=='n001' then
                            call GroupAddUnit(udg_Ghouls,u)
                        else
                            if id=='u001' then
                                call GroupAddUnit(udg_Gommunkuls,u)
                            else
                                if id=='u002' then
                                    call GroupAddUnit(udg_SuperGolemsEffect,u)
                                else
                                    if id=='h005' then
                                        call GroupAddUnit(udg_SHorses,u)
                                    else
                                        if id=='u00C' then
                                            call GroupAddUnit(udg_KingOfTheDeath,u)
                                        else
                                            if id=='e00F' then
                                                call GroupAddUnit(udg_DDG,u)
                                            else
                                                if id=='o009' or id=='o007' then
                                                    call GroupAddUnit(udg_WolfGroup,u)
                                                else
                                                    if id=='h004' then
                                                        call GroupAddUnit(udg_tseliteli,u)
                                                    else
                                                        if id=='n01B' then
                                                            call GroupAddUnit(udg_NagaMirmidon,u)
                                                        else
                                                            if id=='n01A' then
                                                                set udg_NagaVoinNum = udg_NagaVoinNum+1
                                                                set udg_NagaVoinReal[udg_NagaVoinNum] = 0
                                                                set udg_NagaVoinUnit[udg_NagaVoinNum] = u
                                                            else
                                                                if id=='n012' then
                                                                    call GroupAddUnit(udg_Koatles,u)
                                                                else
                                                                    if GetUnitAbilityLevel(u,'A00V')>0 then
                                                                        call GroupAddUnit(udg_arhangels,u)
								                                    else
                                                            			if GetUnitAbilityLevel(u,'A01Y')>0 then
                                                            			    call GroupAddUnit(udg_KodoGroup,u)
								                                        else
                                                			                if id=='e008' then
                                                			                    call GroupAddUnit(udg_CheckToJump,u)
                                                                            else
                                                			            	    if id=='n01C' then
                                                			    	                call GroupAddUnit(udg_MargolInviGroup,u)
                                                			    	                call UnitAddAbility(u,'A07Z')
                                                                                else
                                                				                    if id=='n01I' then
                                                			    	                	call UnitAddAbility(u,'A08U')
                                                                                    else
                                                				                        if id=='n018' then
                                                			    	            	        call GroupAddUnit(udg_Tornados,u)
										                                                else
                                                	                			            if id=='n01D' then
    												                                            set udg_NagaZaklNum=udg_NagaZaklNum+1
    											                                            	set udg_NagaZaklCaster[udg_NagaZaklNum] = u
    											                                            	set udg_NagaZaklTarget[udg_NagaZaklNum] = null
                                                                                            else
                                                			                	                if id=='n01H' then
                                                		            	    	    	    	    call GroupAddUnit(udg_OceanAvatar,u)
												                                                    //set udg_OceanAvatarP=udg_OceanAvatarP+1
												                                                    //set udg_OceanAvatarGiant[udg_OceanAvatarP]=u
												                                                    //set udg_OceanAvatarDummy[udg_OceanAvatarP]=CreateUnit(GetOwningPlayer(u),'n000',GetUnitX(u),GetUnitY(u),0)
											                                                    else
                                                                                                    if GetUnitAbilityLevel(u,'A00F')>0 then
                                                	                		    	    	    		call GroupAddUnit(udg_PeasantMiss,u)
												                                                    else
                                                		                		                    	if id=='n00V' or id=='n00W' then
                                                		                	    	    	    		    call GroupAddUnit(udg_CannibalOrc,u)
													                                                    else
                                                				                                            if GetUnitAbilityLevel(u,'A059')>0 then
    												                                                            set udg_ArcherNum=udg_ArcherNum+1
    												                                                            set udg_ArcherMass[udg_ArcherNum] = u
												                                                            else
                                                                                                                if GetUnitAbilityLevel(u,'A058')>0 then
    												                                                                set udg_FootmenNum=udg_FootmenNum+1
    												                                                                set udg_FootmenMass[udg_FootmenNum] = u
                                                                                                                else
                                                                                                                    if id=='n00H' then
                                                		                	    	    	    		                call GroupAddUnit(udg_Infernals,u)
                                                                                                                    else
                                                                                                                        if id=='n00E' then
                                                		                	    	    	    		                    call GroupAddUnit(udg_Vlastiteli,u)
                                                                                                                        else
                                                                                                                            if id=='n00J' then
                                                		                	    	    	    		                        call GroupAddUnit(udg_Vlastiteli,u)
                                                		                	    	    	    		                        call GroupAddUnit(udg_Dooms,u)
                                                                                                                            else
                                                                                                                                if id=='n01M' then
                                                		                	    	    	    		                            call GroupAddUnit(udg_FellHoundBig,u)
                                                                                                                                else
                                                                                                                                    if id=='n00K' then
                                                		                	    	    	    		                                call GroupAddUnit(udg_VoidWalkerBig,u)
                                                                                                                                    else
                                                                                                                                        if id=='n00S' then
                                                		                	    	    	    		                                    call GroupAddUnit(udg_EfreetGroup,u)
                                                                                                                                        else
                                                                                                                                            if id=='n006' then
                                                                                                                                                set id = GetPlayerSlotId(GetOwningPlayer(u))
                                                                                                                                                set id = id/2-2+3*(id-id/2*2)
                                                                                                                                                if udg_StartSpellsWorkBool[id] then
                                                                                                                                                    call UnitAddAbility(u,'A0A8')
                                                                                                                                                    call GroupAddUnit(udg_StartSpellsWorkGroup[id],u)
                                                                                                                                                endif
                                                                                                                                            else
                                                                                                                                                if id=='n015' then
                                                                                                                                                    set id = GetPlayerSlotId(GetOwningPlayer(u))
                                                                                                                                                    set id = id/2-2+3*(id-id/2*2)
                                                                                                                                                    if udg_StartSpellsWorkBool[id] then
                                                                                                                                                        call UnitAddAbility(u,'S00A')
                                                                                                                                                        call GroupAddUnit(udg_StartSpellsWorkGroup[id],u)
                                                                                                                                                    endif
                                                                                                                                                else
                                                                                                                                                    if id=='e000' then
                                                		                	    	    	    		                                                call GroupAddUnit(udg_SuccubKnifeGroup,u)
                                                                                                                                                    else
                                                                                                                                                        if id=='u00B' then
                                                                                                                                                            set id = GetPlayerSlotId(GetOwningPlayer(u))
                                                                                                                                                            set id = id/2-2+3*(id-id/2*2)
                                                                                                                                                            if udg_StartSpellsWorkBool[id] then
                                                                                                                                                                call UnitAddAbility(u,'S00A')
                                                                                                                                                                call GroupAddUnit(udg_StartSpellsWorkGroup[id],u)
                                                                                                                                                            endif
                                                		                	    	    	    		                                                    call GroupAddUnit(udg_FrostKnightGroup,u)
                                                                                                                                                        else
                                                                                                                                                            if id=='h01N' or id=='h01Q' then
                                                                                                                                                                set udg_PalaNum=udg_PalaNum+1
                                                                                                                                                                set udg_PalaUnit[udg_PalaNum]=u
                                                                                                                                                                set udg_PalaTime[udg_PalaNum]=0
                                                                                                                                                                call GroupAddUnit(udg_HumPalaAura1,u)
                                                                                                                                                            endif
                                                                                                                                                        endif
                                                                                                                                                    endif
                                                                                                                                                endif
                                                                                                                                            endif
                                                                                                                                        endif
                                                                                                                                    endif
                                                                                                                                endif
                                                                                                                            endif
                                                                                                                        endif
                                                                                                                    endif
												                                                                endif
                                                                                                            endif
												    	                                                endif
												                                                    endif
												                                                endif
											                                                endif
											                                            endif
										                                            endif
										                                        endif
									                                        endif
									                                    endif
                                                                    endif
                                                                endif
                                                            endif
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endif
        endif
    endif
    
    
    endif
    call GroupAddUnit(udg_GLC,u)
    set u = null
endfunction

//===========================================================================
function InitTrig_UEPMA takes nothing returns nothing
    set gg_trg_UEPMA = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_UEPMA,bj_mapInitialPlayableArea)
    call TriggerAddAction( gg_trg_UEPMA, function Trig_UEPMA_Actions )
endfunction

//===========================================================================
// Trigger: UnitAttackedMove
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_UnitAttackedMove_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetAttacker(),'A00H')>0
endfunction

function Trig_UnitAttackedMove_Actions takes nothing returns nothing
    local unit u = GetAttacker()
    call SetUnitAbilityLevel(u,'A00H',GetUnitAbilityLevel(u,'A00H')+1)
    call TriggerSleepAction(3.4)
    if GetUnitAbilityLevel(u,'A00H')>=2 then
        call SetUnitAbilityLevel(u,'A00H',GetUnitAbilityLevel(u,'A00H')-1)
    endif
endfunction

//===========================================================================
function InitTrig_UnitAttackedMove takes nothing returns nothing
    set gg_trg_UnitAttackedMove = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_UnitAttackedMove, Condition( function Trig_UnitAttackedMove_Conditions ) )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_UnitAttackedMove, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg_UnitAttackedMove, function Trig_UnitAttackedMove_Actions )
endfunction

//===========================================================================
// Trigger: UnitAttacked
//===========================================================================
//TESH.scrollpos=365
//TESH.alwaysfold=0
function Trig_UnitAttacked_Actions takes nothing returns nothing
    local unit u = GetAttacker()
    local unit t = GetTriggerUnit()
    local unit y
    local group g
    local group j
    local player p
    local real ux
    local real uy
    local integer i = GetUnitTypeId(u)
    local integer s = GetPlayerSlotId(GetOwningPlayer(u))
    local integer n
    local real a
    local item it
    local boolean b = false

    set s = s/2-2+3*(s-s/2*2)
    if udg_StartSpellsWorkBool[s] and GetUnitAbilityLevel(u,'A06T')==0 then
        if udg_ModNumber==1 or udg_ModNumber==2 then
            set s = 1
            loop
                exitwhen s>6
                set udg_StartSpellsWorkBool[s] = false
                set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
                loop
                    exitwhen u==null
                    call UnitRemoveAbility(u,'A0A8')
                    if GetUnitAbilityLevel(u,'S00A')>0 then
                        call UnitRemoveAbility(u,'S00A')
                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+5)
                    endif
                    call UnitRemoveAbility(u,'B02E')
                    call GroupRemoveUnit(udg_StartSpellsWorkGroup[s],u)
                    set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
                endloop
                set s=s+1
            endloop
        else
            set udg_StartSpellsWorkBool[s] = false
            set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
            loop
                exitwhen u==null
                call UnitRemoveAbility(u,'A0A8')
                    if GetUnitAbilityLevel(u,'S00A')>0 then
                        call UnitRemoveAbility(u,'S00A')
                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+5)
                    endif
                call UnitRemoveAbility(u,'B02E')
                call GroupRemoveUnit(udg_StartSpellsWorkGroup[s],u)
                set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
            endloop
            set s = s+3-6*(s/4)
            set udg_StartSpellsWorkBool[s] = false
            set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
            loop
                exitwhen u==null
                call UnitRemoveAbility(u,'A0A8')
                    if GetUnitAbilityLevel(u,'S00A')>0 then
                        call UnitRemoveAbility(u,'S00A')
                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+5)
                    endif
                call UnitRemoveAbility(u,'B02E')
                call GroupRemoveUnit(udg_StartSpellsWorkGroup[s],u)
                set u = FirstOfGroup(udg_StartSpellsWorkGroup[s])
            endloop
        endif
        set u = GetAttacker()
    endif
    set s = 0
    if GetUnitAbilityLevel(t,'S00I')>=1 then
    	set u = CreateUnit(GetOwningPlayer(t),'e019',GetUnitX(u),GetUnitY(u)-5,90)
    	//set u = CreateUnit(Player(0),'e019',GetUnitX(u),GetUnitY(u)-55,90)
        call UnitAddAbility(u,'A0AJ')
        call SetUnitAbilityLevel(u,'A0AJ',GetUnitAbilityLevel(t,'S00I'))
        call IssueTargetOrder(u,"slow",GetAttacker())
    	call UnitApplyTimedLife(u,'BTLF',1)
        set u = GetAttacker()
    endif
    if GetUnitTypeId(t)=='n01I' and GetUnitState(t,UNIT_STATE_MANA)>=40 and GetUnitAbilityLevel(t,'BNdo')==0 then
	    set it = CreateItem('I00D',0,0)
        call SetUnitState(t,UNIT_STATE_MANA,GetUnitState(t,UNIT_STATE_MANA)-40)
        call GroupAddUnit(udg_MarkyraBig,t)
        call UnitRemoveAbility(t,'A08U')
        call UnitAddAbility(t,'A09C')
        if GetUnitAbilityLevel(t,'A0DU')==0 then
            call UnitAddAbility(t,'AInv')
            call UnitAddItem(t,it)
            call UnitRemoveAbility(t,'AInv')
        else
            call UnitAddItem(t,it)
        endif
        call RemoveItem(it)
        set it = null
    endif
	set t = null
    set it = UnitItemInSlot(u,0)
    if it!=null then
        if GetItemTypeId(it)==udg_UndeadItemsPassAll[9] or GetItemTypeId(it)==udg_UndeadItemsPassAll[19] or GetItemTypeId(it)==udg_UndeadItemsPassAll[29] then
            set y = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
            if GetItemTypeId(it)==udg_UndeadItemsPassAll[9] then
                call UnitAddAbility(y,'A0E2')
            else
                if GetItemTypeId(it)==udg_UndeadItemsPassAll[19] then
                    call UnitAddAbility(y,'A0E3')
                else
                    if GetItemTypeId(it)==udg_UndeadItemsPassAll[29] then
                        call UnitAddAbility(y,'A0E4')
                    endif
                endif
            endif
            call RemoveItem(it)
            call UnitApplyTimedLife(y,'BTLF',11)
            //if IsUnitInGroup then
            //endif
            set s=1
            loop
                exitwhen s>6
                if IsUnitInGroup(u,udg_PlayerWarriorsGroup[s]) then
                    call UnitAddAbility(y,'A00H')
                    call UnitAddAbility(y,'A0HR')
                    call SetUnitAbilityLevel(y,'A0HR',s)
                    set s=6
                else
                    if IsUnitInGroup(u,udg_PlayerCreepsGroup[s]) then
                        call UnitAddAbility(y,'A00H')
                        call UnitAddAbility(y,'A0HR')
                        call SetUnitAbilityLevel(y,'A0HR',s+6)
                        set s=6
                    endif
                endif
                set s=s+1
            endloop
            call IssueImmediateOrder(y,"spiritwolf")
        endif
    endif

    if IsUnitType(u,UNIT_TYPE_HERO) then
        call TriggerSleepAction(0)
        if IssueImmediateOrder(u,"wateryminion") then
        elseif IssueTargetOrder(u,"chainlightning",GetTriggerUnit()) then
        else
            //call DisplayTextToPlayer(Player(0),0,0,"no2firstspells")
            set g = CreateGroup()
            if GetUnitAbilityLevel(u,'A0IH')>0 then
                //call DisplayTextToPlayer(Player(0),0,0,"IH exists")
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                call GroupRemoveUnit(g,u)
                loop
                    set y = FirstOfGroup(g)
                    exitwhen y==null
                    if GetUnitState(y,UNIT_STATE_LIFE)>0 and (GetUnitState(y,UNIT_STATE_MAX_LIFE)-GetUnitState(y,UNIT_STATE_LIFE)>100 or GetUnitState(y,UNIT_STATE_LIFE)<50) then
                        set b = true
                //call DisplayTextToPlayer(Player(0),0,0,"set b = true")
                    endif
                    call GroupRemoveUnit(g,y)
                endloop
                if b then
                    if not(IssueImmediateOrderById(u,852273)) then
                        set b = false
                    endif
                endif
            endif
                //call DisplayTextToPlayer(Player(0),0,0,"main check")
            if not(b) and GetUnitAbilityLevel(u,'A0IF')>0 then
                //call DisplayTextToPlayer(Player(0),0,0,"not(b) and level>0 == true")
                set t = null
                set n = 0
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                call GroupRemoveUnit(g,u)
                loop
                    set y = FirstOfGroup(g)
                    exitwhen y==null
                    if not(IsUnitInGroup(y,udg_CastingHeroDebuffGroup)) and GetUnitAbilityLevel(y,'B030')==0 and IsUnitEnemy(y,GetOwningPlayer(u)) and IsUnitVisible(y,GetOwningPlayer(u)) and GetUnitState(y,UNIT_STATE_LIFE)>0 and GetUnitState(y,UNIT_STATE_LIFE)>n and not(IsUnitType(y,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(y,'Bvul')==0 and GetUnitAbilityLevel(y,'A06T')==0 then
                        set n=R2I(GetUnitState(y,UNIT_STATE_LIFE))
                        set t = y
                        set b = true
                    endif
                    call GroupRemoveUnit(g,y)
                endloop
                if b then
                //call DisplayTextToPlayer(Player(0),0,0,"go cast now")
                    if IssueTargetOrder(u,"acidbomb",t) then
                        call GroupAddUnit(udg_CastingHeroDebuffGroup,t)
                        call TriggerSleepAction(1)
                        call GroupRemoveUnit(udg_CastingHeroDebuffGroup,t)
                    endif
                endif
            endif
            set b = false
            call GroupClear(g)
            call DestroyGroup(g)
            set g = null
        endif 
    else
    
        if GetUnitAbilityLevel(u,'A00M')==1 then
        
            if i<'n01N' then
                if i<'n00M' then
                    if i<'h005' then
                        if i<'e009' then
                            if i=='e004' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA)-1 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                                        set a = 0.85
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingRejGroup)) and GetUnitAbilityLevel(t,'B009')==0 and IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitState(t,UNIT_STATE_LIFE)<a*GetUnitState(t,UNIT_STATE_MAX_LIFE) and GetUnitTypeId(t)>='e00A' and GetUnitTypeId(t)<='e00F' then
                                                set a=GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_CastingRejGroup,u)
                                            call IssueTargetOrder(GetAttacker(),"rejuvination",u)
                                            call TriggerSleepAction(1)
                                            call GroupRemoveUnit(udg_CastingRejGroup,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            else//i=='e006'
                                if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA)-1 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                                        set a = 0.8
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingRejGroup)) and GetUnitAbilityLevel(t,'B01H')==0 and IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitState(t,UNIT_STATE_LIFE)<a*GetUnitState(t,UNIT_STATE_MAX_LIFE) and not(IsUnitType(t,UNIT_TYPE_ANCIENT)) then
                                                set a=GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_CastingRejGroup,u)
                                            call IssueTargetOrder(GetAttacker(),"rejuvination",u)
                                            call TriggerSleepAction(1)
                                            call GroupRemoveUnit(udg_CastingRejGroup,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            endif
                        else
                            if i=='e009' and GetUnitAbilityLevel(u,'BNdo')==0 then
                                if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA) then
                                    call SetUnitState(u,UNIT_STATE_MANA,0)
                                    set t = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),0)
                                    call UnitAddAbility(t,'A01P')
                                    call SetUnitAbilityLevel(t,'A01P',GetUnitAbilityLevel(u,'A07G'))
                                    call IssueImmediateOrder(t,"tranquility")
                                    call UnitApplyTimedLife(t,'BTLF',15)
                                    set t = null
                                endif
                            else//i=='e015'
                                if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA)-1 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),700,null)
                                        set a = 20
                                        set u = null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>=40 and GetUnitAbilityLevel(t,'S00J')==0 and GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)>a and GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)<0.8 and not(IsUnitInGroup(t,udg_CastingDemonShieldGroup)) and not(IsUnitType(t,UNIT_TYPE_PEON)) then
                                                if GetUnitTypeId(t)=='n00K' then
                                                    if GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)-50>a and (GetUnitState(t,UNIT_STATE_LIFE)+50)/GetUnitState(t,UNIT_STATE_MAX_LIFE)<0.8 then
                                                        set a=GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)-50
                                                        set u=t
                                                    endif
                                                else
                                                    set a=GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)
                                                    set u=t
                                                endif
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_CastingDemonShieldGroup,u)
                                            call IssueTargetOrder(GetAttacker(),"healingwave",u)
                                            call TriggerSleepAction(1)
                                            call GroupRemoveUnit(udg_CastingDemonShieldGroup,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'n00C' then
                            if i=='h007' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=19 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=20 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        call IssueTargetOrder(u,"carrionswarm",GetTriggerUnit())
                                    endif
                                endif
                            else
                                if i=='h005' then
                                    if GetUnitState(u,UNIT_STATE_MANA)>=35 and GetUnitAbilityLevel(GetTriggerUnit(),'Amrf')==0 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                        set it = CreateItem('I009',0,0)
                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-35)
                                        call GroupAddUnit(udg_Horses,u)
                                        call UnitAddAbility(u,'A0AE')
                                        if GetUnitAbilityLevel(u,'A0DU')==0 then
                                            call UnitAddAbility(u,'AInv')
                                            call UnitAddItem(u,it)
                                            call UnitRemoveAbility(u,'AInv')
                                        else
                                            call UnitAddItem(u,it)
                                        endif
                                        call RemoveItem(it)
                                        set it = null
                                    endif
                                else
                                    if i=='n00T' then
                                        set i = GetUnitAbilityLevel(u,'A07O')
                                        if GetRandomReal(0,100)<=i*8.475 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                            call UnitAddAbility(u,'A06Z')
                                            call SetUnitAbilityLevel(u,'A07O',1)
                                            call SetUnitAnimation(u,"attack slam")
                                            call QueueUnitAnimation(u,"stand ready")
                                        else
                                            call SetUnitAnimation(u,"attack")
                                            call QueueUnitAnimation(u,"stand ready")
                                            call SetUnitAbilityLevel(u,'A07O',i+1)
                                            call UnitRemoveAbility(u,'A06Z')
                                        endif
                                    endif
                                endif
                            endif
                        else
                            if i=='n00C' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=200 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    set y = u
                                    set g = CreateGroup()
                                    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                                    set t = FirstOfGroup(g)
                                    loop
                                        exitwhen t==null
                                        if GetUnitState(t,UNIT_STATE_LIFE)<=0 and IsUnitAlly(t,GetOwningPlayer(u)) and GetUnitAbilityLevel(t,'A0AG')>0 and GetUnitState(t,UNIT_STATE_MAX_LIFE)<230 and udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]<120 and GetUnitAbilityLevel(t,'A0F2')==0 then//GetUnitAbilityLevel(t,'A0A1')+
                                            call SetUnitState(u,UNIT_STATE_MANA,0)
                                            call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl",GetUnitX(u),GetUnitY(u)))
                                            set u = CreateUnit(GetOwningPlayer(t),GetUnitTypeId(t),GetUnitX(t),GetUnitY(t),GetUnitFacing(t))
                                            call UnitAddAbility(u,'A0IX')//Был воскрешён скиллом
                                            call UnitAddAbility(u,'A00H')
                                            call UnitAddAbility(u,'A0AG')
                                            call SetUnitAbilityLevel(u,'A0AG',GetUnitAbilityLevel(t,'A0AG'))
                                            //call UnitAddAbility(u,'A07K')//
                                            call SetUnitState(u,UNIT_STATE_MANA,0)
                                            call SetUnitState(u,UNIT_STATE_LIFE,0.65*GetUnitState(u,UNIT_STATE_MAX_LIFE))
                                            //call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl",GetUnitX(u),GetUnitY(u)))
                                            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl",u,"origin"))
                    
                                            set s=1
                                            loop
                                                exitwhen s>6
                                                if IsUnitInGroup(y,udg_PlayerWarriorsGroup[s]) then
                                                    call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(s,t,u,true,true,true)
                                                else
                                                    if IsUnitInGroup(y,udg_PlayerCreepsGroup[s]) then
                                                        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(s+6,t,u,true,true,true)
                                                    endif
                                                endif
                                                set s=s+1
                                            endloop
                                            
                                            call RemoveUnit(t)
                                            set t = null
                                        else
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endif
                                    endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g = null
                                    set y = null
                                    set t = null
                                endif
                            else
                                if i=='n00F' then
                                    call TriggerSleepAction(0)
                                    call IssueImmediateOrder(u,"roar")
                                else//'n00I'
                                    
                                endif
                            endif
                        endif
                    endif
                else
                    if i<'n019' then
                        if i<'n00X' then
                            if i=='n00M' then
                                set ux = GetUnitX(GetTriggerUnit())
                                set uy = GetUnitY(GetTriggerUnit())
                                call TriggerSleepAction(0)
                                call IssuePointOrderById(u,852224,ux,uy)
                            else
                                if i=='n00W' or i=='n00V' then// i=='n00V' 'n00W'
                                    if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitAbilityLevel(u,'BNdo')==0 then
                                        call SetUnitState(u,UNIT_STATE_MANA,0)
                                        call UnitAddAbility(u,'A07H')
                                        call GroupAddUnit(udg_Ziclops,u)
                                        set it = CreateItem('I00C',0,0)
                                        if GetUnitAbilityLevel(u,'A0DU')==0 then
                                            call UnitAddAbility(u,'AInv')
                                            call UnitAddItem(u,it)
                                            call UnitRemoveAbility(u,'AInv')
                                        else
                                            call UnitAddItem(u,it)
                                        endif
                                        call RemoveItem(it)
                                        set it = null
                                    endif
                                    if i=='n00W' then
                                        set i = GetUnitAbilityLevel(u,'A07O')
                                        if GetRandomReal(0,100)<=i*14.628 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                            call UnitAddAbility(u,'A06Z')
                                            call SetUnitAbilityLevel(u,'A07O',1)
                                            call SetUnitAnimation(u,"attack slam")
                                            call QueueUnitAnimation(u,"stand ready")
                                        else
                                            call SetUnitAbilityLevel(u,'A07O',i+1)
                                            call UnitRemoveAbility(u,'A06Z')
                                            call SetUnitAnimation(u,"attack")
                                            call QueueUnitAnimation(u,"stand ready")
                                        endif
                                    endif
                                else// i=='n00O'
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set j = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        set s = 0
                                        
                                        set b = GetUnitAbilityLevel(u,'A0IQ')>0 and GetUnitState(u,UNIT_STATE_MANA)>=2
                                        if b then
                                            set i = 999999
                                            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1700,null)
                                        else
                                            set i = R2I(GetUnitState(GetTriggerUnit(),UNIT_STATE_MAX_LIFE)-1)
                                            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),950,null)
                                        endif
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if IsUnitEnemy(t,p) and IsUnitVisible(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and ((GetUnitState(t,UNIT_STATE_MAX_LIFE)<=i and not(b)) or (GetUnitState(t,UNIT_STATE_MAX_LIFE)<=i+25 and b)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Bvul')==0 and GetUnitAbilityLevel(t,'A06T')==0 then
                                                if GetUnitState(t,UNIT_STATE_MAX_LIFE)>=i then
                                                    call GroupAddUnit(j,t)
                                                    set s = s+1
                                                else
                                                    call GroupClear(j)
                                                    call GroupAddUnit(j,t)
                                                    set i = R2I(GetUnitState(t,UNIT_STATE_MAX_LIFE))
                                                    set s = 1
                                                endif
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if FirstOfGroup(j)!=null then
                                            set t = FirstOfGroup(j)
                                            set i=GetRandomInt(1,s)
                                            set s=1
                                            loop
                                                exitwhen t==null
                                                if i==s then
                                                    if b then
                                                        call IssuePointOrder(u,"cannibalize",GetUnitX(t),GetUnitY(t))
                                                    else
                                                        call IssueTargetOrder(u,"attack",t)
                                                    endif
                                                endif
                                                call GroupRemoveUnit(j,t)
                                                set t = FirstOfGroup(j)
                                                set s = s+1
                                            endloop
                                        endif
                                        set b = false
                                        call GroupClear(j)
                                        call DestroyGroup(j)
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set j = null
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                    
                                endif
                            endif
                    
                        else
                            if i=='n00X' then
                                call IssueImmediateOrder(u,"summonquillbeast")
                            else// i=='n015'
                                if GetUnitState(u,UNIT_STATE_MANA)>=1 then
                                    call UnitAddAbility(u,'A04R')
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),570,null)
                                        set a = GetUnitState(u,UNIT_STATE_MANA)
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_TurtleEatCasting)) and IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>9 and GetUnitState(t,UNIT_STATE_LIFE)<=a*10 and GetUnitState(t,UNIT_STATE_MAX_LIFE)<=250 and IsUnitVisible(t,p) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Bvul')==0 and GetUnitAbilityLevel(t,'A06T')==0 then
                                                set a=0.1*GetUnitState(t,UNIT_STATE_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_TurtleEatCasting,u)
                                            call IssueTargetOrder(GetAttacker(),"drain",u)
                                            call TriggerSleepAction(2)
                                            call GroupRemoveUnit(udg_TurtleEatCasting,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'n01E' then
                            if i=='n01D' then
                                call TriggerSleepAction(0)
                                call IssueTargetOrder(u,"drain",GetTriggerUnit())
                            else// i=='n019'
                                call TriggerSleepAction(0)
                                call IssueImmediateOrder(u,"wateryminion")
                            endif
                        else
                            if i=='n01E' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=7 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=8 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),800,null)
                                        set a = 17
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>25 and not(IsUnitInGroup(t,udg_NagaSirenCasting)) and GetUnitAbilityLevel(t,'BUfa')==0 and GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)>a and not(IsUnitType(t,UNIT_TYPE_PEON)) then
                                                set a=GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_NagaSirenCasting,u)
                                            call IssueTargetOrder(GetAttacker(),"frostarmor",u)
                                            call TriggerSleepAction(1)
                                            call GroupRemoveUnit(udg_NagaSirenCasting,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            else//i=='n01G'
                                call TriggerSleepAction(0)
                                call IssuePointOrder(u,"tornado",GetUnitX(GetTriggerUnit()),GetUnitY(GetTriggerUnit()))
                            endif
                        endif
                    endif
                endif
            else
                if i<'o00F' then
                    if i<'o008' then
                        if i<'o003' then
                            if i=='n01N' then
                                call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",GetUnitX(u),GetUnitY(u)))
                                set g = CreateGroup()
                                set p = GetOwningPlayer(u)
                                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),330,null)
                                set t = FirstOfGroup(g)
                                loop
                                    exitwhen t==null
                                    if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(t,'A06T')==0 then
                                        call UnitDamageTarget(u,t,40,true,false, ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                    endif
                                    call GroupRemoveUnit(g,t)
                                    set t = FirstOfGroup(g)
                                endloop
                                call GroupClear(g)
                                call DestroyGroup(g)
                                set g = null
                                set t = null
                                set p = null
                                call KillUnit(u)
                                call RemoveUnit(u)
                            else// i=='n01P'
                                call TriggerSleepAction(0)
                                call IssueTargetOrder(u,"chainlightning",GetTriggerUnit())
                            endif
                        else                
                            if i=='o006' then
                                if GetUnitAbilityLevel(u,'BNdo')==0 then
                                    set t = GetTriggerUnit()
                                    call TriggerSleepAction(0.6)
                                    if GetUnitState(t,UNIT_STATE_LIFE)>0 then
                                        set udg_PoisonC=udg_PoisonC+1
                                        set udg_PoisonU[udg_PoisonC]=t
                                        set udg_PoisonD[udg_PoisonC]=u
                                        set udg_PoisonN[udg_PoisonC]=5
                                        set it = CreateItem('I002',0,0)
                                        if GetUnitAbilityLevel(t,'A0DU')==0 then
                                            call UnitAddAbility(t,'AInv')
                                            call UnitAddItem(t,it)
                                            call UnitRemoveAbility(t,'AInv')
                                        else
                                            call UnitAddItem(t,it)
                                        endif
                                        call RemoveItem(it)
                                        set it = null
                                    endif
                                endif
                            else// i=='o003'
                            
                                if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA)-1 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitState(u,UNIT_STATE_LIFE)>0 then

                                        set y = u
                                        set g = CreateGroup()
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if GetUnitState(t,UNIT_STATE_LIFE)<=0 and IsUnitAlly(t,GetOwningPlayer(u)) and (GetUnitTypeId(t)=='o008' or GetUnitTypeId(t)=='o003') and GetUnitAbilityLevel(t,'A024')==0 then
                                                call SetUnitState(u,UNIT_STATE_MANA,0)
                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\AncestralSpirit\\AncestralSpiritCaster.mdl",GetUnitX(u),GetUnitY(u)))
                                                set u = CreateUnit(GetOwningPlayer(t),GetUnitTypeId(t),GetUnitX(t),GetUnitY(t),GetUnitFacing(t))
                                                call UnitAddAbility(u,'A00H')
                                                call UnitAddAbility(u,'A0AG')
                                                call UnitAddAbility(u,'A024')// Блок повторного воскрешения
                                                call SetUnitAbilityLevel(u,'A0AG',GetUnitAbilityLevel(t,'A0AG'))
                                                //call UnitAddAbility(u,'A07K')
                                                call SetUnitState(u,UNIT_STATE_LIFE,0.7*GetUnitState(u,UNIT_STATE_MAX_LIFE))
                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\Reincarnation\\ReincarnationTarget.mdl",GetUnitX(u),GetUnitY(u)))
                                                
                                                set s=1
                                                loop
                                                    exitwhen s>6
                                                    if IsUnitInGroup(y,udg_PlayerWarriorsGroup[s]) then
                                                        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(s,t,u,true,true,true)
                                                    else
                                                        if IsUnitInGroup(y,udg_PlayerCreepsGroup[s]) then
                                                            call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(s+6,t,u,true,true,true)
                                                        endif
                                                    endif
                                                    set s=s+1
                                                endloop
                                            
                                                call RemoveUnit(t)
                                                set t = null
                                            else
                                                call GroupRemoveUnit(g,t)
                                                set t = FirstOfGroup(g)
                                            endif
                                        endloop
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set y = null
                                        set t = null
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'o00C' then
                            if i=='o00A' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=3 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=3 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set j = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        set i = 0
                                        set s = 0
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),920,null)
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingBloodlustGroup)) and GetUnitAbilityLevel(t,'Bblo')==0 and IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>30 and GetUnitLevel(t)>=i and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'A06T')==0 then
                                                if GetUnitLevel(t)==i then
                                                    call GroupAddUnit(j,t)
                                                    set s = s+1
                                                else
                                                    call GroupClear(j)
                                                    call GroupAddUnit(j,t)
                                                    set i = GetUnitLevel(t)
                                                    set s = 1
                                                endif
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if i>0 then
                                            set t = FirstOfGroup(j)
                                            set i=GetRandomInt(1,s)
                                            set s=1
                                            loop
                                                exitwhen t==null
                                                if i==s then
                                                    call GroupAddUnit(udg_CastingBloodlustGroup,t)
                                                    call IssueTargetOrder(u,"bloodlust",t)
                                                    call TriggerSleepAction(1)
                                                    call GroupRemoveUnit(udg_CastingBloodlustGroup,t)
                                                endif
                                                call GroupRemoveUnit(j,t)
                                                set t = FirstOfGroup(j)
                                                set s = s+1
                                            endloop
                                        endif
                                    endif
                                    call GroupClear(j)
                                    call DestroyGroup(j)
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set j = null
                                    set g = null
                                    set t = null
                                    set p = null
                                endif
                            else//'o008'
                                set i = GetUnitAbilityLevel(u,'A022')
                                if i==3 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    call SetUnitAnimation(u,"attack slam")
                                    call QueueUnitAnimation(u,"stand ready")
                                else
                                    call SetUnitAnimation(u,"attack")
                                    call QueueUnitAnimation(u,"stand ready")
                                endif
                            endif
                        else
                            if i=='o00C' then
                                call TriggerSleepAction(0)
                                call IssueImmediateOrder(u,"spiritwolf")
                            else//'o00D'
                                if GetUnitState(u,UNIT_STATE_MANA)>=6 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=7 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set j = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        set i = 0
                                        set s = 0
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),920,null)
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingAcidbombGroup)) and GetUnitAbilityLevel(t,'B029')==0 and IsUnitEnemy(t,p) and IsUnitVisible(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitState(t,UNIT_STATE_LIFE)>=i and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Bvul')==0 and GetUnitAbilityLevel(t,'A06T')==0 then
                                                if GetUnitState(t,UNIT_STATE_LIFE)==i then
                                                    call GroupAddUnit(j,t)
                                                    set s = s+1
                                                else
                                                    call GroupClear(j)
                                                    call GroupAddUnit(j,t)
                                                    set i = R2I(GetUnitState(t,UNIT_STATE_LIFE))
                                                    set s = 1
                                                endif
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if i>0 then
                                            set t = FirstOfGroup(j)
                                            set i=GetRandomInt(1,s)
                                            set s=1
                                            loop
                                                exitwhen t==null
                                                if i==s then
                                                    call GroupAddUnit(udg_CastingAcidbombGroup,t)
                                                    call IssueTargetOrder(u,"acidbomb",t)
                                                    call TriggerSleepAction(1)
                                                    call GroupRemoveUnit(udg_CastingAcidbombGroup,t)
                                                endif
                                                call GroupRemoveUnit(j,t)
                                                set t = FirstOfGroup(j)
                                                set s = s+1
                                            endloop
                                        endif
                                    endif
                                    call GroupClear(j)
                                    call DestroyGroup(j)
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set j = null
                                    set g = null
                                    set t = null
                                    set p = null
                                endif
                            endif
                        endif
                    endif
                else
                    if i<'u004' then
                        if i<'o00H' then
                            if i=='o00F' then
                                set i = GetUnitAbilityLevel(u,'A07O')
                                if GetRandomReal(0,100)<=i*8.475 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    call UnitAddAbility(u,'A06Z')
                                    call SetUnitAbilityLevel(u,'A07O',1)
                                    call SetUnitAnimation(u,"attack slam")
                                    call QueueUnitAnimation(u,"stand ready")
                                else
                                    call SetUnitAnimation(u,"attack")
                                    call QueueUnitAnimation(u,"stand ready")
                                    call SetUnitAbilityLevel(u,'A07O',i+1)
                                    call UnitRemoveAbility(u,'A06Z')
                                endif
                            else//'o00G'
                                set i = GetUnitAbilityLevel(u,'A022')
                                if i==3 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    call SetUnitAnimation(u,"attack slam")
                                    call QueueUnitAnimation(u,"stand ready")
                                else
                                    call SetUnitAnimation(u,"attack")
                                    call QueueUnitAnimation(u,"stand ready")
                                endif
                            endif
                        else
                            if i=='u003' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=30 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    set g = CreateGroup()
                                    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),850,null)
                                    set t = FirstOfGroup(g)
                                    loop
                                        exitwhen t==null
                                        if GetUnitState(t,UNIT_STATE_LIFE)<=0 and GetUnitAbilityLevel(t,'A07L')==1 and not(IsUnitInGroup(t,udg_GalvanGroup)) then
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-30)
                                            set u = CreateUnit(GetOwningPlayer(u),'u006',GetUnitX(t),GetUnitY(t),GetUnitFacing(t))
                                            call UnitAddAbility(u,'A001')
                                            call UnitApplyTimedLife(u,'Brai',12)
                                            call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdl",GetUnitX(u),GetUnitY(u)))
                                            call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(0,GetAttacker(),u,false,false,false)
                                            
                                            call RemoveUnit(t)
                                            set t = null
                                        else
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endif
                                    endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g = null
                                    set t = null
                                endif
                            else//'o00H'
                                if GetUnitState(u,UNIT_STATE_MANA)>=74 and GetUnitAbilityLevel(u,'BNdo')==0 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=75 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                                        set a = 0.4
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingInvulGroup)) and GetUnitAbilityLevel(t,'Bvul')==0 and IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitState(t,UNIT_STATE_LIFE)<a*GetUnitState(t,UNIT_STATE_MAX_LIFE) then
                                                set a=GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call SetUnitState(GetAttacker(),UNIT_STATE_MANA,GetUnitState(GetAttacker(),UNIT_STATE_MANA)-75)
                                            if GetUnitAbilityLevel(u,'BNdo')==1 then
                                                set b=true
                                                call UnitRemoveAbility(u,'BNdo')
                                            endif
                                            call GroupAddUnit(udg_CastingInvulGroup,u)
                                            set it = CreateItem('I000',0,0)
                                            if GetUnitAbilityLevel(u,'A0DU')==0 then
                                                call UnitAddAbility(u,'AInv')
                                                call UnitAddItem(u,it)
                                                call UnitRemoveAbility(u,'AInv')
                                            else
                                                call UnitAddItem(u,it)
                                            endif
                                            call UnitRemoveAbility(u,'B00Z')
                                            call UnitRemoveAbility(u,'BPSE')
                                            call RemoveItem(it)
                                            if b then
                                                set i = GetPlayerId(GetOwningPlayer(u))
                                                set t = CreateUnit(Player(i+1-2*(i-i/2*2)),'e019',GetUnitX(u),GetUnitY(u)-5,90)
                                                call UnitAddAbility(t,'A0BW')
                                                call IssueTargetOrder(t,"doom",u)
                                            endif
                                            call TriggerSleepAction(1)
                                            call GroupRemoveUnit(udg_CastingInvulGroup,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'u00A' then
                            if i=='u004' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=49 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=50 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),700,null)
                                        set a = 0.7
                                        set u=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)<a and not(IsUnitInGroup(t,udg_CastingUndhealGroup)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitTypeId(t)!='n006' and GetUnitTypeId(t)!='u006' then
                                                set a=GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)
                                                set u=t
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if u!=null then
                                            call GroupAddUnit(udg_CastingUndhealGroup,u)
                                            call IssueTargetOrder(GetAttacker(),"healingwave",u)
                                            call TriggerSleepAction(0.7)
                                            call GroupRemoveUnit(udg_CastingUndhealGroup,u)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set p = null
                                    endif
                                endif
                            else// i=='u009'
                            
                            
                                if GetUnitState(u,UNIT_STATE_MANA)>=34 then
                                    call TriggerSleepAction(0)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=35 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1000,null)
                                        set a = 0
                                        set y=null
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>a and GetUnitAbilityLevel(t,'BUsl')==0 and not(IsUnitInGroup(t,udg_CastingUndSleepGroup)) and IsUnitVisible(t,p) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Bvul')==0 and GetUnitAbilityLevel(t,'A06T')==0 then
                                                set y=t
                                                set a=GetUnitState(y,UNIT_STATE_LIFE)
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if y!=null then
                                            call GroupAddUnit(udg_CastingUndSleepGroup,y)
                                            call IssueTargetOrder(u,"sleep",y)
                                            call TriggerSleepAction(3)
                                            call GroupRemoveUnit(udg_CastingUndSleepGroup,y)
                                        endif
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set t = null
                                        set y = null
                                        set p = null
                                    endif
                                endif
                                
                                
                            endif
                        else
                            if i=='u00A' then
                                if GetUnitState(u,UNIT_STATE_MANA)>=5 then
                                    call TriggerSleepAction(0.5)
                                    if GetUnitState(u,UNIT_STATE_MANA)>=6 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                                        set g = CreateGroup()
                                        set j = CreateGroup()
                                        set p = GetOwningPlayer(u)
                                        set i = 0
                                        set s = 0
                                        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),800,null)
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            if not(IsUnitInGroup(t,udg_CastingUnhRageGroup)) and GetUnitAbilityLevel(t,'BUhf')==0 and IsUnitAlly(t,p) and (GetUnitState(t,UNIT_STATE_LIFE)>80 or GetUnitState(t,UNIT_STATE_LIFE)>0.5*GetUnitState(t,UNIT_STATE_MAX_LIFE)) and GetUnitLevel(t)>=i and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'A06T')==0 then
                                                if GetUnitLevel(t)==i then
                                                    call GroupAddUnit(j,t)
                                                    set s = s+1
                                                else
                                                    call GroupClear(j)
                                                    call GroupAddUnit(j,t)
                                                    set i = GetUnitLevel(t)
                                                    set s = 1
                                                endif
                                            endif
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        if i>0 then
                                            set t = FirstOfGroup(j)
                                            set i=GetRandomInt(1,s)
                                            set s=1
                                            loop
                                                exitwhen t==null
                                                if i==s then
                                                    call GroupAddUnit(udg_CastingUnhRageGroup,t)
                                                    call IssueTargetOrder(u,"unholyfrenzy",t)
                                                    call TriggerSleepAction(1)
                                                    call GroupRemoveUnit(udg_CastingUnhRageGroup,t)
                                                endif
                                                call GroupRemoveUnit(j,t)
                                                set t = FirstOfGroup(j)
                                                set s = s+1
                                            endloop
                                        endif
                                    endif
                                    call GroupClear(j)
                                    call DestroyGroup(j)
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set j = null
                                    set g = null
                                    set t = null
                                    set p = null
                                endif
                            else// i=='u01J'
                                call IssueImmediateOrder(GetAttacker(),"taunt")
                            endif
                        endif
                    endif
                endif
            endif

        endif
        
    endif
        
    set t = null
    set u = null
    set it = null
endfunction

//===========================================================================
function InitTrig_UnitAttacked takes nothing returns nothing
    set gg_trg_UnitAttacked = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_UnitAttacked, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg_UnitAttacked, function Trig_UnitAttacked_Actions )
endfunction

//===========================================================================
// Trigger: CreatedSummons
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_CreatedSummons_Conditions takes nothing returns boolean
    return true
endfunction

function Trig_CreatedSummons_Actions takes nothing returns nothing
    local unit u = GetSummoningUnit()
    local unit t = GetSummonedUnit()
    local integer id = GetUnitTypeId(t)
    //call DisplayTextToPlayer(Player(0),0,0,"SUMMONER MANE: "+GetUnitName(u))
    //call DisplayTextToPlayer(Player(0),0,0,"SUMMON: "+GetUnitName(t))
    if id!='n018' and id!='o000' and id!='e011' and id!='o00B' then
        if GetUnitAbilityLevel(u,'A0HR')>0 then// Палка скелетов из лавки нежити
            call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(GetUnitAbilityLevel(u,'A0HR'),u,t,false,false,false)
        else// Простые саммоны
            call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(0,u,t,false,false,false)
        endif
    endif
    set u = null
    set t = null
endfunction

//===========================================================================
function InitTrig_CreatedSummons takes nothing returns nothing
    set gg_trg_CreatedSummons = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_CreatedSummons, Condition( function Trig_CreatedSummons_Conditions ) )
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(0), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(6), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(7), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(8), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(9), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(10), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_CreatedSummons, Player(11), EVENT_PLAYER_UNIT_SUMMON, null)
    call TriggerAddAction( gg_trg_CreatedSummons, function Trig_CreatedSummons_Actions )
endfunction

//===========================================================================
// Trigger: UnitCastingSpell
//
// A01L ready, need R10K
//===========================================================================
//TESH.scrollpos=2286
//TESH.alwaysfold=0
function Trig_MageNecro_dmg takes nothing returns nothing
    local unit u = GetEnumUnit()
    if IsPlayerEnemy(udg_PlayerX,GetOwningPlayer(u)) then
        call UnitDamageTarget(udg_UnitX,u,15, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
    endif
    set u = null
endfunction

function Trig_DeGreid_Actions takes nothing returns nothing
    local unit u = GetSpellAbilityUnit()
    local integer i = 1
    local integer tl
    local integer ncl
    local integer nsn = 0
    local integer cost
    local integer id = GetUnitTypeId(u)
    local integer orkspell = 0
    local integer undspell = 0
    local boolean elfinvoff = false
    local integer hum = 0
    local integer elf = 0
    //local integer naga = 0
    local real x = GetUnitX(u)
    local real y = GetUnitY(u)
    local player p = GetOwningPlayer(u)
    local item it = UnitItemInSlot(u,0)
    
    call UnitRemoveAbility(u,'A0IQ')
    set i=1
    loop
        exitwhen i>udg_KataTowerCount
        if udg_KataTowerThrower[i]==u then
            //call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerThrower[i]=udg_KataTowerThrower[udg_KataTowerCount]
            call UnitRemoveAbility(udg_KataTowerTarget[i*4],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-1],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-2],'A0IQ')
            call UnitRemoveAbility(udg_KataTowerTarget[i*4-3],'A0IQ')
            set udg_KataTowerTarget[i*4] = udg_KataTowerTarget[udg_KataTowerCount*4]
            set udg_KataTowerTarget[i*4-1]=udg_KataTowerTarget[udg_KataTowerCount*4-1]
            set udg_KataTowerTarget[i*4-2]=udg_KataTowerTarget[udg_KataTowerCount*4-2]
            set udg_KataTowerTarget[i*4-3]=udg_KataTowerTarget[udg_KataTowerCount*4-3]
            set udg_KataTowerCount=udg_KataTowerCount-1
            set i = udg_KataTowerCount
        elseif udg_KataTowerThrower[i*4]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerThrower[i*4-1]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-1]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerThrower[i*4-2]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-2]=null
            set i = udg_KataTowerCount
        elseif udg_KataTowerThrower[i*4-3]==u then
            call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
            set udg_KataTowerTarget[i*4-3]=null
            set i = udg_KataTowerCount
        endif
        set i=i+1
    endloop
    set i=1
    
    call UnitRemoveItem(u,it)
    call SetItemPosition(it,0,0)
    loop
        exitwhen i>udg_UTN
        if id == udg_CreepTower[i] then
            set cost = i
        endif
        set i=i+1
    endloop
    set id = cost
    set cost = (cost-1)/3*3+1
    call SetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD)+udg_CreepCost[id]-udg_CreepCost[cost])
    
	set i = 1//Каннибализм
	loop
	    exitwhen i>udg_NagaBuildingNum
	    if udg_NagaBuildingU[i]==u then
            set nsn = i
            set ncl = GetUnitAbilityLevel(u,'A0B5')
            set i=udg_NagaBuildingNum
	    endif
	    set i=i+1
	endloop
    
    //set i = GetUnitAbilityLevel(u,'A06E')+GetUnitAbilityLevel(u,'A07G')+GetUnitAbilityLevel(u,'A0D0')
    set orkspell = GetUnitAbilityLevel(u,'A054')+GetUnitAbilityLevel(u,'A05P')
    set undspell = GetUnitAbilityLevel(u,'A0GI')
    set elfinvoff = GetUnitAbilityLevel(u,'A0GE')>0
    set hum = GetUnitAbilityLevel(u,'A0D0')
    set elf = GetUnitAbilityLevel(u,'A06E')+GetUnitAbilityLevel(u,'A07G')
    //set naga = GetUnitAbilityLevel(u,'A0B3')
    set tl = GetUnitAbilityLevel(u,'A0A4')
    call RemoveUnit(u)
    set u = CreateUnit(p,udg_CreepTower[cost],x,y,270)
    
    call UnitAddItem(u,it)
    call GroupAddUnit(udg_Constructed,u)
    if tl>0 then
        if udg_CreepTower[cost]=='e01E' then
            call SetUnitAbilityLevel(u,'A0A3',tl)
        else
            call SetUnitAbilityLevel(u,'A045',tl)
        endif
    endif
    if nsn>0 then
        call UnitAddAbility(u,'A0B4')
        call UnitAddAbility(u,'A0B3')
        call SetUnitAbilityLevel(u,'A0B3',ncl)
        if GetUnitAbilityLevel(u,'A0B3')>1 then
            call UnitAddAbility(u,'A080')
        endif
	    set udg_NagaBuildingU[nsn]=u
    endif
    
    
    if orkspell==1 then
        call UnitAddAbility(u,'A054')
    else
        if orkspell==2 then
            call UnitAddAbility(u,'A05P')
            call UnitAddAbility(u,'A054')
        endif
    endif
    if undspell>0 then
        call UnitAddAbility(u,'A0GI')
        call SetUnitAbilityLevel(u,'A0GI',undspell)
    endif
    if elfinvoff then
        call UnitAddAbility(u,'A0GD')
        call UnitAddAbility(u,'A0GE')
    else
        call UnitAddAbility(u,'A0GC')
    endif
    call UnitAddAbility(u,'A0D0')
    call SetUnitAbilityLevel(u,'A0D0',hum)
    if GetUnitAbilityLevel(u,'A07F')>0 then
        call UnitAddAbility(u,'A06E')
        call SetUnitAbilityLevel(u,'A06E',elf)
        if IsPassChosenByPlayer(GetPlayerSlotId(p)+1,10) then
            call SetUnitAbilityLevel(u,'A03I',elf)
            call SetUnitAbilityLevel(u,'A036',elf)
            call SetUnitAbilityLevel(u,'A038',elf)
            call SetUnitAbilityLevel(u,'A037',elf)
            call SetUnitAbilityLevel(u,'A03H',elf)
            call SetUnitAbilityLevel(u,'A03F',elf)
            call SetUnitAbilityLevel(u,'A07N',elf)
        endif
    else
        call UnitAddAbility(u,'A07G')
        call SetUnitAbilityLevel(u,'A07G',elf)
    endif
    
    if GetLocalPlayer()==p then
        call SelectUnit(u,true)
    endif
    set u = null
    set p = null
    set it = null
endfunction

function Trig_NagaCannibal_Actions takes nothing returns nothing
    local unit u = GetSpellAbilityUnit()
    local unit t = GetSpellTargetUnit()
    local integer Uvalue = 0
    local integer Tvalue = 0

    local integer id = GetUnitTypeId(u)
    local integer i = 1
    local integer k = 0
    local boolean b = false
    loop
        exitwhen i>udg_UTN or b
        if id == udg_CreepTower[i] then
	    set Uvalue = udg_CreepCost[i]
	    set b = true
        endif
        set i=i+1
    endloop

    set id = GetUnitTypeId(t)
    set i = 1
    set b = false
    loop
        exitwhen i>udg_UTN or b
        if id == udg_CreepTower[i] then
	    set Tvalue = udg_CreepCost[i]
	    set b = true
        endif
        set i=i+1
    endloop

    if Tvalue*2<=Uvalue then
	if GetUnitAbilityLevel(u,'A0B3')==21 then
	    call DisplayTextToPlayer(GetOwningPlayer(u),0,0,"|c0000ffffУже получен максимальный бонус|r")
	else
	    call UnitAddAbility(u,'A080')
	    set i=1
	    loop
		exitwhen i>udg_NagaBuildingNum
		if udg_NagaBuildingU[i]==u then
		    set udg_NagaBuildingPC[i]=udg_NagaBuildingPC[i]+Tvalue
		    set id=i
		endif
		if udg_NagaBuildingU[i]==t then
		    set k=udg_NagaBuildingPC[i]
		endif
		set i=i+1
	    endloop
	    set udg_NagaBuildingPC[id]=udg_NagaBuildingPC[id]+k
	    set id=udg_NagaBuildingPC[id]
	    set Tvalue = R2I(I2R(id)/I2R(Uvalue)*100+2.5)/5+1
	    if Tvalue>21 then
		set Tvalue=21
	    endif
	    call SetUnitAbilityLevel(u,'A0B3',Tvalue)
	    call KillUnit(t)
	    call UnitRemoveAbility(u,'A090')
    	    call UnitRemoveAbility(u,'A08F')
            call GroupRemoveUnit(udg_ConstructedTW,u)
    	    call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SoulDischarge1.mdx",u,"origin"))
	endif
    else
	call DisplayTextToPlayer(GetOwningPlayer(u),0,0,"|c0000ffffЦель должна быть в 2 раза дешевле кастера|r")
    endif

    set u=null
    set t=null
endfunction





function Trig_UnitCastingSpell_Actions takes nothing returns nothing
    local unit u = GetSpellAbilityUnit()
    local unit t = GetSpellTargetUnit()
    local unit u2
    local unit extraunit = null
    local unit mainunit = null
    local unit array ari
    local group g
    local group j
    local player p = GetOwningPlayer(u)
    local integer i = GetSpellAbilityId()
    local integer id = GetSpellAbilityId()
    local integer k
    local integer s
    local integer i2
    local real a
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local real r
    local boolean b
    local item it
    if GetUnitTypeId(u)=='e014' then
        call TriggerSleepAction(0)
        call KillUnit(u)
        set t = null
        set u = null
        set p = null
        return
    endif
    /*call DisplayTextToPlayer(Player(0),0,0,"'A0B8'="+I2S('A0B8'))
    call DisplayTextToPlayer(Player(0),0,0,"'A0B9'="+I2S('A0B9'))
    call DisplayTextToPlayer(Player(0),0,0,"'A0BA'="+I2S('A0BA'))
    call DisplayTextToPlayer(Player(0),0,0,"'A0BB'="+I2S('A0BB'))
    call DisplayTextToPlayer(Player(0),0,0,"'A0BC'="+I2S('A0BC'))
    call DisplayTextToPlayer(Player(0),0,0,"cast="+I2S(i))*/
    if i>='A0GJ' and i<='A0GY' then//ДУБЛИ СКИЛЛОВ ТРОНА НА ДРУГИЕ ХОТКЕИ
        if i>'A0GQ' then//GR-GY
            if i>'A0GU' then//GV-GY
                if i>'A0GW' then
                    if i=='A0GY' then
                        // EMPTY SLOT
                    else//i=='A0GX'
                        set i = 'A0FC'
                    endif
                else
                    if i=='A0GW' then
                        set i = 'A025'
                    else//i=='A0GV'
                        set i = 'A09K'
                    endif
                endif
            else//GR-GU
                if i>'A0GS' then
                    if i=='A0GU' then
                        set i = 'A0DO'
                    else//i=='A0GT'
                        set i = 'A043'
                    endif
                else
                    if i=='A0GS' then
                        set i = 'A01W'
                    else//i=='A0GR'
                        set i = 'A0AI'
                    endif
                endif
            endif
        else//GJ-GQ
            if i>'A0GM' then//GN-GQ
                if i>'A0GO' then
                    if i=='A0GQ' then
                        set i = 'A0G8'
                    else//i=='A0GP'
                        set i = 'A0G7'
                    endif
                else
                    if i=='A0GO' then
                        set i = 'A0DQ'
                    else//i=='A0GN'
                        set i = 'A066'
                    endif
                endif
            else//GJ-GM
                if i>'A0GK' then
                    if i=='A0GM' then
                        set i = 'A0GH'
                    else//i=='A0GL'
                        set i = 'A0FY'
                    endif
                else
                    if i=='A0GK' then
                        set i = 'A05Y'
                    else//i=='A0GJ'
                        set i = 'A05O'
                    endif
                endif
            endif
        endif
    elseif i=='A0HP' then
        set i = 'A069'
    elseif i=='A0HQ' then
        set i = 'A0CZ'
    elseif i>='A0I0' and i<='A0I7' then//ПРОКАЧКА СКИЛЛОВ ГЕРОЯ НАГ
        if GetUnitAbilityLevel(u,'A0DI')>GetPlayerTechCount(p,'R00E',true)+GetPlayerTechCount(p,'R00F',true)+GetPlayerTechCount(p,'R00G',true)+GetPlayerTechCount(p,'R00H',true)+GetPlayerTechCount(p,'R00I',true)+GetPlayerTechCount(p,'R00J',true)+GetPlayerTechCount(p,'R00K',true)+GetPlayerTechCount(p,'R00L',true) then
            set k = GetUnitAbilityLevel(u,id)
            if k==5 then
                call SetPlayerAbilityAvailable(p,id,false)
            elseif k==1 then
                if id<='A0I3' then
                    call SetPlayerAbilityAvailable(p,'A0HW'+id-'A0I0',true)
                else
                    call SetPlayerAbilityAvailable(p,'A0IA'+id-'A0I0'-4,true)
                endif
            endif
            call SetPlayerTechResearched(p,'R00E'+id-'A0I0',k)
            call UnitRemoveAbility(u,'A08F')
        else
            call IssueImmediateOrder(u,"stop")
            call DisplayTextToPlayer(p,0,0,"|cffffcc00Недостаточно опыта|r")
        endif
        //set i = GetPlayerSlotId(p)
        //if i<3 then
        //    call SetPlayerTechResearched(PlayerSlot(i*2+6),'R00E'+id-'A0I0',k)
        //else
        //    call SetPlayerTechResearched(PlayerSlot(i*2+1),'R00E'+id-'A0I0',k)
        //endif
    endif
    //call DisplayTextToPlayer(Player(0),0,0,"endup="+I2S(i))
    /*if u==udg_ThrouneCaster[GetPlayerSlotId(p)+1] then
        if GetUnitState(,UNIT_STATE_LIFE)>0 then
            set mainunit = udg_ThrouneCaster[GetPlayerSlotId(p)+1]
            set extraunit = udg_ThrouneExtra[GetPlayerSlotId(p)+1]
        endif
    elseif u==udg_ThrouneExtra[GetPlayerSlotId(p)+1] then
        set mainunit = udg_ThrouneExtra[GetPlayerSlotId(p)+1]
        set extraunit = udg_ThrouneCaster[GetPlayerSlotId(p)+1]
    endif*/
    //call DisplayTextToPlayer(Player(0),0,0,"udg_ThrouneCaster mana1="+I2S(R2I(GetUnitState(udg_ThrouneCaster[GetPlayerSlotId(p)+1],UNIT_STATE_MANA))))
    if IsPassChosenByPlayer(GetPlayerSlotId(GetOwningPlayer(u))+1,13) and (GetUnitTypeId(u) == 'H01E' or GetUnitTypeId(u) == 'H008' or GetUnitTypeId(u) == 'h01P') and (GetUnitTypeId(t)!='n012' or (i!='A107' and i!='A01M')) and udg_WaveGoing and GetPlayerSlotId(p)<6 then
    	call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SoulDischarge"+I2S(GetRandomInt(1,4))+".mdl",u,"origin"))
	    set r = GetRandomReal(0,360)
    	if t==null then
	        if not(x==0 and y==0) then
	            set u = CreateUnit(GetOwningPlayer(u),'o00I',x+200*Cos(r*bj_DEGTORAD),y+200*Sin(r*bj_DEGTORAD),0)
                call UnitApplyTimedLife(u,'BTLF',8)
	        endif
        else
            set u = CreateUnit(GetOwningPlayer(u),'o00K',GetUnitX(t)+200*Cos(r*bj_DEGTORAD),GetUnitY(t)+200*Sin(r*bj_DEGTORAD),0)
            call UnitApplyTimedLife(u,'BTLF',2)
        endif
        call UnitAddAbility(u,'A0A2')
        set u = GetSpellAbilityUnit()
        
        if (udg_ModNumber==0 or udg_ModNumber==2) and udg_Wave<11 then
    	    if t==null then
	            if not(x==0 and y==0) then
	                set u = CreateUnit(GetOwningPlayer(u),'o00I',-x-200*Cos(r*bj_DEGTORAD),y+200*Sin(r*bj_DEGTORAD),0)
                    call UnitApplyTimedLife(u,'BTLF',8)
	            endif
            else
                set u = CreateUnit(GetOwningPlayer(u),'o00K',-GetUnitX(t)-200*Cos(r*bj_DEGTORAD),GetUnitY(t)+200*Sin(r*bj_DEGTORAD),0)
                call UnitApplyTimedLife(u,'BTLF',2)
            endif
            call UnitAddAbility(u,'A0A2')
            set u = GetSpellAbilityUnit()
        endif
    endif


    if GetUnitAbilityLevel(u,'A063')==1 then
        if i<'A0F0' then
        
            if i<'A08P' then
                if i<'A05C' then
                    if i<'A01L' then
                        if i<'A014' then
                            if i<'A00Z' then
                                if i=='A00C' then
                                    set g = CreateGroup()
                                    set x = GetUnitX(t)
                                    set y = GetUnitY(t)
                                    set i = 1
                                    set s = 0
                                    call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+60) 
                                    call DestroyEffect(AddSpecialEffect("SoulRitual.mdx",x,y))
                    
                                    loop
                                        exitwhen i>udg_MageNecroC
                                        if udg_MageNecroU[i]==t then
                                            set s=i
                                        endif
                                        set i=i+1
                                    endloop
                                    if s==0 then
                                        call UnitAddAbility(t,'S00D')
                                        if GetUnitAbilityLevel(t,'A0BP')==0 then
                                            call UnitAddAbility(t,'A053')
                                        endif
                                        set udg_MageNecroC=udg_MageNecroC+1
                                        set udg_MageNecroU[udg_MageNecroC]=t
                                        set udg_MageNecroN[udg_MageNecroC]=25
                                    else
                                        call UnitRemoveAbility(t,'S00D')
                                        call UnitRemoveAbility(t,'B01P')
                                        call UnitAddAbility(t,'S00D')
                                        set udg_MageNecroN[s]=25
                                    endif
                    
                                    call GroupEnumUnitsInRange(g,x,y,240,null)
                                    set udg_UnitX = u
                                    set udg_PlayerX = GetOwningPlayer(u)
                                    call ForGroup(g,function Trig_MageNecro_dmg)
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g = null
                                else
                                    if i=='A00S' then
                                        call UnitAddAbility(u,'A01B')
                                        call GroupAddUnit(udg_WolfGroupEating,u)
                                        call GroupAddUnit(udg_WolfGroupEated,t)
                                    endif
                                endif
                            else
                                if i=='A00Z' then
                                    call UnitAddAbility(u,'A01B')
                                    call GroupAddUnit(udg_WolfGroupEating,u)
                                    call GroupAddUnit(udg_WolfGroupEated,t)
                                else
                                    if i=='A012' then// HUMAN
                                        set x = GetUnitX(u)
                                        set y = GetUnitY(u)
                                        set r = GetUnitFacing(u)
                                        set i = GetPlayerSlotId(p)+1
                                        call RemoveUnit(u)
                                        set u = CreateUnit(p,'H01G',x,y,r)
                                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                        //call SetHeroXP(u,200,false)
                                        if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                            call SetPlayerAbilityAvailable(p,'A0C0',true)
                                            call SetPlayerAbilityAvailable(p,'A0C1',true)
                                            call SetPlayerAbilityAvailable(p,'A0C2',true)
                                            set udg_PlCurrPassesForRace[i]=1
                                            call UnitAddAbility(u,'A0HJ')
                                            call UnitRemoveAbility(u,'A0HI')
                                            call UnitAddAbility(u,'A0HI')
                                            set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                            set udg_ThrouneWorker[i] = u
                                            set udg_RaceNumber[i]=1
                                            if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[1])
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                                if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                endif
                                                if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                endif
                                            endif
                                            set i=19
                                            if udg_ModNumberUnits==0 then
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                call SetPlayerAbilityAvailable(p,'A08Y',false)
                                            else
                                                set i=1
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+3
                                                endloop
                                                set i=1
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                    set i=i+3
                                                endloop
                                            endif
                                            call SetPlayerTechMaxAllowed(p,'R108',4)
                                            call SetPlayerTechMaxAllowed(p,'R10U',4)
                                            call SetPlayerTechMaxAllowed(p,'R10O',4)
                                            call SetPlayerTechMaxAllowed(p,'R106',4)
                                            //call SetPlayerTechMaxAllowed(p,'R001',4)
                                            set i = GetPlayerSlotId(p)+1
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A108')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A0AY')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05K')
                                            //call UnitAddAbility(udg_ThrouneCaster[i],'A069')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A106')
                                        endif
                                        call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                        if GetLocalPlayer()==p then
                                            call SelectUnit(u,true)
                                        endif
                                    endif
                                endif
                            endif
                        else
                            if i<'A018' then
                                if i=='A014' then// DEMON
                                    set x = GetUnitX(u)
                                    set y = GetUnitY(u)
                                    set r = GetUnitFacing(u)
                                    set i = GetPlayerSlotId(p)+1
                                    call RemoveUnit(u)
                                    set u = CreateUnit(p,'H01L',x,y,r)
                                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                    //call SetHeroXP(u,200,false)
                                    if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                        call SetPlayerAbilityAvailable(p,'A0CF',true)
                                        call SetPlayerAbilityAvailable(p,'A0CG',true)
                                        call SetPlayerAbilityAvailable(p,'A0CH',true)
                                        set udg_PlCurrPassesForRace[i]=6
                                        call UnitAddAbility(u,'A0HO')
                                        call UnitRemoveAbility(u,'A0HI')
                                        call UnitAddAbility(u,'A0HI')
                                        set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                        set udg_ThrouneWorker[i] = u
                                        set udg_RaceNumber[i]=6
                                        if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[6])
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                            if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            endif
                                            if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            endif
                                        endif
                                        set i=1
                                        if udg_ModNumberUnits==0 then
                                            loop
                                                exitwhen i>90
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+1
                                            endloop
                                            call SetPlayerAbilityAvailable(p,'A08Y',false)
                                        else
                                            set i=1
                                            loop
                                                exitwhen i>udg_UTN
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+3
                                            endloop
                                            set i=1
                                            loop
                                                exitwhen i>18
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                set i=i+3
                                            endloop
                                        endif
                    
                                        call SetPlayerTechMaxAllowed(p,'R10Z',4)
                                        call SetPlayerTechMaxAllowed(p,'R10V',4)
                                        call SetPlayerTechMaxAllowed(p,'R10W',4)
                                        call SetPlayerTechMaxAllowed(p,'R10G',4)
                                        //call SetPlayerTechMaxAllowed(p,'R105',4)
                                        set i = GetPlayerSlotId(p)+1
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A0BV')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A0B0')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A0B6')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A01V')
                                        //call UnitAddAbility(udg_ThrouneCaster[i],'A0CZ')
                                    endif
                                    call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                    if GetLocalPlayer()==p then
                                        call SelectUnit(u,true)
                                    endif
			                    else
                                    if i=='A017' then// ORC
                                        set x = GetUnitX(u)
                                        set y = GetUnitY(u)
                                        set r = GetUnitFacing(u)
                                        set i = GetPlayerSlotId(p)+1
                                        call RemoveUnit(u)
                                        //if udg_RaceNumber[i]==0 then
                                        set u = CreateUnit(p,'H01H',x,y,r)
                                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                        //call SetHeroXP(u,200,false)
                                        if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                            call SetPlayerAbilityAvailable(p,'A0C3',true)
                                            call SetPlayerAbilityAvailable(p,'A0C4',true)
                                            call SetPlayerAbilityAvailable(p,'A0C5',true)
                                            set udg_PlCurrPassesForRace[i]=2
                                            call UnitAddAbility(u,'A0HK')
                                            call UnitRemoveAbility(u,'A0HI')
                                            call UnitAddAbility(u,'A0HI')
                                            set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                            set udg_ThrouneWorker[i] = u
                                            set udg_RaceNumber[i]=2
                                            if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[2])
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                                if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                endif
                                                if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                endif
                                            endif
                                            set i=1
                                            if udg_ModNumberUnits==0 then
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                set i = 37
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                call SetPlayerAbilityAvailable(p,'A08Y',false)
                                            else
                                                set i=1
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+3
                                                endloop
                                                set i=1
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                    set i=i+3
                                                endloop
                                            endif
                                            call SetPlayerTechMaxAllowed(p,'R10A',4)
                                            call SetPlayerTechMaxAllowed(p,'R10B',4)
                                            call SetPlayerTechMaxAllowed(p,'R109',4)
                                            call SetPlayerTechMaxAllowed(p,'R10D',4)
                                            set i = GetPlayerSlotId(p)+1
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05A')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05C')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A109')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05E')
                                        endif
                                        call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                        if GetLocalPlayer()==p then
                                            call SelectUnit(u,true)
                                        endif
				                    endif
    			                endif
		                	else
                                if i=='A018' then// UNDEAD
                                    set x = GetUnitX(u)
                                    set y = GetUnitY(u)
                                    set r = GetUnitFacing(u)
                                    set i = GetPlayerSlotId(p)+1
                                    call RemoveUnit(u)
                                    set u = CreateUnit(p,'H01I',x,y,r)
                                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                    //call SetHeroXP(u,200,false)
                                    if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                        call SetPlayerAbilityAvailable(p,'A0C6',true)
                                        call SetPlayerAbilityAvailable(p,'A0C7',true)
                                        call SetPlayerAbilityAvailable(p,'A0C8',true)
                                        set udg_PlCurrPassesForRace[i]=3
                                        call UnitAddAbility(u,'A0HL')
                                        call UnitRemoveAbility(u,'A0HI')
                                        call UnitAddAbility(u,'A0HI')
                                        set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                        set udg_ThrouneWorker[i] = u
                                        set udg_RaceNumber[i]=3
                                        if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[3])
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                            if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            endif
                                            if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            endif
                                        endif
                                        set i=1
                                        if udg_ModNumberUnits==0 then
                                            loop
                                                exitwhen i>36
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+1
                                            endloop
                                            set i = 55
                                            loop
                                                exitwhen i>udg_UTN
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+1
                                            endloop
                                            call SetPlayerAbilityAvailable(p,'A08Y',false)
                                        else
                                            set i=1
                                            loop
                                                exitwhen i>udg_UTN
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+3
                                            endloop
                                            set i=1
                                            loop
                                                exitwhen i>18
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                set i=i+3
                                            endloop
                                        endif
                    
                                        call SetPlayerTechMaxAllowed(p,'R10M',4)
                                        call SetPlayerTechMaxAllowed(p,'R10Q',4)
                                        call SetPlayerTechMaxAllowed(p,'R10C',4)
                                        call SetPlayerTechMaxAllowed(p,'R10E',4)
                                        set i = GetPlayerSlotId(p)+1
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A074')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A05X')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A05D')
                                        call UnitAddAbility(udg_ThrouneCaster[i],'A01L')
                                    endif
                                    call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                    if GetLocalPlayer()==p then
                                        call SelectUnit(u,true)
                                    endif
                                else
                                    if i=='A019' then// NIGHT ELF
                                        set x = GetUnitX(u)
                                        set y = GetUnitY(u)
                                        set r = GetUnitFacing(u)
                                        set i = GetPlayerSlotId(p)+1
                                        call RemoveUnit(u)
                                        set u = CreateUnit(p,'H01J',x,y,r)
                                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                        //call SetHeroXP(u,200,false)
                                        if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                            call SetPlayerAbilityAvailable(p,'A0C9',true)
                                            call SetPlayerAbilityAvailable(p,'A0CA',true)
                                            call SetPlayerAbilityAvailable(p,'A0CB',true)
                                            set udg_PlCurrPassesForRace[i]=4
                                            call UnitAddAbility(u,'A0HM')
                                            call UnitRemoveAbility(u,'A0HI')
                                            call UnitAddAbility(u,'A0HI')
                                            set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                            set udg_ThrouneWorker[i] = u
                                            set udg_RaceNumber[i]=4
                                            if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[4])
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                                if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                endif
                                                if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                endif
                                            endif
                                            set i=1
                                            if udg_ModNumberUnits==0 then
                                                loop
                                                    exitwhen i>54
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                set i = 73
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                call SetPlayerAbilityAvailable(p,'A08Y',false)
                                            else
                                                set i=1
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+3
                                                endloop
                                                set i=1
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                    set i=i+3
                                                endloop
                                            endif
                        
                                            call SetPlayerTechMaxAllowed(p,'R10K',4)
                                            call SetPlayerTechMaxAllowed(p,'R10J',4)
                                            call SetPlayerTechMaxAllowed(p,'R10F',4)
                                            call SetPlayerTechMaxAllowed(p,'R10I',4)
                                            set i = GetPlayerSlotId(p)+1
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A02E')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05L')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A01M')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A01Z')
                                        endif
                                        call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                        if GetLocalPlayer()==p then
                                            call SelectUnit(u,true)
                                        endif
				                    endif
    			                endif
    		            	endif
		                endif
    	    	    else
    	    	        if i<'A025' then
    	    	    	    if i<'A01V' then
                                if i=='A01L' then
                                    set u2 = CreateUnit(p,'e019',GetUnitX(t),GetUnitY(t)-5,90)
                                    if GetUnitAbilityLevel(t,'A02Y')>0 and IsUnitEnemy(t,p) then
                                        call UnitAddAbility(u2,'A0AP')
                                        call SetUnitAbilityLevel(u2,'A0AP',GetUnitAbilityLevel(u,'A01L'))
                                    else
                                        call UnitAddAbility(u2,'A0AO')
                                        call SetUnitAbilityLevel(u2,'A0AO',GetUnitAbilityLevel(u,'A01L'))
                                    endif
                                    call UnitRemoveAbility(t,'BEer')
                                    call UnitRemoveAbility(t,'B025')
                                    call UnitRemoveAbility(t,'Bslo')
                                    call UnitRemoveAbility(t,'Bply')
                                    call IssueTargetOrder(u2,"banish",t)
                                    call UnitApplyTimedLife(u2,'BTLF',1)
                                else
                                    if i=='A01M' then
                                        if GetUnitTypeId(t)=='n012' then
                                            call DisplayTextToPlayer(GetOwningPlayer(u),0,0,"|cffffcc00Нельзя использовать на этого юнита|r")
                                            call IssueImmediateOrder(u,"stop")
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                        else
                                            set u2 = CreateUnit(p,'e019',GetUnitX(t),GetUnitY(t)-5,90)
                                            call UnitAddAbility(u2,'A08Z')
                                            if GetUnitAbilityLevel(t,'A02Y')>0 then
                                                call UnitAddAbility(u2,'A0AR')
                                                call SetUnitAbilityLevel(u2,'A0AR',GetUnitAbilityLevel(u,'A01M'))
                                            else
                                                call UnitAddAbility(u2,'A0AQ')
                                                call SetUnitAbilityLevel(u2,'A0AQ',GetUnitAbilityLevel(u,'A01M'))
                                            endif
                                            call IssueTargetOrder(u2,"entanglingroots",t)
                                            call UnitApplyTimedLife(u2,'BTLF',1)
                                        endif
                                    endif
                                endif
                            else
                                if i=='A01V' then
                                    set s = GetUnitAbilityLevel(u,'A01V')
                                    if GetUnitAbilityLevel(t,'S00I')==0 then
                                        set udg_DemonSlowNum=udg_DemonSlowNum+1
                                        set udg_DemonSlowUnit[udg_DemonSlowNum]=t
                                        set udg_DemonSlowTime[udg_DemonSlowNum]=50
                                        call UnitAddAbility(t,'S00I')
                                        call SetUnitAbilityLevel(t,'S00I',s)
                                        if s>5 then
                                            set udg_DemonSlowTime[udg_DemonSlowNum]=udg_DemonSlowTime[udg_DemonSlowNum]+(s-5)*10
                                        endif
                                    else
                                        set i = 1
                                        loop
                                            exitwhen i>udg_DemonSlowNum
                                            if udg_DemonSlowUnit[i]==t then
                                                call UnitRemoveAbility(t,'S00I')
                                                call UnitRemoveAbility(t,'B023')
                                                call UnitAddAbility(t,'S00I')
                                                call SetUnitAbilityLevel(t,'S00I',s)
                                                if s>5 then
                                                    set udg_DemonSlowTime[i]=udg_DemonSlowTime[i]+50
                                                endif
                                                set udg_DemonSlowTime[i]=udg_DemonSlowTime[i]+(s-5)*10
                                                set i = udg_DemonSlowNum
                                            endif
                                            set i = i+1
                                        endloop
                                    endif
                                else
                                    if i=='A01W' then
                                        set i = GetUnitAbilityLevel(t,'A06E')+GetUnitAbilityLevel(t,'A07G')+GetUnitAbilityLevel(u,id)
                                        if i>13 then
                                            set i=13
                                        endif
                                        if GetUnitAbilityLevel(t,'A06E')+GetUnitAbilityLevel(t,'A07G')==13 then
                                            call IssueImmediateOrder(u,"stop")
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Уже максимум стаков|r")
                                        else
                                            if GetUnitAbilityLevel(t,'A06E')>0 then
                                                call SetUnitAbilityLevel(t,'A06E',i)
                                            else
                                                call SetUnitAbilityLevel(t,'A07G',i)
                                            endif
                                            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIem\\AIemTarget.mdl",t,"chest"))
                                        endif
                                    endif
    			                endif
    		    	        endif
    		            else
    	    	    	    if i<'A043' then
    	    		            if i=='A025' then
                                    set i2 = 0
                                    set s = GetUnitTypeId(t)
                                    set i = 1
                                    set k = 0
                                    set b = false
                                    loop
                                        exitwhen i>udg_UTN or b
                                        if s == udg_CreepTower[i] then
                                        set i2 = udg_CreepCost[i]
                                        set b = true
                                        endif
                                        set i=i+1
                                    endloop

                                    if GetUnitAbilityLevel(t,'A0B3')==21 then
                                        call IssueImmediateOrder(u,"stop")
                                        if GetUnitAbilityLevel(u,id)==1 then
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA)+3)
                                        else
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA)+2)
                                        endif
                                        call DisplayTextToPlayer(p,0,0,"|c0000ffffУже получен максимальный бонус|r")
                                    else
                                        call UnitAddAbility(t,'A080')
                                        set i=1
                                        loop
                                            exitwhen i>udg_NagaBuildingNum
                                            if udg_NagaBuildingU[i]==t then
                                                if GetUnitAbilityLevel(u,id)==1 then
                                                    set udg_NagaBuildingPC[i]=udg_NagaBuildingPC[i]+20
                                                else
                                                    set udg_NagaBuildingPC[i]=udg_NagaBuildingPC[i]+10*GetUnitAbilityLevel(u,id)
                                                endif
                                                set s=i
                                            endif
                                            set i=i+1
                                        endloop
                                        set i2 = R2I(I2R(udg_NagaBuildingPC[s])/I2R(i2)*100+2.5)/5+1
                                        if i2>21 then
                                            set i2=21
                                        endif
                                        call SetUnitAbilityLevel(t,'A0B3',i2)
                                        call UnitRemoveAbility(t,'A090')
                                        call DestroyEffect(AddSpecialEffectTarget("war3mapImported\\SoulDischarge1.mdx",t,"origin"))
                                    endif
                                else
				                    if i=='A02E' then
                                        set u2 = CreateUnit(p,'e019',x,y,0)
                                        call UnitAddAbility(u2,'A028')
                                        call SetUnitAbilityLevel(u2,'A028',GetUnitAbilityLevel(u,'A02E'))
                                        call IssueImmediateOrderById(u2,852269)
                                        call UnitApplyTimedLife(u2,'BTLF',1)
				                    endif
    			                endif
			                else
                                if i=='A043' then
                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                    set s = 5+7*GetUnitAbilityLevel(u,id)
                                    set b = true
                                    set i = 1
                                    loop
                                        exitwhen i>udg_ElfUnseenNum
                                        if udg_ElfUnseenUnit[i]==t then
                                            set udg_ElfUnseenTime[i]=udg_ElfUnseenTime[i]+s
                                            set i = udg_ElfUnseenNum
                                            set b = false
                                        endif
                                        set i=i+1
                                    endloop
                                    if b then
                                        call UnitAddAbility(t,'A0AU')
                                        set udg_ElfUnseenNum=udg_ElfUnseenNum+1
                                        set udg_ElfUnseenUnit[udg_ElfUnseenNum]=t
                                        set udg_ElfUnseenTime[udg_ElfUnseenNum]=s
                                    endif
			                    else
                                    if i=='A05A' then
                                        set u2 = CreateUnit(p,'o00J',x,y,270)
                                        call SetUnitAbilityLevel(u2,'A07P',GetUnitAbilityLevel(u,'A05A'))
                                        call UnitApplyTimedLife(u2,'BTLF',9.2)
                                    endif
                                endif
                            endif
                        endif
                    endif
    	        else
    	    	    if i<'A05X' then


    	    	        if i<'A05L' then
    	    	        	if i<'A05E' then
                                if i=='A05C' then
                                    set u2 = CreateUnit(p,'e019',x,y,0)
                                    call UnitAddAbility(u2,'A05B')
                                    call SetUnitAbilityLevel(u2,'A05B',GetUnitAbilityLevel(u,'A05C'))
                                    call IssueImmediateOrder(u2,"howlofterror")
                                    call UnitApplyTimedLife(u2,'BTLF',1)
			                    else
    	    		                if i=='A05D' then
    				                    /*if GetUnitState(t,UNIT_STATE_MAX_MANA)>0 then
    				                        call SetUnitState(t,UNIT_STATE_MANA,GetUnitState(t,UNIT_STATE_MANA)+50+(GetUnitAbilityLevel(u,'A05D')-1)/2*50)
    				                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl",t,"chest"))
    				                    else
                                            if GetUnitAbilityLevel(u,'A05D')<=5 then
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-(GetUnitAbilityLevel(u,'A05D')/2))
                                            else
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                            endif
            			                    call IssueImmediateOrder(u,"stop")
				                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Нужна цель с маной|r")
    				                    endif*/
                                        if GetUnitAbilityLevel(t,'S00T')==0 then
                                            set udg_UndeadSpellManaCount=udg_UndeadSpellManaCount+1
                                            set udg_UndeadSpellManaUnit[udg_UndeadSpellManaCount]=t
                                            set udg_UndeadSpellManaHealth[udg_UndeadSpellManaCount]=0
                                            set udg_UndeadSpellManaDmg[udg_UndeadSpellManaCount]=0
                                            //set udg_UndeadSpellManaTime[udg_UndeadSpellManaCount]=100
                                            call UnitAddAbility(t,'A0IW')
                                            if GetUnitAbilityLevel(u,'A05D')>=5 then
                                                call SetUnitAbilityLevel(t,'A0IW',2)
                                            endif
                                            call UnitAddAbility(t,'A0IU')
                                            call UnitAddAbility(t,'S00T')
                                            call SetUnitAbilityLevel(t,'S00T',GetUnitAbilityLevel(u,'A05D'))
                                        else
                                            if GetUnitAbilityLevel(u,'A05D')<=3 then
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                            else
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                            endif
            			                    call IssueImmediateOrder(u,"stop")
				                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Цель уже носит паразита или является им|r")
                                        endif
    			                    endif
			                    endif
                            else
                                if i=='A05E' then
                                    set u2 = CreateUnit(p,'e019',GetUnitX(u),GetUnitY(u),0)
                                    call UnitAddAbility(u2,'A08Z')
                                    if GetUnitAbilityLevel(t,'A02Y')>0 then
                                        call UnitAddAbility(u2,'A0AN')
                                        call SetUnitAbilityLevel(u2,'A0AN',GetUnitAbilityLevel(u,'A05E'))
                                    else
                                        call UnitAddAbility(u2,'A0AK')
                                        call SetUnitAbilityLevel(u2,'A0AK',GetUnitAbilityLevel(u,'A05E'))
                                    endif
                                    call IssueTargetOrderById(u2,852231,t)
                                    call UnitApplyTimedLife(u2,'BTLF',1)
                                else
    	    		                if i=='A05K' then
                                        set s = GetUnitAbilityLevel(u,'A05K')
                                        set g = CreateGroup()
                                        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl",x,y))
                                        call GroupEnumUnitsInRange(g,x,y,600,null)
                                        set u2 = FirstOfGroup(g)
                                        loop
                                            exitwhen u2==null
                                            if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitEnemy(u2,p) and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<325 then
                                                set t = CreateUnit(p,'e019',GetUnitX(u2)+5,GetUnitY(u2),0)
                                                call UnitDamageTarget(u,u2,s*5,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                                call UnitAddAbility(t,'S00H')
                                                call SetUnitAbilityLevel(t,'S00H',s)
                                                call IssueTargetOrder(t,"cripple",u2)
                                                call UnitApplyTimedLife(t,'BTLF',2)
                                            endif
                                            call GroupRemoveUnit(g,u2)
                                            set u2=FirstOfGroup(g)
                                        endloop
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g=null
    			                    endif
			                    endif
    		    	        endif
    		            else
    	    	    	    if i<'A05O' then
                                if i=='A05L' then
                                    set s = GetUnitAbilityLevel(u,'A05L')
                                    set g = CreateGroup()
                                    call GroupEnumUnitsInRange(g,GetSpellTargetX(),GetSpellTargetY(),650,null)
                                    set u2 = FirstOfGroup(g)
                                    loop
                                        exitwhen u2==null
                                        if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitEnemy(u2,p) and GetUnitAbilityLevel(u2,'A06T')==0 and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<=600 then
                                            set t = CreateUnit(p,'e019',x,y-5,90)
                                            call UnitAddAbility(t,'A027')
                                            call SetUnitAbilityLevel(t,'A027',s)
                                            call IssueTargetOrder(t,"faeriefire",u2)
                                            call UnitApplyTimedLife(t,'BTLF',2)
                                        endif
                                        call GroupRemoveUnit(g,u2)
                                        set u2=FirstOfGroup(g)
                                    endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g=null
			                    else
    	    		                if i=='A05N' then
                                        set x = GetUnitX(t)
                                        set y = GetUnitY(t)
                                        set a = GetUnitX(u)
                                        set r = GetUnitY(u)
                                        call SetUnitPosition(t,10500,-9800)
                                        call SetUnitPosition(u,x,y)
                                        call SetUnitPosition(t,a,r)
    			                    endif
			                    endif
			                else
                                if i=='A05O' then
                                    if GetUnitAbilityLevel(t,'A054')==1 then
                                        call IssueImmediateOrder(u,"stop")
                                        if GetUnitAbilityLevel(u,id)<6 then
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-GetUnitAbilityLevel(u,id)/2)
                                        else
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                        endif
                                        call DisplayTextToPlayer(p,0,0,"|cffffcc00Воин уже в ярости|r")
                                    else
                                        call UnitAddAbility(t,'A054')
                                        if GetUnitAbilityLevel(u,id)>=5 then
                                            call UnitAddAbility(t,'A05P')
                                        endif
                                    endif
                                else
                                    if i=='A05Q' then// PRODAJA
                                    
                                        set u2 = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),0)
                                        if IsUnitInGroup(t,udg_ConstructedTW) then
                                            call UnitAddAbility(u2,'A07C')
                                            call UnitApplyTimedLife(u2,'BTLF',1)
                                            call IssueTargetOrderById(u2,852665,t)
                                        else
                                            if GetUnitTypeId(t)=='h00P' or GetUnitAbilityLevel(t,'A05Z')==1 or GetUnitAbilityLevel(t,'A0DI')==1 then
                                                call DisplayTextToPlayer(p,0,0,"|cffffcc00Нельзя продать этого юнита|r")
                                            else
                                                if GetUnitTypeId(t)=='h00D' then
                                                    call UnitAddAbility(u2,'A04Z')
                                                    call UnitApplyTimedLife(u2,'BTLF',1)
                                                    call IssueTargetOrderById(u2,852665,t)
                                                else
                                                    call UnitAddAbility(u2,'A07D')
                                                    call UnitApplyTimedLife(u2,'BTLF',1)
                                                    call IssueTargetOrderById(u2,852665,t)
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'A074' then
                            if i<'A066' then
                                if i=='A05X' then
                                    set a = 5+15*GetUnitAbilityLevel(GetSpellAbilityUnit(),'A05X')
                                    set r = 0.5
                                    set g = CreateGroup()
                                    set u2 = CreateUnit(p,'u00K',x,y,0)
                                    call KillUnit(u2)
                    
                                    if GetUnitAbilityLevel(GetSpellAbilityUnit(),'A05X')>=5 then
                                        set r=0.4
                                    endif
                    
                                    call GroupEnumUnitsInRange(g,x,y,355,null)
                                    set u2 = FirstOfGroup(g)
                                    loop
                                        exitwhen u2==null
                                        if GetUnitState(u2,UNIT_STATE_LIFE)>r*GetUnitState(u2,UNIT_STATE_MAX_LIFE) and IsUnitEnemy(u2,p) and GetUnitAbilityLevel(u2,'A06T')==0 then
                                            if GetUnitState(u2,UNIT_STATE_LIFE)-a>r*GetUnitState(u2,UNIT_STATE_MAX_LIFE) then
                                                call SetUnitState(u2,UNIT_STATE_LIFE,GetUnitState(u2,UNIT_STATE_LIFE)-a)
                                            else
                                                call SetUnitState(u2,UNIT_STATE_LIFE,r*GetUnitState(u2,UNIT_STATE_MAX_LIFE))
                                            endif
                                        endif
                                        call GroupRemoveUnit(g,u2)
                                        set u2=FirstOfGroup(g)
                                    endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g=null
                                else
                                    if i=='A05Y' then
                                        if GetUnitTypeId(t)=='h00C' then
                                            set p = GetOwningPlayer(t)
                                            set x = GetUnitX(t)
                                            set y = GetUnitY(t)
                                            set r = GetUnitFacing(t)
                                            set s = Trig_StartUpgr_ActionsDo(t,false)
                                            set i = 0
                                            set k = 1
                                            loop
                                                exitwhen k>udg_NagaBuildingNum or i>0
                                                if udg_NagaBuildingU[k]==t then
                                                    set i = k
                                                endif
                                                set k=k+1
                                            endloop
                                            set it = UnitItemInSlot(t,0)
                                            call UnitRemoveItem(t,it)
                                            call RemoveUnit(t)
                                            set t = CreateUnit(p,'h01O',x,y,r)
                                            call UnitAddItem(t,it)
                                            call Trig_StartConstr_ActionsDo(t)
                                            call GroupAddUnit(udg_Constructed,t)
                                            call Trig_EndUpgr_ActionsDo(t,i,s)
                                            set it = null
                                        else
                                            call IssueImmediateOrder(u,"stop")
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+9)
                                            call DisplayTextToPlayer(p,0,0,"|c0000ffffЦелью должен быть ''Боевой кодой''.|r")
                                        endif
                                    endif
                                endif
                            else
                                if i=='A066' then
                                    set k = GetPlayerSlotId(p)
                                    if k<3 then
                                        set s=6+k*2
                                    else
                                        set s=1+k*2
                                    endif
                                    //set u=CreateUnit(PlayerSlot(s),'u100'+GetUnitAbilityLevel(u,id),x,y,270)
                                    set u2=CreateUnit(p,'u100'+GetUnitAbilityLevel(u,id),x,y,270)
                                    if (GetLocalPlayer() == p) then
                                        call ClearSelection()
                                        call SelectUnit(u2, true)
                                    endif
                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Demon\\DarkConversion\\ZombifyTarget.mdl",x,y))
                                    //call SetUnitColor(u,udg_PlayerColor[k+1])
                                    call UnitApplyTimedLife(u2,'BTLF',12)
                                else
                                    if i=='A069' then
                                        call SetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD)+2+GetUnitAbilityLevel(u,id)*8)
                                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Transmute\\PileofGold.mdl",u,"overhead"))
                                    endif
                                endif
                            endif
                        else
                            if i<'A078' then
                                if i=='A074' then
                                    set u2 = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                                    call UnitAddAbility(u2,'A068')
                                    call SetUnitAbilityLevel(u2,'A068',GetUnitAbilityLevel(u,'A074'))
                                    call IssuePointOrder(u2,"healingspray",x,y)
                                    call UnitApplyTimedLife(u2,'BTLF',8)
                                else
                                    if i=='A077' then
                                        call GroupAddUnit(udg_ElfUnderRej,t)
                                        call UnitAddAbility(t,'A01K')
                                    endif
                                endif
                            else
                                if i=='A078' then// RANDOM

                                    set k = GetRandomInt(1,6)
                                    set x = GetUnitX(u)
                                    set y = GetUnitY(u)
                                    set r = GetUnitFacing(u)
                                    set i = GetPlayerSlotId(p)+1
                                    call RemoveUnit(u)
                                    if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                        if k==1 then
                                            call SetPlayerAbilityAvailable(p,'A0C0',true)
                                            call SetPlayerAbilityAvailable(p,'A0C1',true)
                                            call SetPlayerAbilityAvailable(p,'A0C2',true)
                                            set u = CreateUnit(p,'H01G',x,y,r)
                                            set udg_PlCurrPassesForRace[i]=1
                                            call UnitAddAbility(u,'A0HJ')
                                            call UnitRemoveAbility(u,'A0HI')
                                            call UnitAddAbility(u,'A0HI')
                                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                            call SetPlayerTechMaxAllowed(p,'R108',4)
                                            call SetPlayerTechMaxAllowed(p,'R10U',4)
                                            call SetPlayerTechMaxAllowed(p,'R10O',4)
                                            call SetPlayerTechMaxAllowed(p,'R106',4)
                                            //call SetPlayerTechMaxAllowed(p,'R001',4)
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A108')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A0AY')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A05K')
                                            //call UnitAddAbility(udg_ThrouneCaster[i],'A069')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A106')
                                        else
                                            if k==2 then
                                                call SetPlayerAbilityAvailable(p,'A0C3',true)
                                                call SetPlayerAbilityAvailable(p,'A0C4',true)
                                                call SetPlayerAbilityAvailable(p,'A0C5',true)
                                                set u = CreateUnit(p,'H01H',x,y,r)
                                                set udg_PlCurrPassesForRace[i]=2
                                                call UnitAddAbility(u,'A0HK')
                                                call UnitRemoveAbility(u,'A0HI')
                                                call UnitAddAbility(u,'A0HI')
                                                call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                                call SetPlayerTechMaxAllowed(p,'R10A',4)
                                                call SetPlayerTechMaxAllowed(p,'R10B',4)
                                                call SetPlayerTechMaxAllowed(p,'R109',4)
                                                call SetPlayerTechMaxAllowed(p,'R10D',4)
                                                call UnitAddAbility(udg_ThrouneCaster[i],'A05A')
                                                call UnitAddAbility(udg_ThrouneCaster[i],'A05C')
                                                call UnitAddAbility(udg_ThrouneCaster[i],'A109')
                                                call UnitAddAbility(udg_ThrouneCaster[i],'A05E')
                                                call SetPlayerAbilityAvailable(p,'A05A',true)
                                                call SetPlayerAbilityAvailable(p,'A05C',true)
                                                call SetPlayerAbilityAvailable(p,'A109',true)
                                                call SetPlayerAbilityAvailable(p,'A05E',true)
                                            else
                                                if k==3 then
                                                    call SetPlayerAbilityAvailable(p,'A0C6',true)
                                                    call SetPlayerAbilityAvailable(p,'A0C7',true)
                                                    call SetPlayerAbilityAvailable(p,'A0C8',true)
                                                    set u = CreateUnit(p,'H01I',x,y,r)
                                                    set udg_PlCurrPassesForRace[i]=3
                                                    call UnitAddAbility(u,'A0HL')
                                                    call UnitRemoveAbility(u,'A0HI')
                                                    call UnitAddAbility(u,'A0HI')
                                                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                                    call SetPlayerTechMaxAllowed(p,'R10M',4)
                                                    call SetPlayerTechMaxAllowed(p,'R10Q',4)
                                                    call SetPlayerTechMaxAllowed(p,'R10C',4)
                                                    call SetPlayerTechMaxAllowed(p,'R10E',4)
                                                    call UnitAddAbility(udg_ThrouneCaster[i],'A074')
                                                    call UnitAddAbility(udg_ThrouneCaster[i],'A05X')
                                                    call UnitAddAbility(udg_ThrouneCaster[i],'A05D')
                                                    call UnitAddAbility(udg_ThrouneCaster[i],'A01L')
                                                else
                                                    if k==4 then
                                                        call SetPlayerAbilityAvailable(p,'A0C9',true)
                                                        call SetPlayerAbilityAvailable(p,'A0CA',true)
                                                        call SetPlayerAbilityAvailable(p,'A0CB',true)
                                                        set u = CreateUnit(p,'H01J',x,y,r)
                                                        set udg_PlCurrPassesForRace[i]=4
                                                        call UnitAddAbility(u,'A0HM')
                                                        call UnitRemoveAbility(u,'A0HI')
                                                        call UnitAddAbility(u,'A0HI')
                                                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                                        call SetPlayerTechMaxAllowed(p,'R10K',4)
                                                        call SetPlayerTechMaxAllowed(p,'R10J',4)
                                                        call SetPlayerTechMaxAllowed(p,'R10F',4)
                                                        call SetPlayerTechMaxAllowed(p,'R10I',4)
                                                        call UnitAddAbility(udg_ThrouneCaster[i],'A02E')
                                                        call UnitAddAbility(udg_ThrouneCaster[i],'A05L')
                                                        call UnitAddAbility(udg_ThrouneCaster[i],'A01M')
                                                        call UnitAddAbility(udg_ThrouneCaster[i],'A01Z')
                                                        call SetPlayerAbilityAvailable(p,'A02E',true)
                                                        call SetPlayerAbilityAvailable(p,'A05L',true)
                                                        call SetPlayerAbilityAvailable(p,'A01M',true)
                                                        call SetPlayerAbilityAvailable(p,'A01Z',true)
                                                    else
                                                        if k==5 then
                                                            call SetPlayerAbilityAvailable(p,'A0CC',true)
                                                            call SetPlayerAbilityAvailable(p,'A0CD',true)
                                                            call SetPlayerAbilityAvailable(p,'A0CE',true)
                                                            set u = CreateUnit(p,'H01K',x,y,r)
                                                            set udg_PlCurrPassesForRace[i]=5
                                                            call UnitAddAbility(u,'A0HN')
                                                            call UnitRemoveAbility(u,'A0HI')
                                                            call UnitAddAbility(u,'A0HI')
                                                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                                            call SetPlayerTechMaxAllowed(p,'R10N',4)
                                                            call SetPlayerTechMaxAllowed(p,'R10R',4)
                                                            call SetPlayerTechMaxAllowed(p,'R107',4)
                                                            call SetPlayerTechMaxAllowed(p,'R10T',4)
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A09F')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A08Q')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A107')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A09L')
                                                        else
                                                            call SetPlayerAbilityAvailable(p,'A0CF',true)
                                                            call SetPlayerAbilityAvailable(p,'A0CG',true)
                                                            call SetPlayerAbilityAvailable(p,'A0CH',true)
                                                            set u = CreateUnit(p,'H01L',x,y,r)
                                                            set udg_PlCurrPassesForRace[i]=6
                                                            call UnitAddAbility(u,'A0HO')
                                                            call UnitRemoveAbility(u,'A0HI')
                                                            call UnitAddAbility(u,'A0HI')
                                                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                                            call SetPlayerTechMaxAllowed(p,'R10Z',4)
                                                            call SetPlayerTechMaxAllowed(p,'R10V',4)
                                                            call SetPlayerTechMaxAllowed(p,'R10W',4)
                                                            call SetPlayerTechMaxAllowed(p,'R10G',4)
                                                            //call SetPlayerTechMaxAllowed(p,'R105',4)
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A0BV')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A0B0')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A0B6')
                                                            call UnitAddAbility(udg_ThrouneCaster[i],'A01V')
                                                            //call UnitAddAbility(udg_ThrouneCaster[i],'A0CZ')
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        endif
                                        //call SetHeroXP(u,200,false)
                                        set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                        set udg_ThrouneWorker[i] = u
                                        call SetUnitState(udg_ThrouneCaster[i],UNIT_STATE_MANA,GetUnitState(udg_ThrouneCaster[i],UNIT_STATE_MANA)+1)
                                        set udg_RaceNumber[i]=k
                                        if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[k])
                                            call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                            if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                            endif
                                            if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            else
                                                call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                            endif
                                        endif
                                        set i=1
                                        if udg_ModNumberUnits==0 then

                                            loop
                                                exitwhen i>udg_UTN
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+3
                                            endloop
                                            set i = (k-1)*18+1
                                            loop
                                                exitwhen i>k*18
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],999)
                                                set i=i+3
                                            endloop
                                            call SetPlayerAbilityAvailable(p,'A08Y',false)
                                        else
                                            set i=1
                                            loop
                                                exitwhen i>udg_UTN
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+3
                                            endloop
                                            set i=1
                                            loop
                                                exitwhen i>18
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                set i=i+3
                                            endloop
                                        endif
                                    else
                                        if k==1 then
                                            set u = CreateUnit(p,'H01G',x,y,r)
                                        elseif k==2 then
                                            set u = CreateUnit(p,'H01H',x,y,r)
                                        elseif k==3 then
                                            set u = CreateUnit(p,'H01I',x,y,r)
                                        elseif k==4 then
                                            set u = CreateUnit(p,'H01J',x,y,r)
                                        elseif k==5 then
                                            set u = CreateUnit(p,'H01K',x,y,r)
                                        else
                                            set u = CreateUnit(p,'H01L',x,y,r)
                                        endif
                                    endif
                                    call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                    if GetLocalPlayer()==p then
                                        call SelectUnit(u,true)
                                    endif
            
                                else
                                    if i=='A07T' then// NAGA
                                        set x = GetUnitX(u)
                                        set y = GetUnitY(u)
                                        set r = GetUnitFacing(u)
                                        set i = GetPlayerSlotId(p)+1
                                        call RemoveUnit(u)
                                        set u = CreateUnit(p,'H01K',x,y,r)
                                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum-1)
                                        //call SetHeroXP(u,200,false)
                                        if FirstOfGroup(udg_ThrouneWorkersGroup[i])==null then
                                            call SetPlayerAbilityAvailable(p,'A0CC',true)
                                            call SetPlayerAbilityAvailable(p,'A0CD',true)
                                            call SetPlayerAbilityAvailable(p,'A0CE',true)
                                            set udg_PlCurrPassesForRace[i]=5
                                            call UnitAddAbility(u,'A0HN')
                                            call UnitRemoveAbility(u,'A0HI')
                                            call UnitAddAbility(u,'A0HI')
                                            set udg_ThrouneWorkersGroup[i]=CreateGroup()
                                            set udg_ThrouneWorker[i] = u
                                            set udg_RaceNumber[i]=5
                                            if udg_RaceNumber[3-i/4*6+i]!=0 and (udg_ModNumber==0 or udg_ModNumber==3) then
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,i+2+i/4,udg_RaceIcon[5])
                                                call MultiboardSetItemIconNew(udg_Multiboard,1,(3-i/4*6+i)+2+(3-i/4*6+i)/4,udg_RaceIcon[udg_RaceNumber[3-i/4*6+i]])
                                                if GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(i-1),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+1),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(i/4*3+2),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[3-i/4*6+i]]+"|r")
                                                endif
                                                if GetPlayerSlotState(PlayerSlot(2-i/4*6+i)) == PLAYER_SLOT_STATE_PLAYING then
                                                    call DisplayTextToPlayer(PlayerSlot(2-i/4*6+i),0,0,"|c0000ffffРаса вашего соперника - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                else
                                                    call DisplayTextToPlayer(PlayerSlot(3-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(4-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                    call DisplayTextToPlayer(PlayerSlot(5-i/4*3),0,0,"|c0000ffffРаса соперника вашего тиммейта - "+udg_RaceNumName[udg_RaceNumber[i]]+"|r")
                                                endif
                                            endif
                                            set i=1
                                            if udg_ModNumberUnits==0 then

                                                loop
                                                    exitwhen i>72
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                set i = 91
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+1
                                                endloop
                                                call SetPlayerAbilityAvailable(p,'A08Y',false)
                                            else
                                                set i=1
                                                loop
                                                    exitwhen i>udg_UTN
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+3
                                                endloop
                                                set i=1
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                    set i=i+3
                                                endloop
                                            endif
                        
                                            call SetPlayerTechMaxAllowed(p,'R10N',4)
                                            call SetPlayerTechMaxAllowed(p,'R10R',4)
                                            call SetPlayerTechMaxAllowed(p,'R107',4)
                                            call SetPlayerTechMaxAllowed(p,'R10T',4)
                                            set i = GetPlayerSlotId(p)+1
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A09F')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A08Q')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A107')
                                            call UnitAddAbility(udg_ThrouneCaster[i],'A09L')
                                        endif
                                        call GroupAddUnit(udg_ThrouneWorkersGroup[i],u)
                                        if GetLocalPlayer()==p then
                                            call SelectUnit(u,true)
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
    	    else
                if i<'A0B6' then
                    if i<'A09K' then
                        if i<'A090' then
                            if i<'A08X' then
                                if i=='A08P' and not(udg_WaveGoing) and not(udg_ReadyWorker[GetPlayerSlotId(GetOwningPlayer(u))+1]) then// GOTOV
                                    set i = GetPlayerSlotId(GetOwningPlayer(u))+1
                                    set k = 1
                                    set b = true

                                    set udg_ReadyWorker[i]=true

                                    if udg_ModNumber==0 or udg_ModNumber==3 then
                                        call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+i+i/4, "|c0000ff11Да|r")
                                        loop
                                            exitwhen k>6 or not(b)
                                            if udg_ReadyWorker[k]==false and udg_Lives[k]>0 then
                                                set b = false
                                            endif
                                            set k=k+1
                                        endloop
                                    else
                                        if udg_ModNumber==2 then
                                            if i<4 then
                                                loop
                                                    exitwhen k>3
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlay[k]  then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                                if b then
                                                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c0000ff11Да|r")
                                                endif
                                                loop
                                                    exitwhen k>6 or not(b)
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlay[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                            else
                                                set k = 4
                                                loop
                                                    exitwhen k>6
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlay[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                                if b then
                                                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c0000ff11Да|r")
                                                endif
                                                set k = 1
                                                loop
                                                    exitwhen k>3 or not(b)
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlay[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                            endif
                                            set k = 1
                                        else //udg_ModNumber==1
                                            if i<4 then
                                                loop
                                                    exitwhen k>3
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlayForTA[k]  then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                                if b then
                                                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c0000ff11Да|r")
                                                endif
                                                loop
                                                    exitwhen k>6 or not(b)
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlayForTA[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                             else
                                                set k = 4
                                                loop
                                                    exitwhen k>6
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlayForTA[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                                if b then
                                                    call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c0000ff11Да|r")
                                                endif
                                                set k = 1
                                                loop
                                                    exitwhen k>3 or not(b)
                                                    if udg_ReadyWorker[k]==false and udg_BooleanPlayForTA[k] then
                                                        set b = false
                                                    endif
                                                    set k=k+1
                                                endloop
                                            endif
                                            set k = 1
                                        endif
                                    endif

                                    if b then
                                        call TimerStart(udg_TimerWave,0.1,false,null)
                                    else
                                        call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A08P',false)
                                        call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A0A5',true)
                                    endif
                                else
                                    if i=='A08Q' then
                                        set u2 = CreateUnit(p,'e019',x-5,y,0)
                                        call UnitAddAbility(u2,'A021')
                                        call SetUnitAbilityLevel(u2,'A021',GetUnitAbilityLevel(u,'A08Q'))
                                        call IssuePointOrder(u2,"rainoffire",x,y)
                                        call UnitApplyTimedLife(u2,'BTLF',10)
                                        
                                        set u2 = CreateUnit(p,'e019',x-5,y,0)
                                        call UnitAddAbility(u2,'A0AL')
                                        call SetUnitAbilityLevel(u2,'A021',GetUnitAbilityLevel(u,'A08Q'))
                                        call IssuePointOrder(u2,"cloudoffog",x,y)
                                        call UnitApplyTimedLife(u2,'BTLF',10)
                                    endif
                                endif
			                else
                                if i=='A08X' then
                                    call GroupAddUnit(udg_ElfUnderRej,t)
                                    call UnitAddAbility(t,'A095')
                                else
                                    if i=='A08Y' then //ROLL UNITS
                                        if GetUnitAbilityLevel(u,i)==1 then
                                            call SetUnitAbilityLevel(u,i,2)
                                            set i = 1
                                            loop
                                                exitwhen i>udg_UTNR
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                set i=i+3
                                            endloop
                                            set i=1
                                                loop
                                                exitwhen i>18
                                                call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                set i=i+3
                                            endloop
                                        else
                                            if GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER)>0 then
                                                call SetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER,GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER)-1)
                                                set i = 1
                                                loop
                                                    exitwhen i>udg_UTNR
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[i],0)
                                                    set i=i+3
                                                endloop
                                                set i=1
                                                loop
                                                    exitwhen i>18
                                                    call SetPlayerTechMaxAllowed(p,udg_CreepTower[18*GetRandomInt(0,5)+i],999)
                                                    set i=i+3
                                                endloop
                                            else
                                                call DisplayTimedTextToPlayer(p,0,0,4,"|c0000ffffНельзя сменить юнитов, т.к. у Вас нет дерева.|r")
                                            endif
                                        endif
                                    endif
    			                endif
    		    	        endif
    		            else
                            if i<'A09F' then
    	    		            if i=='A090' then// DEGREID
				                    call Trig_DeGreid_Actions()
			                    else
				                    if i=='A09E' then
    				                    call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+20)
				                    endif
    			                endif
                            else
                                if i=='A09F' then
                                    call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+15*GetUnitAbilityLevel(u,'A09F'))
                                    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Monsoon\\MonsoonBoltTarget.mdl",t,"origin"))
                                    call UnitAddAbility(t,'S00E')
                                    call UnitAddAbility(t,'A09X')
                                else
                                    if i=='A09H' then
                                        set i = udg_NagaZaklNum
                                        loop
                                            exitwhen i==0
                                            if udg_NagaZaklCaster[i]==u then
                                                set udg_NagaZaklTarget[i] = t
                                            endif
                                            set i=i-1
                                        endloop
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'A0AF' then
                            if i<'A09Z' then
                                if i=='A09K' then
                                    if GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER)>0 then
                                        call SetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER,GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER)-1)
                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl",u,"overhead"))
                                    else
                                        call IssueImmediateOrder(u,"stop")
                                        call DisplayTimedTextToPlayer(p,0,0,4,"|c0000ffffНельзя использовать, т.к. у Вас нет дерева.|r")
                                    endif
                                else
                                    if i=='A09L' then
                                        set k = GetUnitAbilityLevel(u,'A09L')
                                        set g = CreateGroup()
                                        call GroupEnumUnitsInRange(g,x,y,600,null)
                                        set u2 = FirstOfGroup(g)
                                        loop
                                            exitwhen u2==null
                                            if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitAlly(u2,p) and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<400 then
                                                set t = CreateUnit(p,'e019',GetUnitX(u2),GetUnitY(u2),0)
                                                call UnitAddAbility(t,'A09W')
                                                call SetUnitAbilityLevel(t,'A09W',k)
                                                call IssueTargetOrder(t,"antimagicshell",u2)
                                                call UnitApplyTimedLife(t,'BTLF',3)
                                            endif
                                            call GroupRemoveUnit(g,u2)
                                            set u2=FirstOfGroup(g)
                                        endloop
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g=null
                                    endif
                                endif
                            else
                                if i=='A09Z' then
                                    if GetUnitState(u,UNIT_STATE_MANA)>=0.1*GetUnitState(t,UNIT_STATE_LIFE) then
                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-0.1*GetUnitState(t,UNIT_STATE_LIFE))
                                        call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+(0.20+0.02*GetUnitAbilityLevel(u,'A015'))*GetUnitState(t,UNIT_STATE_LIFE))
                                        call KillUnit(t)
                                        call RemoveUnit(t)
                                    endif
                                else
                                    if i=='A0A5' and not(udg_WaveGoing) and udg_ReadyWorker[GetPlayerSlotId(p)+1] then// NE GOTOV
                                        set i = GetPlayerSlotId(p)+1
                                        set udg_ReadyWorker[i]=false
                                        if udg_ModNumber==0 or udg_ModNumber==3 then
                                            call MultiboardSetItemValueNew( udg_Multiboard, 3, 2+i+i/4, "|c00ff2222Нет|r")
                                        else
                                            if i<4 then
                                                call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c00ff2222Нет|r")
                                            else
                                                call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c00ff2222Нет|r")
                                            endif
                                        endif
                                        call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A0A5',false)
                                        call SetPlayerAbilityAvailable(PlayerSlot(i-1),'A08P',true)
                                    endif
                                endif
                            endif
                        else
                            if i<'A0B0' then
                                if i=='A0AF' then// CHECK RESOV BOTA
                                    if GetPlayerSlotId(p)<3 then
                                        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                    else
                                        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,20,GetPlayerName(p)+" имеет |c00ffff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD))+"|r и |c0000ff00"+I2S(GetPlayerState(p,PLAYER_STATE_RESOURCE_LUMBER))+"|r. |c0000ffffРесурсы этого игрока - ваше потребление пищи|r")
                                    endif
                                else
                                    if i=='A0AY' then
                                        set u2 = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(t),GetUnitY(t)-5,90)
                                        if GetUnitAbilityLevel(t,'A02Y')>0 then
                                            call UnitAddAbility(u2,'A0AX')
                                            call SetUnitAbilityLevel(u2,'A0AX',GetUnitAbilityLevel(u,'A0AY'))
                                        else
                                            call UnitAddAbility(u2,'A0AW')
                                            call SetUnitAbilityLevel(u2,'A0AW',GetUnitAbilityLevel(u,'A0AY'))
                                        endif
                                        call IssueTargetOrder(u2,"polymorph",t)
                                        call UnitApplyTimedLife(u2,'BTLF',1)
                                    endif
                                endif
                            else
                                if i=='A0B0' then
                                    set u2 = CreateUnit(p,'e019',x,y,0)
                                    call UnitAddAbility(u2,'A0AZ')
                                    call SetUnitAbilityLevel(u2,'A0AZ',GetUnitAbilityLevel(u,'A0B0'))
                                    call IssueImmediateOrder(u2,"battleroar")
                                    call UnitApplyTimedLife(u2,'BTLF',2)
                                else
                                    if i=='A0B4' then
                                        call Trig_NagaCannibal_Actions()
                                    endif
                                endif
                            endif
                        endif
                    endif
                else
                    if i<'A0BY' then
                        if i<'A0BB' then
                            if i<'A0B9' then
                                if i=='A0B6' then
                                    set u2 = CreateUnit(p,'e014',x,y,245)
                                    call SetUnitAbilityLevel(u2,'A05H',GetUnitAbilityLevel(u,'A0B6'))
                                    if (GetLocalPlayer() == p) then
                                        call ClearSelection()
                                        call SelectUnit(u2, true)
                                    endif
			                    else
                                    if i=='A0B8' then //Смещение "<"
                                        set g = CreateGroup()
                                        call GroupEnumUnitsSelected(g,p,null)
                                        set i2 = 0
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            set i2 = i2+1
                                        set ari[i2]=t
                                        call GroupRemoveUnit(g,t)
                                        set t = FirstOfGroup(g)
                                        endloop
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set k = 1
                                        loop
                                            exitwhen k==i2
                                            set s = 1
                                            loop
                                                exitwhen s==i2-k+1
                                                if GetUnitX(ari[s])>GetUnitX(ari[s+1]) then
                                                    set t = ari[s]
                                                    set ari[s] = ari[s+1]
                                                    set ari[s+1] = t
                                                endif
                                                set s = s+1
                                            endloop
                                            set k = k+1
                                        endloop
                                        set k = 1
                                        loop
                                            exitwhen k>i2
                                            call UnitAddAbility(ari[k],'A033')
                                            call IssuePointOrderById(ari[k],852619,GetUnitX(ari[k])-64,GetUnitY(ari[k]))
                                            set k = k+1
                                        endloop
                                        call TriggerSleepAction(0)
                                        set k = 1
                                        loop
                                            exitwhen k>i2
                                            call UnitRemoveAbility(ari[k],'A033')
                                            set ari[k] = null
                                            set k = k+1
                                        endloop
                                    endif
                                endif
                            else
    	    		            if i=='A0B9' then //Смещение "^"
                                    set g = CreateGroup()
                                    call GroupEnumUnitsSelected(g,p,null)
                                    set i2 = 0
                                    set t = FirstOfGroup(g)
                                    loop
                                        exitwhen t==null
                                        if GetOwningPlayer(t)==p then
                                            set i2 = i2+1
                                            set ari[i2]=t
                                        endif
                                        call GroupRemoveUnit(g,t)
                                        set t = FirstOfGroup(g)
                                        endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g = null
                                    set k = 1
                                    loop
                                        exitwhen k==i2
                                        set s = 1
                                        loop
                                            exitwhen s==i2-k+1
                                            if GetUnitY(ari[s])<GetUnitY(ari[s+1]) then
                                                set t = ari[s]
                                                set ari[s] = ari[s+1]
                                                set ari[s+1] = t
                                            endif
                                            set s = s+1
                                        endloop
                                        set k = k+1
                                    endloop
                                    set k = 1
                                    loop
                                        exitwhen k>i2
                                        call UnitAddAbility(ari[k],'A033')
                                        call IssuePointOrderById(ari[k],852619,GetUnitX(ari[k]),GetUnitY(ari[k])+64)
                                        set k = k+1
                                    endloop
                                    call TriggerSleepAction(0)
                                    set k = 1
                                    loop
                                        exitwhen k>i2
                                        call UnitRemoveAbility(ari[k],'A033')
                                        set ari[k] = null
                                        set k = k+1
                                    endloop
                                else
                                    if i=='A0BA' then //Смещение ">"
                                        set g = CreateGroup()
                                        call GroupEnumUnitsSelected(g,p,null)
                                        set i2 = 0
                                        set t = FirstOfGroup(g)
                                        loop
                                            exitwhen t==null
                                            set i2 = i2+1
                                            set ari[i2]=t
                                            call GroupRemoveUnit(g,t)
                                            set t = FirstOfGroup(g)
                                        endloop
                                        call GroupClear(g)
                                        call DestroyGroup(g)
                                        set g = null
                                        set k = 1
                                        loop
                                            exitwhen k==i2
                                            set s = 1
                                            loop
                                                exitwhen s==i2-k+1
                                                if GetUnitX(ari[s])<GetUnitX(ari[s+1]) then
                                                    set t = ari[s]
                                                    set ari[s] = ari[s+1]
                                                    set ari[s+1] = t
                                                endif
                                                set s = s+1
                                            endloop
                                            set k = k+1
                                        endloop
                                        set k = 1
                                        loop
                                            exitwhen k>i2
                                            call UnitAddAbility(ari[k],'A033')
                                            call IssuePointOrderById(ari[k],852619,GetUnitX(ari[k])+64,GetUnitY(ari[k]))
                                            set k = k+1
                                        endloop
                                        call TriggerSleepAction(0)
                                        set k = 1
                                        loop
                                            exitwhen k>i2
                                            call UnitRemoveAbility(ari[k],'A033')
                                            set ari[k] = null
                                            set k = k+1
                                        endloop
				                    endif
    			                endif
    		    	        endif
    		            else
    	    	    	    if i<'A0BW' then
                                if i=='A0BB' then //Смещение "v"
                                    set g = CreateGroup()
                                    call GroupEnumUnitsSelected(g,p,null)
                                    set i2 = 0
                                    set t = FirstOfGroup(g)
                                    loop
                                        exitwhen t==null
                                        set i2 = i2+1
                                        set ari[i2]=t
                                        call GroupRemoveUnit(g,t)
                                        set t = FirstOfGroup(g)
                                    endloop
                                    call GroupClear(g)
                                    call DestroyGroup(g)
                                    set g = null
                                    set k = 1
                                    loop
                                        exitwhen k==i2
                                        set s = 1
                                        loop
                                            exitwhen s==i2-k+1
                                            if GetUnitY(ari[s])>GetUnitY(ari[s+1]) then
                                                set t = ari[s]
                                                set ari[s] = ari[s+1]
                                                set ari[s+1] = t
                                            endif
                                            set s = s+1
                                        endloop
                                        set k = k+1
                                    endloop
                                    set k = 1
                                    loop
                                        exitwhen k>i2
                                        call UnitAddAbility(ari[k],'A033')
                                        call IssuePointOrderById(ari[k],852619,GetUnitX(ari[k]),GetUnitY(ari[k])-64)
                                        set k = k+1
                                    endloop
                                    call TriggerSleepAction(0)
                                    set k = 1
                                    loop
                                        exitwhen k>i2
                                        call UnitRemoveAbility(ari[k],'A033')
                                        set ari[k] = null
                                        set k = k+1
                                    endloop
                                else
                                    if i=='A0BV' then
                                        set i = GetUnitAbilityLevel(u,'A0BV')
                                        set udg_TeleportStuffNum=udg_TeleportStuffNum+1
                                        set udg_TeleportStuffUnit[udg_TeleportStuffNum]=t
                                        if i>5 then
                                            if GetUnitAbilityLevel(t,'A02Y')>0 then
                                                set udg_TeleportStuffTime[udg_TeleportStuffNum]=8*i-4
                                            else
                                                set udg_TeleportStuffTime[udg_TeleportStuffNum]=20*i-10
                                            endif
                                        else
                                            if GetUnitAbilityLevel(t,'A02Y')>0 then
                                                set udg_TeleportStuffTime[udg_TeleportStuffNum]= 4+8*(i-i/5)
                                            else
                                                set udg_TeleportStuffTime[udg_TeleportStuffNum]=10+20*(i-i/5)
                                            endif
                                        endif
                                        set udg_TeleportStuffEffect[udg_TeleportStuffNum]=AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTo.mdl",GetUnitX(t),GetUnitY(t))
                                        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                        call PauseUnit(t,true)
                                        call ShowUnit(t,false)
                                    endif
    			                endif
                            else
                                if i=='A0BW' and GetUnitTypeId(u)!='e019' then                    
                                    set b=true
                                    set i = 1
                                    loop
                                        exitwhen i>udg_DoomTargetNum
                                        if udg_DoomTargetUnit[i]==t then
                                            set b=false
                                            set udg_DoomTargetTime[i]=130
                                            set i=udg_DoomTargetNum
                                        endif
                                        set i=i+1
                                    endloop
                                    if b then
                                        //call DestroyEffect(AddSpecialEffectTarget("MagicCircle_Devil.mdx",t,"origin"))
                                        call GroupAddUnit(udg_DoomTargets,t)
                                        set udg_DoomTargetNum=udg_DoomTargetNum+1
                                        set udg_DoomTargetTime[udg_DoomTargetNum]=130// 13 sec.
                                        set udg_DoomTargetUnit[udg_DoomTargetNum]=t
                                        set i = GetUnitTypeId(t)
                                    endif
                                else
                                    if i=='A0BX' then
                                        call RemoveUnit(u)
                                        if GetUnitTypeId(t)=='n00K' then
                                            call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+60)
                                        else
                                            call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+30)
                                        endif
                                        if GetUnitAbilityLevel(t,'A04U')<50 then
                                            call SetUnitAbilityLevel(t,'A04U',GetUnitAbilityLevel(t,'A04U')+2)
                                        else
                                            if GetUnitAbilityLevel(t,'A04U')==50 then
                                                call SetUnitAbilityLevel(t,'A04U',GetUnitAbilityLevel(t,'A04U')+1)
                                            endif
                                        endif
                                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl",t,"origin"))
                                    endif
                                endif
                            endif
                        endif
                    else
                        if i<'A0DO' then
                            if i<'A0CT' then
                                if i=='A0BY' then
                                    set x = GetUnitX(t)
                                    set y = GetUnitY(t)
                                    call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+25)
                                    //call DestroyEffect(AddSpecialEffect("war3mapImported\\SoulDischarge4.mdx",x,y))
                                    if GetUnitAbilityLevel(t,'S00J')==1 then
                                        set i = 1
                                        set s = 0
                                        loop
                                            exitwhen i>udg_DemonShieldGroupNum
                                            if udg_DemonShieldGroupUnit[i]==t then
                                                set s = i
                                                set i = udg_DemonShieldGroupNum
                                            endif
                                            set i=i+1
                                        endloop
                                        set udg_DemonShieldGroupTime[s]=51
                                        call UnitRemoveAbility(t,'S00J')
                                        call UnitRemoveAbility(t,'B02D')
                                        call UnitAddAbility(t,'S00J')
                                    else
                                        call UnitAddAbility(t,'S00J')
                                        set udg_DemonShieldGroupNum=udg_DemonShieldGroupNum+1
                                        set udg_DemonShieldGroupUnit[udg_DemonShieldGroupNum]=t
                                        set udg_DemonShieldGroupTime[udg_DemonShieldGroupNum]=51
                                    endif
                                else
                                    if i=='A0BZ' then
                                        set udg_EfreetNum = udg_EfreetNum+1
                                        set udg_EfreetTime[udg_EfreetNum] = 200 // 10 sec
                                        set udg_EfreetRealUnit[udg_EfreetNum] = u
                                        call PauseUnit(u,true)
                                        call ShowUnit(u,false)
                                        set u2 = CreateUnit(GetOwningPlayer(u),GetUnitTypeId(t),GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                                        call SetUnitState(u2,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)/GetUnitState(u,UNIT_STATE_MAX_LIFE)*GetUnitState(u2,UNIT_STATE_MAX_LIFE))
                                        call UnitAddAbility(u2,'A00H')
                                        call UnitAddAbility(u2,'A0AG')
                                        call SetUnitAbilityLevel(u2,'A0AG',GetUnitAbilityLevel(t,'A0AG'))
                                        call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\FeralSpirit\\feralspirittarget.mdl",u2,"origin"))
                                        set udg_EfreetImagUnit[udg_EfreetNum] = u2
                           
                                        set i = 1
                                        loop
                                            exitwhen i>6
                                            if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
                                            
                                                if GetUnitAbilityLevel(u,'A0AD')>0 then
                                                    if udg_ModNumber==0 or udg_ModNumber==3 then
                                                        call MultiboardSetPos03(i-1,5*(R2I((udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(u,'A0AD'))+2.5)/5)) )
                                                    else
                                                        call MultiboardSetPos12(i-1,5*(R2I((udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(u,'A0AD'))+2.5)/5)) )
                                                    endif
                                                else
                                                    if udg_ModNumber==0 or udg_ModNumber==3 then
                                                        call MultiboardSetPos03(i-1,udg_CreepCost[96])
                                                    else
                                                        call MultiboardSetPos12(i-1,udg_CreepCost[96])
                                                    endif
                                                endif
                                                set i=6
                                            endif
                                            set i=i+1
                                        endloop
                                        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(0,u,u2,true,true,true)
                                        set i = 1
                                        loop
                                            exitwhen i>udg_UndeadSpellManaCount
                                            if udg_UndeadSpellManaUnit[i]==u then
                                                set udg_UndeadSpellManaUnit[i]=u2
                                                call UnitAddAbility(u2,'S00T')
                                                call SetUnitAbilityLevel(u2,'S00T',GetUnitAbilityLevel(u,'S00T'))
                                                call UnitAddAbility(u2,'A0IU')
                                                call SetUnitAbilityLevel(u2,'A0IU',GetUnitAbilityLevel(u,'A0IU'))
                                                call UnitAddAbility(u2,'A0IW')
                                                call SetUnitAbilityLevel(u2,'A0IW',GetUnitAbilityLevel(u,'A0IW'))
                                                set i=udg_UndeadSpellManaCount
                                            endif
                                            set i=i+1
                                        endloop
                                        
                                    endif
                                endif
                            else
                                if i=='A0CT' then
                                    set b = true
                                    set k = GetUnitTypeId(t)
                                    set i = 1
                                    loop
                                        exitwhen i>udg_UTN
                                        if k == udg_CreepTower[i] then
                                            if udg_CreepCost[i]<=40+35.0*udg_Wave then
                                                call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl",t,"chest"))
                                                call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Целью выбран ''|r|cff00cccc"+GetUnitName(t)+"|r|cffffcc00'' за |r|cff00cccc"+I2S(udg_CreepCost[i])+"|r|cffffcc00 ед. золота|r")
                                                set udg_DemonPass17CreateUnit[GetPlayerSlotId(p)+1]=i
                                            else
                                                call DisplayTimedTextToPlayer(p,0,0,6,"|cffff2020Ошибка при выборе цели, воин не успеет появиться за время действия порталов.|r")
                                            endif
                                            set b = false
                                            set i=udg_UTN
                                        endif
                                        set i=i+1
                                    endloop
                                    if b then
                                        call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Ошибка при выборе цели|r")
                                    endif
                                else
                                    if i=='A0CZ' then
                                        if udg_Wave==11 or udg_ModNumber==2 then
                                            if y>-9568 and y<-6048 and x>-3936 and x<3936 then
                                                set k = GetUnitAbilityLevel(u,id)/2
                                                set i = GetPlayerSlotId(p)
                                                loop
                                                    exitwhen k<0
                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),udg_CreepWarrior[91],0,y,180*(i/3))
                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                    call UnitAddAbility(u,'A00H')
                                                    call UnitAddAbility(u,'A0AG')
                                                    call SetUnitAbilityLevel(u,'A0AG',91)
                                                    call MultiboardSetPos12(i,-1*udg_CreepCost[91])
                                                    call GroupAddUnit(udg_PlayerWarriorsGroup[i+1],u)
                                                    call SetUnitPosition(u,x,y)
                                                    call IssuePointOrder(u,"attack",2300-4600*(i/3),-7885)
                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                    if IsPassChosenByPlayer(i+1,16) then
                                                        call UnitAddAbility(u,'A0B2')
                                                    else
                                                        if IsPassChosenByPlayer(i+1,11) then
                                                            call UnitAddAbility(u,'A0AP')
                                                        endif
                                                    endif
                                                    set k=k-1
                                                endloop
                                            else
                                                call IssueImmediateOrder(u,"stop")
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-GetUnitAbilityLevel(u,i)/3)
                                                call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                            endif
                                        else
                                            if udg_ModNumber==0 then
                                                set b = true
                                                set s = 1
                                                loop
                                                    exitwhen s>6
                                                    if y-64>GetRectMinY(udg_PlayerSectorFight[s]) and y+64<GetRectMaxY(udg_PlayerSectorFight[s]) and x-64>GetRectMinX(udg_PlayerSectorFight[s]) and x+64<GetRectMaxX(udg_PlayerSectorFight[s]) then
                                                        if udg_WaveGoingForPlayer[s] then
                                                            set k = GetUnitAbilityLevel(u,id)/2
                                                            set i = s-1
                                                            loop
                                                                exitwhen k<0
                                                                //if IsPlayerAlly(PlayerSlot(i),p) then
                                                                if IsPlayerAlly(PlayerSlot(i*2+6-5*(i/3)),p) then
                                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),udg_CreepWarrior[91],x,GetRectCenterY(udg_PlayerSectorFight[i+1]),90)
                                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                                    call GroupAddUnit(udg_PlayerWarriorsGroup[i+1],u)
                                                                    call MultiboardSetPos03(i,-1*udg_CreepCost[91])
                                                                    call SetUnitPosition(u,x,y)
                                                                    call IssuePointOrder(u,"attack",8250-16500*(i/3),8500-7200*I2R(i-(i/3*3)))
                                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                                    if IsPassChosenByPlayer(i+1,16) then
                                                                        call UnitAddAbility(u,'A0B2')
                                                                    else
                                                                        if IsPassChosenByPlayer(i+1,11) then
                                                                            call UnitAddAbility(u,'A0AP')
                                                                        endif
                                                                    endif
                                                                else
                                                                    set u = CreateUnit(PlayerSlot(i*2+7-7*(i/3)),udg_CreepWarrior[91],x,GetRectCenterY(udg_PlayerSectorFight[i+1]),270)
                                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                                    call GroupAddUnit(udg_PlayerCreepsGroup[i+1],u)
                                                                    call SetUnitPosition(u,x,y)
                                                                    call IssuePointOrder(u,"attack",8250-16500*(i/3),3900-7200*I2R(i-(i/3*3)))
                                                                    call SetUnitColor(u,udg_PlayerColor[i+4-6*(i/3)])
                                                                    if IsPassChosenByPlayer(i+4-6*(i/3),16) then
                                                                        call UnitAddAbility(u,'A0B2')
                                                                    else
                                                                        if IsPassChosenByPlayer(i+4-6*(i/3),11) then
                                                                            call UnitAddAbility(u,'A0AP')
                                                                        endif
                                                                    endif
                                                                endif
                                                                call UnitAddAbility(u,'A00H')
                                                                call UnitAddAbility(u,'A0AG')
                                                                call SetUnitAbilityLevel(u,'A0AG',91)
                                                                set k=k-1
                                                            endloop
                                                            set s=6
                                                            set b=false
                                                        endif
                                                    endif
                                                    set s=s+1
                                                endloop
                                                if b then
                                                    call IssueImmediateOrder(u,"stop")
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-GetUnitAbilityLevel(u,i)/3)
                                                    call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                endif
                                            else
                                                if udg_ModNumber==1 then
                                                    if y>-1856 and y<5536 and ((x>1086 and x<3904) or (x>-3904 and x<-1086)) then
                                                        set k = GetUnitAbilityLevel(u,id)/2
                                                        set i = GetPlayerSlotId(p)
                                                        loop
                                                            exitwhen k<0
                                                            if (x>0 and i<3) or (x<0 and i>2) then
                                                                set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),udg_CreepWarrior[91],x,2400,90)
                                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                                call GroupAddUnit(udg_PlayerWarriorsGroup[i+1],u)
                                                                call MultiboardSetPos12(i,-1*udg_CreepCost[91])
                                                                call SetUnitPosition(u,x,y)
                                                                call IssuePointOrder(u,"attack",x,4900)
                                                                call SetUnitColor(u,udg_PlayerColor[i+1])
                                                            else
                                                                set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),udg_CreepWarrior[91],x,2400,270)
                                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                                call GroupAddUnit(udg_PlayerCreepsGroup[i+4-6*(i/3)],u)
                                                                call SetUnitPosition(u,x,y)
                                                                call IssuePointOrder(u,"attack",x,-900)
                                                                call SetUnitColor(u,udg_PlayerColor[i+1])
                                                            endif
                                                            if IsPassChosenByPlayer(i+1,16) then
                                                                call UnitAddAbility(u,'A0B2')
                                                            else
                                                                if IsPassChosenByPlayer(i+1,11) then
                                                                    call UnitAddAbility(u,'A0AP')
                                                                endif
                                                            endif
                                                            call UnitAddAbility(u,'A00H')
                                                            call UnitAddAbility(u,'A0AG')
                                                            call SetUnitAbilityLevel(u,'A0AG',91)
                                                            set k=k-1
                                                        endloop
                                                    else
                                                        call IssueImmediateOrder(u,"stop")
                                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-GetUnitAbilityLevel(u,i)/3)
                                                        call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                    endif
                                                else// ModNumber==3
                                                    set b = true
                                                    set i = GetPlayerSlotId(p)/3*3
                                                    set s = 1
                                                    loop
                                                        exitwhen s>3
                                                        if y-64>GetRectMinY(udg_PlayerSectorFight[i+s]) and y+64<GetRectMaxY(udg_PlayerSectorFight[i+s]) and x-64>GetRectMinX(udg_PlayerSectorFight[i+s]) and x+64<GetRectMaxX(udg_PlayerSectorFight[i+s]) then
                                                            if udg_WaveGoingForPlayer[s] then
                                                                set k = GetUnitAbilityLevel(u,id)/2
                                                                set i = i+s-1
                                                                loop
                                                                    exitwhen k<0
                                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),udg_CreepWarrior[91],GetRectCenterX(udg_PlayerSectorFight[i+1]),GetRectCenterY(udg_PlayerSectorFight[i+1]),180-180*(i/3))
                                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",x,y))
                                                                    call GroupAddUnit(udg_PlayerWarriorsGroup[i+1],u)
                                                                    call MultiboardSetPos03(i,-1*udg_CreepCost[91])
                                                                    call SetUnitPosition(u,x,y)
                                                                    call IssuePointOrder(u,"attack",udg_PlayerHomeLocX[i+4-6*(i/3)],y)
                                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                                    if IsPassChosenByPlayer(i+1,16) then
                                                                        call UnitAddAbility(u,'A0B2')
                                                                    else
                                                                        if IsPassChosenByPlayer(i+1,11) then
                                                                            call UnitAddAbility(u,'A0AP')
                                                                        endif
                                                                    endif
                                                                    call UnitAddAbility(u,'A00H')
                                                                    call UnitAddAbility(u,'A0AG')
                                                                    call SetUnitAbilityLevel(u,'A0AG',91)
                                                                    set k=k-1
                                                                endloop
                                                                set s=3
                                                                set b=false
                                                            endif
                                                        endif
                                                        set s=s+1
                                                    endloop
                                                    if b then
                                                        call IssueImmediateOrder(u,"stop")
                                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3-GetUnitAbilityLevel(u,i)/3)
                                                        call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                    endif
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            endif
                        else
                            if i<'A0DR' then
                                if i=='A0DO' then
                                    set s = 0
                                    set i = 1
                                    loop
                                        exitwhen i>udg_RockSpellNum
                                        if udg_RockSpellUnit[i]==t then
                                            set s=i
                                        endif
                                        set i=i+1
                                    endloop
                                    if s==0 then
                                        call UnitAddAbility(t,'A0FG')
                                        call UnitAddAbility(t,'A0FF')
                                        set udg_RockSpellNum=udg_RockSpellNum+1
                                        set udg_RockSpellUnit[udg_RockSpellNum]=t
                                        if GetUnitAbilityLevel(u,id)>5 then
                                            set udg_RockSpellTime[udg_RockSpellNum]=50*GetUnitAbilityLevel(u,id)-100
                                        else
                                            set udg_RockSpellTime[udg_RockSpellNum]=30+30*GetUnitAbilityLevel(u,id)-30*(GetUnitAbilityLevel(u,id)/5)
                                        endif
                                    else
                                        if GetUnitAbilityLevel(u,id)>5 then
                                            set udg_RockSpellTime[s]=udg_RockSpellTime[s]+50*GetUnitAbilityLevel(u,id)-100
                                        else
                                            set udg_RockSpellTime[s]=udg_RockSpellTime[s]+30+30*GetUnitAbilityLevel(u,id)-30*(GetUnitAbilityLevel(u,id)/5)
                                        endif
                                    endif
                                    //call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareBoltImpact.mdl",t,"origin"))
                                else
                                    if i=='A0DP' then
                                        if t==u then
                                            call UnitAddItem(udg_ThrouneWorker[GetPlayerSlotId(p)+1],UnitItemInSlot(u,0))
                                        else
                                            if not(UnitAddItem(t,UnitItemInSlot(u,0))) then
                                                set it = UnitItemInSlot(u,0)
                                                call UnitRemoveItem(u,it)
                                                call UnitAddItem(u,UnitItemInSlot(t,0))
                                                call UnitAddItem(t,it)
                                                set it = null
                                            endif
                                        endif
                                    endif
                                endif
                            else
                                if i=='A0DR' then
                                    if UnitItemInSlot(t,0)==null then
                                        set i = 5
                                        loop
                                            exitwhen i<0
                                            if UnitItemInSlot(u,i)!=null then
                                                call UnitAddItem(t,UnitItemInSlot(u,i))
                                                set i = 0
                                            endif
                                            set i=i-1
                                        endloop
                                    else
                                        call UnitAddItem(u,UnitItemInSlot(t,0))
                                    endif
                                else
                                    if i>='A0EP' and i<='A0EY' then
                                        set k = GetUnitAbilityLevel(u,'A0DQ')+2*GetUnitAbilityLevel(u,'A0G7')+3*GetUnitAbilityLevel(u,'A0G8')+4*GetUnitAbilityLevel(u,'A0AI')
                                        set k=k+GetUnitAbilityLevel(u,'A0GO')+2*GetUnitAbilityLevel(u,'A0GP')+3*GetUnitAbilityLevel(u,'A0GQ')+4*GetUnitAbilityLevel(u,'A0GR')//ДУБЛИ
                                        if k>3 then
                                            set k=3
                                            set s = i+1-'A0EP'
                                            set i = GetPlayerSlotId(p)+1
                                            set it = CreateItem(udg_UndeadItemsPassAll[(k-1)*10+s],GetUnitX(udg_ThrouneWorker[i]),GetUnitY(udg_ThrouneWorker[i]))
                                            if UnitAddItem(udg_ThrouneWorker[i],it) and udg_WaveGoingForPlayer[i] then
                                                call SetItemDroppable(it,false)
                                            endif
                                        endif
                                        set s = i+1-'A0EP'
                                        set i = GetPlayerSlotId(p)+1
                                        set it = CreateItem(udg_UndeadItemsPassAll[(k-1)*10+s],GetUnitX(udg_ThrouneWorker[i]),GetUnitY(udg_ThrouneWorker[i]))
                                        if UnitAddItem(udg_ThrouneWorker[i],it) and udg_WaveGoingForPlayer[i] then
                                            call SetItemDroppable(it,false)
                                        endif
                                        set udg_PlayerUsedIncomeSpell[i]=true
                                        set it = null
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endif
        else
        
                        if i<'A105' then
                            if i<'A0G5' then
                                if i<'A0FY' then
                                    if i<'A0FC' then
                                        if i=='A0F0' then// ГЕРОЙ НАГ НЮК
                                            set k = GetUnitAbilityLevel(u,'A0F0')
                                            call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+10+k*20)
                                            //call SetUnitState(t,UNIT_STATE_MANA,GetUnitState(t,UNIT_STATE_MANA)-k*10)
                                            call UnitDamageTarget(u,t,20+k*40,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                        else
                                            if i=='A0F1' then// КАТАПУЛЬТА 1 И 2
                                                set i = 1
                                                set b = false
                                                loop
                                                    exitwhen i>udg_UTN
                                                    if udg_CreepTower[i]==GetUnitTypeId(t) then
                                                        //if udg_CreepCost[i]*(1+(GetUnitAbilityLevel(t,'A0B3')-1)*0.05)<=90.5 then
                                                        if udg_CreepCost[i]<=90.5 then
                                                            set b=true
                                                        endif
                                                        set i = udg_UTN
                                                    endif
                                                    set i=i+1
                                                endloop
                                                    
                                                if b then
                                                    set k = 0
                                                    set i = 1
                                                    loop
                                                        exitwhen i>udg_KataTowerCount
                                                        if udg_KataTowerThrower[i]==u then
                                                            set k=i
                                                        endif
                                                        set i=i+1
                                                    endloop
                                                    if k==0 then
                                                        set udg_KataTowerCount=udg_KataTowerCount+1
                                                        set udg_KataTowerThrower[udg_KataTowerCount]=u
                                                        set udg_KataTowerTarget[udg_KataTowerCount*4-3]=null
                                                        set udg_KataTowerTarget[udg_KataTowerCount*4-2]=null
                                                        set udg_KataTowerTarget[udg_KataTowerCount*4-1]=null
                                                        set udg_KataTowerTarget[udg_KataTowerCount*4]=null
                                                        set k = udg_KataTowerCount
                                                    endif
                                                    if udg_KataTowerTarget[k*4-3]==t or udg_KataTowerTarget[k*4-2]==t or udg_KataTowerTarget[k*4-1]==t or udg_KataTowerTarget[k*4]==t then
                                                        call IssueImmediateOrder(u,"stop")
                                                        call DisplayTextToPlayer(p,0,0,"|c0000ffffЦель уже выбрана этой катапультой.|r")
                                                    elseif udg_KataTowerTarget[k*4-3]!=null and udg_KataTowerTarget[k*4-2]!=null and udg_KataTowerTarget[k*4-1]!=null and udg_KataTowerTarget[k*4]!=null then
                                                        call IssueImmediateOrder(u,"stop")
                                                        call DisplayTextToPlayer(p,0,0,"|c0000ffffЦель НЕ выбрана, все 4 места уже заняты.|r")
                                                    else
                                                        set s=0
                                                        set i=1
                                                        loop
                                                            exitwhen i>udg_KataTowerCount*4
                                                            if udg_KataTowerTarget[i]==t then
                                                                set s=i
                                                                set i=udg_KataTowerCount*4
                                                            endif
                                                            set i=i+1
                                                        endloop
                                                        if s>0 then
                                                            set udg_KataTowerTarget[s]=null
                                                            call SetUnitAbilityLevel(udg_KataTowerThrower[(s-1)/4+1],'A0F1',1)
                                                            if udg_KataTowerTarget[(s-1)/4*4+4]==null and udg_KataTowerTarget[(s-1)/4*4+3]==null and udg_KataTowerTarget[(s-1)/4*4+2]==null and udg_KataTowerTarget[(s-1)/4*4+1]==null then
                                                                if k==udg_KataTowerCount then
                                                                    set k=s
                                                                endif
                                                                set udg_KataTowerThrower[(s-1)/4+1]=udg_KataTowerThrower[udg_KataTowerCount]
                                                                call UnitRemoveAbility(udg_KataTowerTarget[(s-1)/4*4+4],'A0IQ')
                                                                call UnitRemoveAbility(udg_KataTowerTarget[(s-1)/4*4+3],'A0IQ')
                                                                call UnitRemoveAbility(udg_KataTowerTarget[(s-1)/4*4+2],'A0IQ')
                                                                call UnitRemoveAbility(udg_KataTowerTarget[(s-1)/4*4+1],'A0IQ')
                                                                set udg_KataTowerTarget[(s-1)/4*4+4]=udg_KataTowerTarget[udg_KataTowerCount*4]
                                                                set udg_KataTowerTarget[(s-1)/4*4+3]=udg_KataTowerTarget[udg_KataTowerCount*4-1]
                                                                set udg_KataTowerTarget[(s-1)/4*4+2]=udg_KataTowerTarget[udg_KataTowerCount*4-2]
                                                                set udg_KataTowerTarget[(s-1)/4*4+1]=udg_KataTowerTarget[udg_KataTowerCount*4-3]
                                                                set udg_KataTowerCount=udg_KataTowerCount-1
                                                            endif
                                                        endif
                                                        if udg_KataTowerTarget[k*4-3]==null then
                                                            set udg_KataTowerTarget[k*4-3] = t
                                                        elseif udg_KataTowerTarget[k*4-2]==null then
                                                            set udg_KataTowerTarget[k*4-2] = t
                                                        elseif udg_KataTowerTarget[k*4-1]==null then
                                                            set udg_KataTowerTarget[k*4-1] = t
                                                        else// udg_KataTowerTarget[k*4]==null
                                                            set udg_KataTowerTarget[k*4] = t
                                                        endif
                                                        call UnitAddAbility(t,'A0IQ')
                                                        if udg_KataTowerTarget[k*4-3]!=null and udg_KataTowerTarget[k*4-2]!=null and udg_KataTowerTarget[k*4-1]!=null and udg_KataTowerTarget[k*4]!=null then
                                                            call SetUnitAbilityLevel(udg_KataTowerThrower[k],'A0F1',2)
                                                        endif
                                                            
                                                    endif
                                                else
                                                    call IssueImmediateOrder(u,"stop")
                                                    call DisplayTextToPlayer(p,0,0,"|c0000ffffЦель не должна быть дороже 90 ед. золота|r")
                                                endif
                                            elseif i=='A0F3' then
                                                set i = 1
                                                loop
                                                    exitwhen i>udg_KataTowerCount
                                                    if udg_KataTowerThrower[i]==u then
                                                        call SetUnitAbilityLevel(udg_KataTowerThrower[i],'A0F1',1)
                                                        set udg_KataTowerThrower[i]=udg_KataTowerThrower[udg_KataTowerCount]
                                                        call UnitRemoveAbility(udg_KataTowerTarget[i*4],'A0IQ')
                                                        call UnitRemoveAbility(udg_KataTowerTarget[i*4-1],'A0IQ')
                                                        call UnitRemoveAbility(udg_KataTowerTarget[i*4-2],'A0IQ')
                                                        call UnitRemoveAbility(udg_KataTowerTarget[i*4-3],'A0IQ')
                                                        set udg_KataTowerTarget[i*4] = udg_KataTowerTarget[udg_KataTowerCount*4]
                                                        set udg_KataTowerTarget[i*4-1]=udg_KataTowerTarget[udg_KataTowerCount*4-1]
                                                        set udg_KataTowerTarget[i*4-2]=udg_KataTowerTarget[udg_KataTowerCount*4-2]
                                                        set udg_KataTowerTarget[i*4-3]=udg_KataTowerTarget[udg_KataTowerCount*4-3]
                                                        set udg_KataTowerCount=udg_KataTowerCount-1
                                                    endif
                                                    set i=i+1
                                                endloop
                                            endif
                                        endif
                                    else
                                        if i=='A0FC' then
                                            if GetUnitTypeId(t)==udg_CreepTower[111] then
                                                call SetUnitAbilityLevel(t,'A0DI',GetUnitAbilityLevel(t,'A0DI')+1)
                                                call SetHeroLevel(t,GetUnitAbilityLevel(t,'A0DI'),false)
                                                call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdl",t,"origin"))   
                                                call UnitRemoveAbility(t,'A08F')
                                            else
                                                call IssueImmediateOrder(u,"stop")
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+4)
                                                call DisplayTextToPlayer(p,0,0,"|c0000ffffЦелью должен быть герой.|r")
                                            endif
                                            /*if GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD)>=20 then
                                                call SetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(p,PLAYER_STATE_RESOURCE_GOLD)-20)
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                                call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl",u,"overhead"))
                                            else
                                                call IssueImmediateOrder(u,"stop")
                                                call DisplayTimedTextToPlayer(p,0,0,4,"|c0000ffffНельзя использовать, недостаточно золота.|r")
                                            endif*/
                                            /*set s = 0
                                            set i = 1
                                            loop
                                                exitwhen i>udg_EssOfBetrNum
                                                if udg_EssOfBetrUnit[i]==t then
                                                    set s=i
                                                endif
                                                set i=i+1
                                            endloop
                                            if s==0 then
                                                call UnitAddAbility(t,'A0F9')
                                                call UnitAddAbility(t,'A0FA')
                                                call UnitAddAbility(t,'A0FB')
                                                set udg_EssOfBetrNum=udg_EssOfBetrNum+1
                                                set udg_EssOfBetrUnit[udg_EssOfBetrNum]=t
                                                set udg_EssOfBetrTime[udg_EssOfBetrNum]=20+10*GetUnitAbilityLevel(u,id)
                                            else
                                                set udg_EssOfBetrTime[s]=udg_EssOfBetrTime[s]+20+10*GetUnitAbilityLevel(u,id)
                                            endif
                                            call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+10)
                                            call SetUnitState(t,UNIT_STATE_MANA,GetUnitState(t,UNIT_STATE_MANA)+10)
                                            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl",t,"origin"))*/
                                        else
                                            if i=='A0FH' then
                                                set s = 0
                                                set i = 1
                                                loop
                                                    exitwhen i>udg_HumPalaHealN
                                                    if udg_HumPalaHealU[i]==t then
                                                        set s=i
                                                    endif
                                                    set i=i+1
                                                endloop
                                                if s==0 then
                                                    call UnitAddAbility(t,'S00K')
                                                    call UnitAddAbility(t,'A0DS')
                                                    set i = GetUnitAbilityLevel(t,'A0AG')
                                                    if i>0 then
                                                        call SetUnitAbilityLevel(t,'A0DS',1+udg_CreepCost[i]/50)
                                                    endif
                                                    set udg_HumPalaHealN=udg_HumPalaHealN+1
                                                    set udg_HumPalaHealU[udg_HumPalaHealN]=t
                                                    set udg_HumPalaHealT[udg_HumPalaHealN]=70
                                                else
                                                    set udg_HumPalaHealT[s]=70
                                                    call UnitRemoveAbility(t,'S00K')
                                                    call UnitRemoveAbility(t,'B02O')
                                                    call UnitAddAbility(t,'S00K')
                                                    //call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl",t,"origin"))
                                                endif
                                                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+30)
                                            endif
                                        endif
                                    endif
                                else
                                    if i<'A0G3' then
                                        if i=='A0FY' then
                                            set k = GetUnitAbilityLevel(u,id)
                                            if udg_Wave==11 or udg_ModNumber==2 then
                                                if y>-9568 and y<-6048 and x>-3936 and x<3936 then
                                                    set i = GetPlayerSlotId(p)
                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),'e01V',x,y,180+180*(i/3))
                                                    call IssuePointOrder(u,"move",-1*udg_PlayerHomeLocX[i+1],udg_PlayerHomeLocY[i+1])
                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                    call UnitAddAbility(u,'A0G0')
                                                    call SetUnitAbilityLevel(u,'A0G0',k)
                                                    set udg_GoblZepNum = udg_GoblZepNum+1
                                                    set udg_GoblZepUnit[udg_GoblZepNum] = u
                                                    if k>=5 then
                                                        set udg_GoblZepTime[udg_GoblZepNum] = 26+5*k
                                                    else
                                                        set udg_GoblZepTime[udg_GoblZepNum] = 31+5*k
                                                    endif
                                                    set udg_GoblZepGroup[udg_GoblZepNum] = CreateGroup()
                                                    set g = CreateGroup()
                                                    call GroupEnumUnitsInRange(g,x,y,410,null)
                                                    set i2 = 0
                                                    set u2 = FirstOfGroup(g)
                                                    loop
                                                        exitwhen u2==null
                                                        if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitAlly(u2,GetOwningPlayer(u)) and GetUnitAbilityLevel(u2,'A0AG')>0 and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<300 then
                                                            call GroupAddUnit(udg_GoblZepGroup[udg_GoblZepNum],u2)
                                                            set i2 = i2+udg_CreepCost[GetUnitAbilityLevel(u2,'A0AG')]
                                                            call PauseUnit(u2,true)
                                                            call ShowUnit(u2,false)
                                                        endif
                                                        call GroupRemoveUnit(g,u2)
                                                        set u2=FirstOfGroup(g)
                                                    endloop
                                                    if udg_GoblZepTime[udg_GoblZepNum]-i2/10>10 then
                                                        set udg_GoblZepTime[udg_GoblZepNum]=udg_GoblZepTime[udg_GoblZepNum]-i2/10
                                                    else
                                                        set udg_GoblZepTime[udg_GoblZepNum]=10
                                                    endif
                                                    call DestroyGroup(g)
                                                    set g=null
                                                else
                                                    call IssueImmediateOrder(u,"stop")
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                    call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                endif
                                            else
                                                if udg_ModNumber==0 then
                                                    set b = true
                                                    set s = 1
                                                    loop
                                                        exitwhen s>6
                                                        if y-64>GetRectMinY(udg_PlayerSectorFight[s]) and y+64<GetRectMaxY(udg_PlayerSectorFight[s]) and x-64>GetRectMinX(udg_PlayerSectorFight[s]) and x+64<GetRectMaxX(udg_PlayerSectorFight[s]) then
                                                            if udg_WaveGoingForPlayer[s] then
                                                                set i = s-1
                                                                //if IsPlayerAlly(PlayerSlot(i),p) then
                                                                if IsPlayerAlly(PlayerSlot(i*2+6-5*(i/3)),p) then
                                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),'e01V',x,y,90)
                                                                    call IssuePointOrder(u,"move",udg_PlayerHomeLocX[i+1],udg_PlayerHomeLocY[i+1]+4700)
                                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                                else
                                                                    set u = CreateUnit(PlayerSlot(i*2+7-7*(i/3)),'e01V',x,y,270)
                                                                    call IssuePointOrder(u,"move",udg_PlayerHomeLocX[i+1],udg_PlayerHomeLocY[i+1])
                                                                    call SetUnitColor(u,udg_PlayerColor[i+4-6*(i/3)])
                                                                endif
                                                                call UnitAddAbility(u,'A0G0')
                                                                call SetUnitAbilityLevel(u,'A0G0',k)
                                                                set udg_GoblZepNum = udg_GoblZepNum+1
                                                                set udg_GoblZepUnit[udg_GoblZepNum] = u
                                                                set udg_GoblZepTime[udg_GoblZepNum] = 31+5*k
                                                                set udg_GoblZepGroup[udg_GoblZepNum] = CreateGroup()
                                                                set g = CreateGroup()
                                                                call GroupEnumUnitsInRange(g,x,y,410,null)
                                                                set i2 = 0
                                                                set u2 = FirstOfGroup(g)
                                                                loop
                                                                    exitwhen u2==null
                                                                    if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitAlly(u2,GetOwningPlayer(u)) and GetUnitAbilityLevel(u2,'A0AG')>0 and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<300 then
                                                                        call GroupAddUnit(udg_GoblZepGroup[udg_GoblZepNum],u2)
                                                                        set i2 = i2+udg_CreepCost[GetUnitAbilityLevel(u2,'A0AG')]
                                                                        call PauseUnit(u2,true)
                                                                        call ShowUnit(u2,false)
                                                                    endif
                                                                    call GroupRemoveUnit(g,u2)
                                                                    set u2=FirstOfGroup(g)
                                                                endloop
                                                                if udg_GoblZepTime[udg_GoblZepNum]-i2/10>10 then
                                                                    set udg_GoblZepTime[udg_GoblZepNum]=udg_GoblZepTime[udg_GoblZepNum]-i2/10
                                                                else
                                                                    set udg_GoblZepTime[udg_GoblZepNum]=10
                                                                endif
                                                                call DestroyGroup(g)
                                                                set g=null
                                                                set s=6
                                                                set b=false
                                                            endif
                                                        endif
                                                        set s=s+1
                                                    endloop
                                                    if b then
                                                        call IssueImmediateOrder(u,"stop")
                                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                        call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                    endif
                                                else
                                                    if udg_ModNumber==1 then
                                                        if y>-1856 and y<5536 and ((x>1086 and x<3904) or (x>-3904 and x<-1086)) then
                                                            set i = GetPlayerSlotId(p)
                                                            if (x>0 and i<3) or (x<0 and i>2) then
                                                                set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),'e01V',x,y,90)
                                                                call IssuePointOrder(u,"move",udg_PlayerHomeLocX[i+1],udg_PlayerHomeLocY[i+1]+6600)
                                                                call SetUnitColor(u,udg_PlayerColor[i+1])
                                                            else
                                                                set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),'e01V',x,y,270)
                                                                call IssuePointOrder(u,"move",-1*udg_PlayerHomeLocX[i+1],udg_PlayerHomeLocY[i+1])
                                                                call SetUnitColor(u,udg_PlayerColor[i+1])
                                                            endif
                                                            call UnitAddAbility(u,'A0G0')
                                                            call SetUnitAbilityLevel(u,'A0G0',k)
                                                            set udg_GoblZepNum = udg_GoblZepNum+1
                                                            set udg_GoblZepUnit[udg_GoblZepNum] = u
                                                            set udg_GoblZepTime[udg_GoblZepNum] = 31+5*k
                                                            set udg_GoblZepGroup[udg_GoblZepNum] = CreateGroup()
                                                            set g = CreateGroup()
                                                            call GroupEnumUnitsInRange(g,x,y,410,null)
                                                            set i2 = 0
                                                            set u2 = FirstOfGroup(g)
                                                            loop
                                                                exitwhen u2==null
                                                                if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitAlly(u2,GetOwningPlayer(u)) and GetUnitAbilityLevel(u2,'A0AG')>0 and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<300 then
                                                                    call GroupAddUnit(udg_GoblZepGroup[udg_GoblZepNum],u2)
                                                                    set i2 = i2+udg_CreepCost[GetUnitAbilityLevel(u2,'A0AG')]
                                                                    call PauseUnit(u2,true)
                                                                    call ShowUnit(u2,false)
                                                                endif
                                                                call GroupRemoveUnit(g,u2)
                                                                set u2=FirstOfGroup(g)
                                                            endloop
                                                            if udg_GoblZepTime[udg_GoblZepNum]-i2/10>10 then
                                                                set udg_GoblZepTime[udg_GoblZepNum]=udg_GoblZepTime[udg_GoblZepNum]-i2/10
                                                            else
                                                                set udg_GoblZepTime[udg_GoblZepNum]=10
                                                            endif
                                                            call DestroyGroup(g)
                                                            set g=null
                                                        else
                                                            call IssueImmediateOrder(u,"stop")
                                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                        endif
                                                    else// ModNumber==3
                                                        set b = true
                                                        set i = GetPlayerSlotId(p)/3*3
                                                        set s = 1
                                                        loop
                                                            exitwhen s>3
                                                            if y-64>GetRectMinY(udg_PlayerSectorFight[i+s]) and y+64<GetRectMaxY(udg_PlayerSectorFight[i+s]) and x-64>GetRectMinX(udg_PlayerSectorFight[i+s]) and x+64<GetRectMaxX(udg_PlayerSectorFight[i+s]) then
                                                                if udg_WaveGoingForPlayer[s] then
                                                                    set i = i+s-1
                                                                    set u = CreateUnit(PlayerSlot(i*2+6-5*(i/3)),'e01V',x,y,180+180*(i/3))
                                                                    call IssuePointOrder(u,"move",udg_PlayerHomeLocX[i+1]-4780+9560*(i/3),udg_PlayerHomeLocY[i+1])
                                                                    call SetUnitColor(u,udg_PlayerColor[i+1])
                                                                    call UnitAddAbility(u,'A0G0')
                                                                    call SetUnitAbilityLevel(u,'A0G0',k)
                                                                    set udg_GoblZepNum = udg_GoblZepNum+1
                                                                    set udg_GoblZepUnit[udg_GoblZepNum] = u
                                                                    set udg_GoblZepTime[udg_GoblZepNum] = 31+5*k
                                                                    set udg_GoblZepGroup[udg_GoblZepNum] = CreateGroup()
                                                                    set g = CreateGroup()
                                                                    call GroupEnumUnitsInRange(g,x,y,410,null)
                                                                    set i2 = 0
                                                                    set u2 = FirstOfGroup(g)
                                                                    loop
                                                                        exitwhen u2==null
                                                                        if GetUnitState(u2,UNIT_STATE_LIFE)>0 and IsUnitAlly(u2,GetOwningPlayer(u)) and GetUnitAbilityLevel(u2,'A0AG')>0 and SquareRoot((GetUnitX(u2)-x)*(GetUnitX(u2)-x)+(GetUnitY(u2)-y)*(GetUnitY(u2)-y))-2*GetUnitPointValue(u2)<300 then
                                                                            call GroupAddUnit(udg_GoblZepGroup[udg_GoblZepNum],u2)
                                                                            set i2 = i2+udg_CreepCost[GetUnitAbilityLevel(u2,'A0AG')]
                                                                            call PauseUnit(u2,true)
                                                                            call ShowUnit(u2,false)
                                                                        endif
                                                                        call GroupRemoveUnit(g,u2)
                                                                        set u2=FirstOfGroup(g)
                                                                    endloop
                                                                    if udg_GoblZepTime[udg_GoblZepNum]-i2/10>10 then
                                                                        set udg_GoblZepTime[udg_GoblZepNum]=udg_GoblZepTime[udg_GoblZepNum]-i2/10
                                                                    else
                                                                        set udg_GoblZepTime[udg_GoblZepNum]=10
                                                                    endif
                                                                    call DestroyGroup(g)
                                                                    set g=null  
                                                                    set s=3
                                                                    set b=false
                                                                endif
                                                            endif
                                                            set s=s+1
                                                        endloop
                                                        if b then
                                                            call IssueImmediateOrder(u,"stop")
                                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Выберите другое место|r")
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        else
                                            if i=='A0G1' then
                                                if GetUnitAbilityLevel(t,'S004')==0 then
                                                    set b = true
                                                    set k = GetUnitAbilityLevel(u,'A0G1')
                                                    if udg_Wave==11 then
                                                        set i = 1
                                                        loop
                                                            exitwhen i>3
                                                            if IsUnitInGroup(t,udg_PlayerWarriorsGroup[i]) then
                                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                                                call SetUnitX(t,3500)
                                                                call SetUnitY(t,-7885)
                                                                call ShowUnit(t,false)
                                                                call ShowUnit(t,true)
                                                                call SetUnitState(t,UNIT_STATE_LIFE,(1-0.1*(k-k/5))*GetUnitState(t,UNIT_STATE_LIFE)+(0.1*(k-k/5))*GetUnitState(t,UNIT_STATE_MAX_LIFE))
                                                                set i=3
                                                                set b = false
                                                            else
                                                                if IsUnitInGroup(t,udg_PlayerWarriorsGroup[i+3]) then
                                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                                                    call SetUnitX(t,-3500)
                                                                    call SetUnitY(t,-7885)
                                                                    call ShowUnit(t,false)
                                                                    call ShowUnit(t,true)
                                                                    call SetUnitState(t,UNIT_STATE_LIFE,(1-0.1*(k-k/5))*GetUnitState(t,UNIT_STATE_LIFE)+(0.1*(k-k/5))*GetUnitState(t,UNIT_STATE_MAX_LIFE))
                                                                    set i=3
                                                                    set b = false
                                                                endif
                                                            endif
                                                            set i=i+1
                                                        endloop
                                                    else
                                                        set i = 1
                                                        loop
                                                            exitwhen i>6
                                                            if IsUnitInGroup(t,udg_PlayerWarriorsGroup[i]) then
                                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                                                call SetUnitX(t,udg_PlayerHomeLocX[i])
                                                                call SetUnitY(t,udg_PlayerHomeLocY[i])
                                                                call ShowUnit(t,false)
                                                                call ShowUnit(t,true)
                                                                call SetUnitState(t,UNIT_STATE_LIFE,(1-0.05*(k+1))*GetUnitState(t,UNIT_STATE_LIFE)+(0.05*(k+1))*GetUnitState(t,UNIT_STATE_MAX_LIFE))
                                                                set i=7
                                                                set b = false
                                                            else
                                                                if IsUnitInGroup(t,udg_PlayerCreepsGroup[i]) then
                                                                    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(t),GetUnitY(t)))
                                                                    if udg_ModNumber==1 then
                                                                        call SetUnitX(t,udg_PlayerHomeLocX[i])
                                                                        call SetUnitY(t,udg_PlayerHomeLocY[i]+5500)
                                                                    else
                                                                        call SetUnitX(t,udg_PlayerHomeLocX[i])
                                                                        call SetUnitY(t,udg_PlayerHomeLocY[i]+3900)
                                                                    endif
                                                                    call ShowUnit(t,false)
                                                                    call ShowUnit(t,true)
                                                                    call SetUnitState(t,UNIT_STATE_LIFE,(1-0.05*(k+1))*GetUnitState(t,UNIT_STATE_LIFE)+(0.05*(k+1))*GetUnitState(t,UNIT_STATE_MAX_LIFE))
                                                                    set i=7
                                                                    set b = false
                                                                endif
                                                            endif
                                                            set i=i+1
                                                        endloop
                                                    endif
                                                    if b then
                                                        call IssueImmediateOrder(u,"stop")
                                                        call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                                        call DisplayTextToPlayer(p,0,0,"|cffffcc00Нельзя использовать на призванного союзника|r")
                                                    else
                                                        call UnitAddAbility(t,'S004')
                                                        set udg_TeleportSaveNum=udg_TeleportSaveNum+1
                                                        set udg_TeleportSaveTime[udg_TeleportSaveNum]=79
                                                        set udg_TeleportSaveUnit[udg_TeleportSaveNum]=t
                                                    endif
                                                else
                                                    call IssueImmediateOrder(u,"stop")
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                                    call DisplayTextToPlayer(p,0,0,"|cffffcc00Пока нельзя использовать на этого воина|r")
                                                endif
                                            endif
                                        endif
                                    else
                                        if i=='A0G3' then
                                            if udg_WaveGoingForPlayer[GetPlayerSlotId(p)+1] then
                                                call IssueImmediateOrder(u,"stop")
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+12)
                                            else
                                                set u = CreateUnit(p,'u01P',GetUnitX(u),GetUnitY(u),270)
                                                call Trig_StartConstr_ActionsDo(u)
                                                call Trig_EndConstr_ActionsDo(u)
                                            endif
                                        else
                                            if i=='A0G4' then
                                                call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl",GetUnitX(t),GetUnitY(t)))
                                                if 5+25*GetUnitAbilityLevel(u,'A0G4')>0.8*GetUnitState(t,UNIT_STATE_MAX_LIFE) then
                                                    call UnitDamageTarget(u,t,0.8*GetUnitState(t,UNIT_STATE_MAX_LIFE),true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                                else
                                                    call UnitDamageTarget(u,t,30*GetUnitAbilityLevel(u,'A0G4'),true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            else
                                
                                if i<'A0GH' then
                                    if i<'A0GD' then
                                        if i=='A0G5' then
                                            if GetUnitAbilityLevel(t,'S00N')==0 then
                                                call UnitAddAbility(t,'A0G6')
                                                call UnitAddAbility(t,'S00N')
                                                call SetUnitAbilityLevel(t,'S00N',GetUnitAbilityLevel(u,i))
                                                set udg_DemonSpellBcNum=udg_DemonSpellBcNum+1
                                                set udg_DemonSpellBcUnit[udg_DemonSpellBcNum]=t
                                                set udg_DemonSpellBcTime[udg_DemonSpellBcNum]=120
                                            else
                                                call IssueImmediateOrder(u,"stop")
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                                call DisplayTextToPlayer(p,0,0,"|c0000ffffНельзя использовать дважды на одну цель|r")
                                            endif
                                        else
                                            if i=='A0GC' and not(udg_WaveGoing) then
                                                call UnitRemoveAbility(u,'A0GC')
                                                call UnitAddAbility(u,'A0GD')
                                                call UnitAddAbility(u,'A0GE')
                                            endif
                                        endif
                                    else
                                        if i=='A0GD' then
                                            call UnitAddAbility(u,'A0GC')
                                            call UnitRemoveAbility(u,'A0GD')
                                            call UnitRemoveAbility(u,'A0GE')
                                        else
                                            if i=='A0GF' then
                                                u=GetSpellAbilityUnit()
                                                call TriggerSleepAction(0)
                                                set it = CreateItem('I016',0,0)
                                                if GetUnitAbilityLevel(u,'A0DU')==0 then
                                                    call UnitAddAbility(u,'AInv')
                                                    call UnitAddItem(u,it)
                                                    call UnitRemoveAbility(u,'AInv')
                                                else
                                                    call UnitAddItem(u,it)
                                                endif
                                                call UnitRemoveAbility(u,'B00Z')
                                                call UnitRemoveAbility(u,'BPSE')
                                                call RemoveItem(it)
                                            endif
                                        endif
                                    endif
                                    
                                else
                                    if i=='A0GH' then
                                        if GetUnitAbilityLevel(t,'A0GI')>0 then
                                            call IssueImmediateOrder(u,"stop")
                                            if GetUnitAbilityLevel(u,id)==1 then
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                            elseif GetUnitAbilityLevel(u,id)==7 then
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                            else
                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                            endif
                                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Воин уже под действием заклинания|r")
                                        else
                                            set i = 1
                                            set b = true
                                            loop
                                                exitwhen i>udg_UTN
                                                if udg_CreepTower[i]==GetUnitTypeId(t) then
                                                    set b = false
                                                    set u2 = CreateUnit(Player(15),udg_CreepWarrior[i],0,0,0)
                                                    set a = GetUnitState(u2,UNIT_STATE_MAX_LIFE)
                                                    set s = GetUnitAbilityLevel(u2,'A07K')
                                                    call RemoveUnit(u2)
                                                    if s==1 then
                                                        call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Нельзя выбрать целью этого воина|r")
                                                        call IssueImmediateOrder(u,"stop")
                                                        if GetUnitAbilityLevel(u,id)==1 then
                                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                                        elseif GetUnitAbilityLevel(u,id)==7 then
                                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                                        else
                                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                        endif
                                                    else
                                                        if a>=600 then
                                                            call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Нельзя выбирать воинов с 600 ед. здоровья и более|r")
                                                            call IssueImmediateOrder(u,"stop")
                                                            if GetUnitAbilityLevel(u,id)==1 then
                                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                                            elseif GetUnitAbilityLevel(u,id)==7 then
                                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                                            else
                                                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                            endif
                                                        else
                                                            call DestroyEffect(AddSpecialEffectTarget("RaiseSkeletonRed.mdx",t,"origin"))
                                                            call UnitAddAbility(t,'A0GI')
                                                            if GetUnitAbilityLevel(u,id)>2 then
                                                                if GetUnitAbilityLevel(u,id)>4 then
                                                                    call SetUnitAbilityLevel(t,'A0GI',3)
                                                                else
                                                                    call SetUnitAbilityLevel(t,'A0GI',2)
                                                                endif
                                                            endif
                                                        endif
                                                    endif
                                                    set i=udg_UTN
                                                endif
                                            set i=i+1
                                            endloop
                                            if b then
                                                call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Ошибка при использовании|r")
                                                call IssueImmediateOrder(u,"stop")
                                                if GetUnitAbilityLevel(u,id)==1 then
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+3)
                                                elseif GetUnitAbilityLevel(u,id)==7 then
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                                else
                                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                                                endif
                                            endif
                                                    
                                        endif
                                    endif
                                endif
                                
                            endif
                        else
                            if i<'A10A' then
                                if i<'A107' then
                                    if i=='A105' then//Катапульта на борт
                                        set k = 1
                                        loop
                                            exitwhen k>udg_KataWarriorCount*4
                                            if udg_KataWarriorTarget[k]==u then
                                                call IssueImmediateOrder(udg_KataWarriorTarget[k],"stop")
                                                call UnitRemoveAbility(udg_KataWarriorTarget[k],'A0IQ')
                                                call UnitRemoveAbility(udg_KataWarriorTarget[k],'A105')
                                                call ShowUnit(udg_KataWarriorTarget[k],false)
                                                call UnitAddAbility(udg_KataWarriorThrower[(k+3)/4],'A0IQ')
                                            endif
                                            set k=k+1
                                        endloop
                                    else
                                        if i=='A106' then
                                            set u2 = CreateUnit(p,'e019',x,y,0)
                                            call UnitAddAbility(u2,'A05I')
                                            call SetUnitAbilityLevel(u2,'A05I',GetUnitAbilityLevel(u,'A106'))
                                            call IssueImmediateOrderById(u2,852273)
                                            call UnitApplyTimedLife(u2,'BTLF',1)
                                        endif
                                    endif
                                else
                                    if i=='A107' then
                                        if GetUnitTypeId(t)=='n012' then
                                            call IssueImmediateOrder(u,"stop")
                                            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+1)
                                            call DisplayTextToPlayer(p,0,0,"|cffffcc00Нельзя использовать на этого юнита|r")
                                        else
                                            set u2 = CreateUnit(p,'e019',GetUnitX(t),GetUnitY(t)-5,270)
                                            if GetUnitAbilityLevel(t,'A02Y')>0 then
                                                call UnitAddAbility(u2,'A0AM')
                                                call SetUnitAbilityLevel(u2,'A0AM',GetUnitAbilityLevel(u,'A107'))
                                            else
                                                call UnitAddAbility(u2,'A0AH')
                                                call SetUnitAbilityLevel(u2,'A0AH',GetUnitAbilityLevel(u,'A107'))
                                            endif
                                            call UnitRemoveAbility(t,'BEer')
                                            call UnitRemoveAbility(t,'Beng')
                                            call UnitRemoveAbility(t,'Bena')
                                            call IssueTargetOrder(u2,"cyclone",t)
                                            call UnitApplyTimedLife(u2,'BTLF',1)
                                        endif
                                    else
                                        if i=='A109' then
                                            if GetUnitAbilityLevel(t,'BNdo')==1 then
                                                set b=true
                                                call UnitRemoveAbility(t,'BNdo')
                                            endif
                                            if GetUnitAbilityLevel(u,'A109')<=5 then
                                                set it = CreateItem('I002'+GetUnitAbilityLevel(u,'A109'),0,0)
                                            else
                                                set it = CreateItem('I013'+GetUnitAbilityLevel(u,'A109'),0,0)// Доп 6 и 7 уровни
                                            endif
                                            if GetUnitAbilityLevel(t,'A0DU')==0 then
                                                call UnitAddAbility(t,'AInv')
                                                call UnitAddItem(t,it)
                                                call UnitRemoveAbility(t,'AInv')
                                            else
                                                call UnitAddItem(t,it)
                                            endif
                                            call RemoveItem(it)
                                            set it = null
                                            if b then
                                                set i = GetPlayerId(GetOwningPlayer(t))
                                                set u = CreateUnit(Player(i+1-2*(i-i/2*2)),'e019',GetUnitX(t),GetUnitY(t)-5,90)
                                                call UnitAddAbility(u,'A0BW')
                                                call IssueTargetOrder(u,"doom",t)
                                            endif
                                        endif
                                    endif
                                endif
                            else
                                if i<'A10C' then
                                    if i=='A10A' then
                                        //cannibalize
                                        set udg_KataFlyCount = udg_KataFlyCount+1 
                                        
                                        set k = 1
                                        loop
                                            exitwhen k>udg_KataWarriorCount
                                            if udg_KataWarriorThrower[k]==u then
                                                if udg_KataWarriorTarget[k*4]!=null and GetUnitAbilityLevel(udg_KataWarriorTarget[k*4],'A0IQ')==0 then
                                                    call ShowUnit(udg_KataWarriorTarget[k*4],true)
                                                    set udg_KataFlyUnit[udg_KataFlyCount]=udg_KataWarriorTarget[k*4]
                                                    set udg_KataWarriorTarget[k*4]=null
                                                elseif udg_KataWarriorTarget[k*4-1]!=null and GetUnitAbilityLevel(udg_KataWarriorTarget[k*4-1],'A0IQ')==0 then
                                                    call ShowUnit(udg_KataWarriorTarget[k*4-1],true)
                                                    set udg_KataFlyUnit[udg_KataFlyCount]=udg_KataWarriorTarget[k*4-1]
                                                    set udg_KataWarriorTarget[k*4-1]=null
                                                elseif udg_KataWarriorTarget[k*4-2]!=null and GetUnitAbilityLevel(udg_KataWarriorTarget[k*4-2],'A0IQ')==0 then
                                                    call ShowUnit(udg_KataWarriorTarget[k*4-2],true)
                                                    set udg_KataFlyUnit[udg_KataFlyCount]=udg_KataWarriorTarget[k*4-2]
                                                    set udg_KataWarriorTarget[k*4-2]=null
                                                elseif udg_KataWarriorTarget[k*4-3]!=null and GetUnitAbilityLevel(udg_KataWarriorTarget[k*4-3],'A0IQ')==0 then
                                                    call ShowUnit(udg_KataWarriorTarget[k*4-3],true)
                                                    set udg_KataFlyUnit[udg_KataFlyCount]=udg_KataWarriorTarget[k*4-3]
                                                    set udg_KataWarriorTarget[k*4-3]=null
                                                endif
                                                if udg_KataWarriorTarget[k*4]==null and udg_KataWarriorTarget[k*4-1]==null and udg_KataWarriorTarget[k*4-2]==null and udg_KataWarriorTarget[k*4-3]==null then
                                                    call UnitRemoveAbility(udg_KataWarriorThrower[k],'A0IQ')
                                                endif
                                                set k = udg_KataWarriorCount
                                            endif
                                            set k=k+1
                                        endloop
                                        
                                        call SetUnitX(udg_KataFlyUnit[udg_KataFlyCount],GetUnitX(u))
                                        call SetUnitY(udg_KataFlyUnit[udg_KataFlyCount],GetUnitY(u))
                                        call SetUnitFacing(udg_KataFlyUnit[udg_KataFlyCount],GetUnitFacing(u))
                                        set udg_KataFlyX[udg_KataFlyCount]=(GetSpellTargetX()-GetUnitX(u))/20
                                        set udg_KataFlyY[udg_KataFlyCount]=(GetSpellTargetY()-GetUnitY(u))/20
                                        set udg_KataFlyA[udg_KataFlyCount] = bj_RADTODEG*Atan2(udg_KataFlyY[udg_KataFlyCount]*20,udg_KataFlyX[udg_KataFlyCount]*20)
                                        call SetUnitFacing(u,udg_KataFlyA[udg_KataFlyCount])
                                        set udg_KataFlyZ[udg_KataFlyCount] = 0
                                        call SetUnitPathing(udg_KataFlyUnit[udg_KataFlyCount], false )
                                        call PauseUnit(udg_KataFlyUnit[udg_KataFlyCount],true)
                                        call UnitAddAbility(udg_KataFlyUnit[udg_KataFlyCount],'Amrf')
                                        //set t=null
                                    else
                                        if i=='A10B' then
                                        //ПУСТО
                                        endif
                                    endif
                                else
                                    if i=='A10C' then
                                        //ПУСТО
                                    else
                                        if i=='A10D' then
                                        //ПУСТО
                                        endif
                                    endif
                                endif
                            endif
                        endif

        endif
    endif
    
    //call DisplayTextToPlayer(Player(0),0,0,"udg_ThrouneCaster mana2="+I2S(R2I(GetUnitState(udg_ThrouneCaster[GetPlayerSlotId(p)+1],UNIT_STATE_MANA))))
    /*if extraunit!=null then
        call SetUnitState(extraunit,UNIT_STATE_MANA,GetUnitState(mainunit,UNIT_STATE_MANA))
    endif*/
    //call DisplayTextToPlayer(Player(0),0,0,"udg_ThrouneCaster mana3="+I2S(R2I(GetUnitState(udg_ThrouneCaster[GetPlayerSlotId(p)+1],UNIT_STATE_MANA))))

    set p = null
    set t = null
    set u = null
    set u2 = null
endfunction

//===========================================================================
function InitTrig_UnitCastingSpell takes nothing returns nothing
    set gg_trg_UnitCastingSpell = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(1), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(2), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(3), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(4), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(5), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(6), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(7), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(8), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(9), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(10), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(11), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_UnitCastingSpell, Player(12), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerAddAction( gg_trg_UnitCastingSpell, function Trig_UnitCastingSpell_Actions )
endfunction

//===========================================================================
// Trigger: UnitAboutToCast
//===========================================================================
//TESH.scrollpos=42
//TESH.alwaysfold=0
function Trig_UnitAboutToCast_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetSpellAbilityUnit(),'A06X')==1
endfunction

function Trig_UnitAboutToCast_Actions takes nothing returns nothing
    local boolean b
    local real a
    local real r
    local unit u = GetSpellAbilityUnit()
    local real x = GetSpellTargetX()
    local real y = GetSpellTargetY()
    local integer i = GetSpellAbilityId()
    if i=='A0BC' then
	    set b = true
    	set i = 1
    	set a = GetUnitX(u)
    	set r = GetUnitY(u)
    	loop
    	    exitwhen i>16
    	    if (GetRectMinX(udg_PlayerSectorPeonsAll[i])-130<=a)and(a<=GetRectMaxX(udg_PlayerSectorPeonsAll[i])+130)and(GetRectMinY(udg_PlayerSectorPeonsAll[i])-130<=r)and(r<=GetRectMaxY(udg_PlayerSectorPeonsAll[i])+130) and RectContainsCoords(udg_PlayerSectorPeonsAll[i],x,y) then
    	        call SetUnitPosition(u,x,y)
        	//call IssuePointOrderById(u,852619,x,y)
    	        set b=false
    	    endif
    	    set i=i+1
    	endloop
    	if b then
    	    call IssueImmediateOrder(u,"stop")
    	    call DisplayTextToPlayer(GetOwningPlayer(u),0,0,"|cffffcc00Нельзя переместить сюда|r")
    	endif
        call IssuePointOrderById(u,852619,x,y)
    elseif i=='A033' then
        set b = true
        set i = 1
        set a = GetUnitX(u)
        set r = GetUnitY(u)
        loop
            exitwhen i>16
            if (GetRectMinX(udg_PlayerSectorPeonsAll[i])-130<=a)and(a<=GetRectMaxX(udg_PlayerSectorPeonsAll[i])+130)and(GetRectMinY(udg_PlayerSectorPeonsAll[i])-130<=r)and(r<=GetRectMaxY(udg_PlayerSectorPeonsAll[i])+130) and RectContainsCoords(udg_PlayerSectorPeonsAll[i],x,y) then
                call SetUnitPosition(u,x,y)
                set b=false
            endif
            set i=i+1
        endloop
        if b then
            call IssueImmediateOrder(u,"stop")
            //call DisplayTextToPlayer(GetOwningPlayer(u),0,0,"|cffffcc00Нельзя переместить сюда|r")
        endif
        call UnitRemoveAbility(u,'A033')
    elseif i=='A0IS' then
        call UnitRemoveAbility(u,'A0IQ')
        call UnitRemoveAbility(u,'A0IS')
        call IssueImmediateOrder(u,"stop")
        set i = 1
        loop
            exitwhen i>udg_KataWarriorCount*4
            if udg_KataWarriorTarget[i]==u then
                call UnitAddAbility(GetSpellTargetUnit(),'A0IQ')
                call DisplayTextToPlayer(Player(0),0,0,GetUnitName(GetSpellTargetUnit()))
                call ShowUnit(u,false)
                set udg_KataWarriorHiden[i]=true
                set i=udg_KataWarriorCount
            endif
            set i=i+1
        endloop
    endif
    set u = null
endfunction

//===========================================================================
function InitTrig_UnitAboutToCast takes nothing returns nothing
    set gg_trg_UnitAboutToCast = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_UnitAboutToCast, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_UnitAboutToCast, Condition( function Trig_UnitAboutToCast_Conditions ) )
    call TriggerAddAction( gg_trg_UnitAboutToCast, function Trig_UnitAboutToCast_Actions )
endfunction
//===========================================================================
// Trigger: UnitLosesItem
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_UnitLosesItem_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetTriggerUnit(),'A0AG')>0
endfunction

function Trig_UnitLosesItem_Actions takes nothing returns nothing
    call RemoveItem(GetManipulatedItem()) // Удаляет предметы у погибших воинов
endfunction

//===========================================================================
function InitTrig_UnitLosesItem takes nothing returns nothing
    set gg_trg_UnitLosesItem = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_UnitLosesItem, EVENT_PLAYER_UNIT_DROP_ITEM )
    call TriggerAddCondition( gg_trg_UnitLosesItem, Condition( function Trig_UnitLosesItem_Conditions ) )
    call TriggerAddAction( gg_trg_UnitLosesItem, function Trig_UnitLosesItem_Actions )
endfunction

//===========================================================================
// Trigger: NeutralSelect
//===========================================================================
//TESH.scrollpos=24
//TESH.alwaysfold=0
function Trig_NeutralSelect_Conditions takes nothing returns boolean
    return GetOwningPlayer(GetTriggerUnit())==Player(15)
endfunction

function Trig_NeutralSelect_Actions takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local unit t
    local player p = GetTriggerPlayer()
    local integer id = GetPlayerSlotId(p)+1
    local integer i
    local real a
    local string s
    if not(udg_NeutralSellectedFirstTime[id]) then
        set udg_NeutralSellectedFirstTime[id]=true
        call DisplayTimedTextToPlayer(p,0,0,10,"|cffffcc00Чтобы узнать характеристики воина, выберите его дважды|r")
        call DisplayTimedTextToPlayer(p,0,0,10," ")
    endif
    
    if IsUnitInGroup(u,udg_NeutralSellectedByPlayer[id]) then
        if udg_NeutralSellectedLastUnit[id]==u then
            if TimerGetRemaining(udg_NeutralSellectedTimer[id])>0.01 then
                set udg_NeutralSellectedLastUnit[id]=null
                call DisableTrigger(gg_trg_UEPMA)
                set i = 1
                loop
                    exitwhen i>udg_UTN
                    if udg_CreepTower[i]==GetUnitTypeId(u) then
                        set t = CreateUnit(Player(15),udg_CreepWarrior[i],0,0,0)
                        set a = GetUnitState(t,UNIT_STATE_MAX_LIFE)
                        set s = GetUnitName(t)
                        call RemoveUnit(t)
                        call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00"+s+"|r")
                        if SubString(udg_CreepDescr[i],0,4)=="0000" then
                            call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Урон: |cff00cccc0|r|cffffcc00   Скорость - |r|cff00cccc"+SubString(udg_CreepDescr[i],4,5)+","+SubString(udg_CreepDescr[i],5,7)+"|r")
                        else
                            call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Урон: |cff00cccc"+I2S(S2I(SubString(udg_CreepDescr[i],0,2))+1)+"|r|cffffcc00-|r|cff00cccc"+I2S(S2I(SubString(udg_CreepDescr[i],2,4))+S2I(SubString(udg_CreepDescr[i],0,2)))+"|r|cffffcc00   Скорость - |r|cff00cccc"+SubString(udg_CreepDescr[i],4,5)+","+SubString(udg_CreepDescr[i],5,7)+"|r")
                        endif
                        if SubString(udg_CreepDescr[i],7,10)=="000" then
                            call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Дальность атаки - |r|cff00ccccБлижний бой|r")
                        else
                            call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Дальность атаки - |r|cff00cccc"+SubString(udg_CreepDescr[i],7,10)+"|r")
                        endif
                        call DisplayTimedTextToPlayer(p,0,0,6,"|cffffcc00Здоровье - |cff00cccc"+I2S(R2I(a))+"|r|cffffcc00   Броня - |r|cff00cccc"+I2S(S2I(SubString(udg_CreepDescr[i],10,12)))+"|r|r")
                        call DisplayTimedTextToPlayer(p,0,0,6," ")
                        set i = udg_UTN
                    endif
                set i=i+1
                endloop
                call EnableTrigger(gg_trg_UEPMA)
            endif
        else
            set udg_NeutralSellectedLastUnit[id]=u
        endif
        
    else
        set udg_NeutralSellectedLastUnit[id]=u
        call GroupAddUnit(udg_NeutralSellectedByPlayer[id],u)
    endif
    call TimerStart(udg_NeutralSellectedTimer[id],1,false,null)
    set u = null
    set t = null
    set p = null
    set s = null
endfunction

//===========================================================================
function InitTrig_NeutralSelect takes nothing returns nothing
    set gg_trg_NeutralSelect = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(0), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(1), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(2), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(3), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(4), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralSelect, Player(5), EVENT_PLAYER_UNIT_SELECTED, null)
    call TriggerAddCondition( gg_trg_NeutralSelect, Condition( function Trig_NeutralSelect_Conditions ) )
    call TriggerAddAction( gg_trg_NeutralSelect, function Trig_NeutralSelect_Actions )
endfunction

//===========================================================================
// Trigger: NeutralDeselect
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_NeutralDeselect_Actions takes nothing returns nothing
    call GroupRemoveUnit(udg_NeutralSellectedByPlayer[GetPlayerSlotId(GetTriggerPlayer())],GetTriggerUnit())
endfunction

//===========================================================================
function InitTrig_NeutralDeselect takes nothing returns nothing
    set gg_trg_NeutralDeselect = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(0), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(1), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(2), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(3), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(4), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_NeutralDeselect, Player(5), EVENT_PLAYER_UNIT_DESELECTED, null)
    call TriggerAddCondition( gg_trg_NeutralDeselect, Condition( function Trig_NeutralSelect_Conditions ) )
    call TriggerAddAction( gg_trg_NeutralDeselect, function Trig_NeutralDeselect_Actions )
endfunction

//===========================================================================
// Trigger: PeonCarryesAnItem
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_PeonCarryesAnItem_Conditions takes nothing returns boolean
    return udg_WaveGoingForPlayer[GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1] and IsUnitType(GetTriggerUnit(),UNIT_TYPE_PEON)
endfunction

function Trig_PeonCarryesAnItem_Actions takes nothing returns nothing
    call SetItemDroppable(GetManipulatedItem(),false)
endfunction

//===========================================================================
function InitTrig_PeonCarryesAnItem takes nothing returns nothing
    set gg_trg_PeonCarryesAnItem = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(0), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(1), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(2), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(3), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(4), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PeonCarryesAnItem, Player(5), EVENT_PLAYER_UNIT_PICKUP_ITEM, null)
    call TriggerAddCondition( gg_trg_PeonCarryesAnItem, Condition( function Trig_PeonCarryesAnItem_Conditions ) )
    call TriggerAddAction( gg_trg_PeonCarryesAnItem, function Trig_PeonCarryesAnItem_Actions )
endfunction

//===========================================================================
// Trigger: FireLordDebuffDeath
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_FireLordDebuffDeath_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetDyingUnit(),'S00R')==1
endfunction

function Trig_FireLordDebuffDeath_Actions takes nothing returns nothing
    local unit u = GetDyingUnit()
    local unit dd = null
    local unit t = null
    local player p = null
    local group g = CreateGroup()
    local real x = GetUnitX(u)
    local real y = GetUnitY(u)
    local integer i = 1
    loop
        exitwhen i>udg_FireLordDebuffNum
        if udg_FireLordDebuffUnit[i]==u then
            set dd=udg_FireLordDebuffDealer[i]
            set i=udg_FireLordDebuffNum
        endif
        set i=i+1
    endloop
    if dd==null then
        set p = GetOwningPlayer(dd)
    endif
    call GroupEnumUnitsInRange(g,x,y,500,null)
    call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl",x,y))
    call GroupRemoveUnit(g,u)
    set t = FirstOfGroup(g)
    loop
        exitwhen t==null
        if (p!=null and IsUnitEnemy(t,p)) then
            if SquareRoot((GetUnitX(t)-x)*(GetUnitX(t)-x)+(GetUnitY(t)-y)*(GetUnitY(t)-y))-2*GetUnitPointValue(u)-2*GetUnitPointValue(t)<=200 then
                call UnitDamageTarget(dd,t,25, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
            endif
        elseif IsUnitAlly(t,GetOwningPlayer(u)) then
            if SquareRoot((GetUnitX(t)-x)*(GetUnitX(t)-x)+(GetUnitY(t)-y)*(GetUnitY(t)-y))-2*GetUnitPointValue(u)-2*GetUnitPointValue(t)<=200 then
                call UnitDamageTarget(u,t,25, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
            endif
        endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
    set p = null
endfunction

//===========================================================================
function InitTrig_FireLordDebuffDeath takes nothing returns nothing
    set gg_trg_FireLordDebuffDeath = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_FireLordDebuffDeath, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_FireLordDebuffDeath, Condition( function Trig_FireLordDebuffDeath_Conditions ) )
    call TriggerAddAction( gg_trg_FireLordDebuffDeath, function Trig_FireLordDebuffDeath_Actions )
endfunction

//===========================================================================
// Trigger: ChumZomb1
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_ChumZomb1_re takes nothing returns nothing
    local unit e = udg_UnitX
    call TriggerSleepAction(3)
    call GroupRemoveUnit(udg_ChumZomb,e)
endfunction

function Trig_ChumZomb1_FG takes nothing returns nothing
    local group g
    local integer i = 1
    local boolean b = false
    local unit e = GetEnumUnit()
    local unit u

    set g = CreateGroup()
    call GroupEnumUnitsInRange(g,GetUnitX(e),GetUnitY(e),370,null)
    set u = FirstOfGroup(g)
    loop
        exitwhen u==null
        if GetUnitAbilityLevel(u,'B012')>0 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
            if IsUnitEnemy(e,GetOwningPlayer(u)) and GetUnitAbilityLevel(u,'BUsl')==0 then
                call UnitDamageTarget(e,u,0.8,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            endif
        endif
        call GroupRemoveUnit(g,u)
        set u = FirstOfGroup(g)
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
    if GetUnitState(e,UNIT_STATE_LIFE)==0 then
	set udg_UnitX=e
	call ExecuteFunc( "Trig_ChumZomb1_re" )
    endif
    set e = null
endfunction

function Trig_ChumZomb1_Actions takes nothing returns nothing
    call ForGroup(udg_ChumZomb,function Trig_ChumZomb1_FG)
endfunction

//===========================================================================
function InitTrig_ChumZomb1 takes nothing returns nothing
    set gg_trg_ChumZomb1 = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_ChumZomb1,0.2,true)
    call TriggerAddAction( gg_trg_ChumZomb1, function Trig_ChumZomb1_Actions )
endfunction
//===========================================================================
// Trigger: Ghouls
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
function Trig_Ghouls_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local real r = GetUnitState(u,UNIT_STATE_LIFE)/GetUnitState(u,UNIT_STATE_MAX_LIFE)*10
    if r>0 then
        call SetUnitAbilityLevel(u,'A099',R2I(10-r+0))
    else
        call GroupRemoveUnit(udg_Ghouls,u)
    endif
    set u = null
endfunction

function Trig_Ghouls_Actions takes nothing returns nothing
    call ForGroup(udg_Ghouls, function Trig_Ghouls_FG)
endfunction

//===========================================================================
function InitTrig_Ghouls takes nothing returns nothing
    set gg_trg_Ghouls = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Ghouls,0.1,true)
    call TriggerAddAction( gg_trg_Ghouls, function Trig_Ghouls_Actions )
endfunction

//===========================================================================
// Trigger: golems
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_golems_heal takes nothing returns nothing
    local unit u = GetEnumUnit()
    if (GetUnitTypeId(u)=='u000' or GetUnitTypeId(u)=='u002') and GetUnitAbilityLevel(u,'BNdo')==0 then
        call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+10)
    endif
    set u = null
endfunction

function Trig_golems_Actions takes nothing returns nothing
    local group g = CreateGroup()
    local unit u = GetDyingUnit()
    if GetUnitAbilityLevel(u,'A001')==0 and GetUnitAbilityLevel(u,'A06T')==0 and GetUnitAbilityLevel(u,'A0G9')==0 then
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),370,null)
        call ForGroup(g,function Trig_golems_heal)
        call GroupClear(g)
    endif
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

//===========================================================================
function InitTrig_golems takes nothing returns nothing
    set gg_trg_golems = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    //call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(14), EVENT_PLAYER_UNIT_DEATH, null)
    //call TriggerRegisterPlayerUnitEvent(gg_trg_golems, Player(15), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddAction( gg_trg_golems, function Trig_golems_Actions )
endfunction
//===========================================================================
// Trigger: GolemiPloti
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
function Trig_GolemiPloti_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'B01I')==0 then
        call UnitRemoveAbility(u,'A009')
        call GroupRemoveUnit(udg_GolemiPloti,u)
    endif
    set u=null
endfunction

function Trig_GolemiPloti_Actions takes nothing returns nothing
    call ForGroup(udg_GolemiPloti,function Trig_GolemiPloti_Func)
endfunction

//===========================================================================
function InitTrig_GolemiPloti takes nothing returns nothing
    set gg_trg_GolemiPloti = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_GolemiPloti,0.1, true)
    call TriggerAddAction( gg_trg_GolemiPloti, function Trig_GolemiPloti_Actions )
endfunction

//===========================================================================
// Trigger: Gommunkuls
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Gommunkuls_FG takes nothing returns nothing
    local group g = CreateGroup()
    local unit e = GetEnumUnit()
    local unit u
    local real dmg
    if GetUnitState(e,UNIT_STATE_LIFE)>0 then
        if GetUnitAbilityLevel(e,'BNdo')==0 then
            call GroupEnumUnitsInRange(g,GetUnitX(e),GetUnitY(e),370,null)
            call GroupRemoveUnit(g,e)
            set u = FirstOfGroup(g)
            loop
                exitwhen u==null
                if IsUnitEnemy(u,GetOwningPlayer(e)) and GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(u,'BUsl')==0 then
                    set dmg = GetUnitState(u,UNIT_STATE_MAX_LIFE)*0.000625
                    call UnitDamageTarget(e,u,dmg,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                    set udg_GhoulDMGdeal=true
                    call UnitDamageTarget(e,u,dmg*2,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                    set udg_GhoulDMGdeal=false
                endif
                call GroupRemoveUnit(g,u)
                set u = FirstOfGroup(g)
            endloop
        endif
    else
        call GroupRemoveUnit(udg_Gommunkuls,e)
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
    set e = null
endfunction

function Trig_Gommunkuls_Actions takes nothing returns nothing
    call ForGroup(udg_Gommunkuls,function Trig_Gommunkuls_FG)
endfunction

//===========================================================================
function InitTrig_Gommunkuls takes nothing returns nothing
    set gg_trg_Gommunkuls = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Gommunkuls,0.125,true)
    call TriggerAddAction( gg_trg_Gommunkuls, function Trig_Gommunkuls_Actions )
endfunction

//===========================================================================
// Trigger: SuperGolemDeath
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SuperGolemDeath_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit())=='u002' and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')+GetUnitAbilityLevel(GetDyingUnit(),'A07K')+GetUnitAbilityLevel(GetDyingUnit(),'A0IX')==0
endfunction

function Trig_SuperGolemDeath_Actions takes nothing returns nothing
    local unit u = GetDyingUnit()
    local unit t
    local player p = GetOwningPlayer(u)
    local group g = CreateGroup()
    local real x = GetUnitX(u)
    local real y = GetUnitY(u)
    call GroupEnumUnitsInRange(g,x,y,400,null)
    call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Demon\\DemonLargeDeathExplode\\DemonLargeDeathExplode.mdl",x,y))
    call GroupRemoveUnit(g,u)
    set t = FirstOfGroup(g)
    loop
	exitwhen t==null
	if IsUnitEnemy(t,p) then
	    if SquareRoot((GetUnitX(t)-x)*(GetUnitX(t)-x)+(GetUnitY(t)-y)*(GetUnitY(t)-y))-2*GetUnitPointValue(t)<=320 then
            call UnitDamageTarget(u,t,65, true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS)
	    endif
	endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    call RemoveUnit(u)
    set g = null
    set u = null
    set p = null
endfunction

//===========================================================================
function InitTrig_SuperGolemDeath takes nothing returns nothing
    set gg_trg_SuperGolemDeath = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuperGolemDeath, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_SuperGolemDeath, Condition( function Trig_SuperGolemDeath_Conditions ) )
    call TriggerAddAction( gg_trg_SuperGolemDeath, function Trig_SuperGolemDeath_Actions )
endfunction

//===========================================================================
// Trigger: SuperGolemEffect
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_SuperGolemEffect_FG takes nothing returns nothing
    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl",GetEnumUnit(),"origin"))
endfunction

function Trig_SuperGolemEffect_Actions takes nothing returns nothing
    call ForGroup(udg_SuperGolemsEffect,function Trig_SuperGolemEffect_FG)
endfunction

//===========================================================================
function InitTrig_SuperGolemEffect takes nothing returns nothing
    set gg_trg_SuperGolemEffect = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_SuperGolemEffect,1.4,true)
    call TriggerAddAction( gg_trg_SuperGolemEffect, function Trig_SuperGolemEffect_Actions )
endfunction

//===========================================================================
// Trigger: MageNecro2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_MageNecro2_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_MageNecroC
        if udg_MageNecroN[a]<=0 or GetUnitState(udg_MageNecroU[a],UNIT_STATE_LIFE)<=0 then
            call UnitRemoveAbility(udg_MageNecroU[a],'S00D')
            call UnitRemoveAbility(udg_MageNecroU[a],'A053')
            call UnitRemoveAbility(udg_MageNecroU[a],'B01P')
            set udg_MageNecroN[a]=udg_MageNecroN[udg_MageNecroC]
            set udg_MageNecroU[a]=udg_MageNecroU[udg_MageNecroC]
            set a=a-1
            set udg_MageNecroC=udg_MageNecroC-1
        else
            set udg_MageNecroN[a]=udg_MageNecroN[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_MageNecro2 takes nothing returns nothing
    set gg_trg_MageNecro2 = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_MageNecro2, 0.2, true)
    call TriggerAddAction( gg_trg_MageNecro2, function Trig_MageNecro2_Actions )
endfunction

//===========================================================================
// Trigger: FrostKnight
//===========================================================================
//TESH.scrollpos=10
//TESH.alwaysfold=0
function Trig_FrostKnight_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local item it
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitAbilityLevel(u,'BNdo')==0 then
            if GetUnitAbilityLevel(u,'A07O')==1 then
                if GetUnitState(u,UNIT_STATE_LIFE)<=0.34*GetUnitState(u,UNIT_STATE_MAX_LIFE) and GetUnitAbilityLevel(u,'Bvul')==0 then
                    call GroupRemoveUnit(udg_FrostKnightGroup,u)
                    set it = CreateItem('I00H',0,0)
                    if GetUnitAbilityLevel(u,'A0DU')==0 then
                        call UnitAddAbility(u,'AInv')
                        call UnitAddItem(u,it)
                        call UnitRemoveAbility(u,'AInv')
                    else
                        call UnitAddItem(u,it)
                    endif
                    call UnitRemoveAbility(u,'B00Z')
                    call UnitRemoveAbility(u,'BPSE')
                    call RemoveItem(it)
                    set it  = null
                endif
            else
                if GetUnitState(u,UNIT_STATE_LIFE)<=0.67*GetUnitState(u,UNIT_STATE_MAX_LIFE) and GetUnitAbilityLevel(u,'Bvul')==0 then
                    call UnitAddAbility(u,'A07O')
                    set it = CreateItem('I00H',0,0)
                    if GetUnitAbilityLevel(u,'A0DU')==0 then
                        call UnitAddAbility(u,'AInv')
                        call UnitAddItem(u,it)
                        call UnitRemoveAbility(u,'AInv')
                    else
                        call UnitAddItem(u,it)
                    endif
                    call UnitRemoveAbility(u,'B00Z')
                    call UnitRemoveAbility(u,'BPSE')
                    call RemoveItem(it)
                    set it  = null
                endif
            endif
        endif
    else
        call GroupRemoveUnit(udg_FrostKnightGroup,u)
    endif
    set u = null
endfunction

function Trig_FrostKnight_Actions takes nothing returns nothing
    call ForGroup(udg_FrostKnightGroup,function Trig_FrostKnight_Func)
endfunction

//===========================================================================
function InitTrig_FrostKnight takes nothing returns nothing
    set gg_trg_FrostKnight = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_FrostKnight,0.07, true)
    call TriggerAddAction( gg_trg_FrostKnight, function Trig_FrostKnight_Actions )
endfunction

//===========================================================================
// Trigger: KingOfTheDeath
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_KingOfTheDeath_Second takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitTypeId(u)!='u00C' and not(IsUnitType(u,UNIT_TYPE_PEON)) then
        set udg_IntegerX = udg_IntegerX+1
    endif
    set u = null
endfunction

function Trig_KingOfTheDeath_First takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = 1
    local boolean b = false
    loop
        exitwhen i>6 or b
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            set b=true
            set udg_IntegerX=1
            call ForGroup(udg_PlayerWarriorsGroup[i], function Trig_KingOfTheDeath_Second )
            if GetUnitAbilityLevel(u,'A04Q')<udg_IntegerX and udg_IntegerX<51 then
                call SetUnitAbilityLevel(u,'A04Q',udg_IntegerX)
            else
                if GetUnitAbilityLevel(u,'A04Q')<udg_IntegerX and udg_IntegerX>=51 then
                    call SetUnitAbilityLevel(u,'A04Q',50)
                endif
            endif
        else
            if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
                set b=true
                set udg_IntegerX=1
                call ForGroup(udg_PlayerCreepsGroup[i], function Trig_KingOfTheDeath_Second )
                if GetUnitAbilityLevel(u,'A04Q')<udg_IntegerX and udg_IntegerX<51 then
                    call SetUnitAbilityLevel(u,'A04Q',udg_IntegerX)
                else
                    if GetUnitAbilityLevel(u,'A04Q')<udg_IntegerX and udg_IntegerX>=51 then
                        call SetUnitAbilityLevel(u,'A04Q',50)
                    endif
                endif
            endif
        endif
        set i=i+1
    endloop
    set u = null
endfunction

function Trig_KingOfTheDeath_Actions takes nothing returns nothing
    call ForGroup(udg_KingOfTheDeath, function Trig_KingOfTheDeath_First )
endfunction

//===========================================================================
function InitTrig_KingOfTheDeath takes nothing returns nothing
    set gg_trg_KingOfTheDeath = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_KingOfTheDeath,0.5,true)
    call TriggerAddAction( gg_trg_KingOfTheDeath, function Trig_KingOfTheDeath_Actions )
endfunction
//===========================================================================
// Trigger: UndeadPass2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_UndeadPass2_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'B00J')==1 then
	    call SetUnitState(u,UNIT_STATE_LIFE,0.9986*GetUnitState(u,UNIT_STATE_LIFE))
    endif
    if GetUnitAbilityLevel(u,'B00I')==1 then
	    call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+0.3)
    endif
    if GetUnitAbilityLevel(u,'B000')==1 then
	    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+0.06)
    endif
    set u = null
endfunction

function Trig_UndeadPass2_ForDummy takes nothing returns nothing
    local group g = CreateGroup()
    local unit u = GetEnumUnit()

    if udg_ModNumber==1 or udg_ModNumber==2 or udg_Wave==11 then
    	call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1500,null)
    else
    	call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1000,null)
    endif
    call GroupRemoveUnit(g,u)
    set u = FirstOfGroup(g)
    loop
        exitwhen u==null
	if not(IsUnitInGroup(u,udg_GroupX)) then
	    call GroupAddUnit(udg_GroupX,u)
	endif
        call GroupRemoveUnit(g,u)
        set u = FirstOfGroup(g)
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

function Trig_UndeadPass2_Actions takes nothing returns nothing
    call GroupClear(udg_GroupX)
    call DestroyGroup(udg_GroupX)
    set udg_GroupX=CreateGroup()
    call ForGroup(udg_CorruptedEarthDummy,function Trig_UndeadPass2_ForDummy)
    call ForGroup(udg_GroupX,function Trig_UndeadPass2_FG)
    call GroupClear(udg_GroupX)
endfunction

//===========================================================================
function InitTrig_UndeadPass2 takes nothing returns nothing
    set gg_trg_UndeadPass2 = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_UndeadPass2,0.2,true)
    call TriggerAddAction( gg_trg_UndeadPass2, function Trig_UndeadPass2_Actions )
endfunction
//===========================================================================
// Trigger: KozlikEnd
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_KozlikEnd_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'B009')==0 then
	if GetUnitAbilityLevel(u,'B01H')==0 then
            call UnitRemoveAbility(u,'A095')
            call UnitRemoveAbility(u,'A01K')
            call GroupRemoveUnit(udg_ElfUnderRej,u)
	endif
    else
	call SetUnitAbilityLevel(u,'A01K',20-R2I(20*GetUnitState(u,UNIT_STATE_LIFE)/(GetUnitState(u,UNIT_STATE_MAX_LIFE)+1)))
    endif
    set u=null
endfunction

function Trig_KozlikEnd_Actions takes nothing returns nothing
    call ForGroup(udg_ElfUnderRej,function Trig_KozlikEnd_Func)
endfunction

//===========================================================================
function InitTrig_KozlikEnd takes nothing returns nothing
    set gg_trg_KozlikEnd = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_KozlikEnd,0.1, true)
    call TriggerAddAction( gg_trg_KozlikEnd, function Trig_KozlikEnd_Actions )
endfunction

//===========================================================================
// Trigger: jumping1
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_jumping1_FL takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local group g
    if GetUnitState(u,UNIT_STATE_MANA)==17 then
        set g = CreateGroup()
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),650,null)
        set t = FirstOfGroup(g)
        loop
            exitwhen t==null
            if IsUnitEnemy(t,GetOwningPlayer(u)) and GetUnitState(t,UNIT_STATE_LIFE)>0 and (GetUnitTypeId(t)<'u101' or GetUnitTypeId(t)>'u105') and IsUnitVisible(t,GetOwningPlayer(u)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'A06T')==0 and GetUnitAbilityLevel(t,'Bvul')==0 then
                if IssuePointOrder(u,"dispel",GetUnitX(t),GetUnitY(t)) then
                    set udg_PJnum = udg_PJnum+1 
                    set udg_PJunit[udg_PJnum] = u
                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitAbilityLevel(u,'A07G')-1)
                    set udg_PJx[udg_PJnum] = (GetUnitX(t)-GetUnitX(u))/20
                    set udg_PJy[udg_PJnum] = (GetUnitY(t)-GetUnitY(u))/20
                    set udg_PJa[udg_PJnum] = bj_RADTODEG*Atan2(udg_PJy[udg_PJnum]*20,udg_PJx[udg_PJnum]*20)
                    call SetUnitFacing(u,udg_PJa[udg_PJnum])
                    set udg_PJtime[udg_PJnum] = 0
                    call SetUnitPathing(u, false )
                    call PauseUnit(u,true)
                    call UnitAddAbility(u,'Amrf')
                    set t=null
                else
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endif
            else
                call GroupRemoveUnit(g,t)
                set t = FirstOfGroup(g)
            endif
        endloop
        call GroupClear(g)
        call DestroyGroup(g)
        set g = null
    else
	if GetUnitState(u,UNIT_STATE_LIFE)==0 then
	    call GroupRemoveUnit(udg_CheckToJump,u)
	endif
    endif
    set u = null
    set t = null
endfunction

function Trig_jumping1_Actions takes nothing returns nothing
    call ForGroup(udg_CheckToJump,function Trig_jumping1_FL)
endfunction

//===========================================================================
function InitTrig_jumping1 takes nothing returns nothing
    set gg_trg_jumping1 = CreateTrigger(  )
    call TriggerRegisterTimerEvent( gg_trg_jumping1,0.25,true)
    call TriggerAddAction( gg_trg_jumping1, function Trig_jumping1_Actions )
endfunction

//===========================================================================
// Trigger: jumping2
//===========================================================================
//TESH.scrollpos=51
//TESH.alwaysfold=0
function Trig_jumping2_Conditions takes nothing returns boolean
    return udg_PJnum>0 or udg_PJCnum>0
endfunction

function Trig_jumping2_FG takes nothing returns nothing
    local real r
    local real x
    local real y
    local unit u = GetEnumUnit()
    if IsUnitEnemy(u,GetOwningPlayer(udg_UnitX)) and GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(u,'A06T')==0 then
        call UnitDamageTarget(udg_UnitX,u,70,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
        
        set udg_PJCnum = udg_PJCnum+1
        set udg_PJCunit[udg_PJCnum] = u
        set udg_PJCtime[udg_PJCnum] = 0
        
        set x = GetUnitX(u)-udg_RealX
        set y = GetUnitY(u)-udg_RealY
        set r = SquareRoot(x*x+y*y)
        if r>80 then
            if r<230 then
                set udg_PJCx[udg_PJCnum] = x/r*(20-10*((r-80)/150))
                set udg_PJCy[udg_PJCnum] = y/r*(20-10*((r-80)/150))
            else
                set udg_PJCx[udg_PJCnum] = x/r*10
                set udg_PJCy[udg_PJCnum] = y/r*10
            endif
        else
            set udg_PJCx[udg_PJCnum] = x/r*20
            set udg_PJCy[udg_PJCnum] = y/r*20
        endif
        if GetUnitTypeId(u)=='h005' then
            call UnitRemoveAbility(u,'S006')
            call UnitRemoveAbility(u,'B00U')
        endif
            
    endif
endfunction

function Trig_jumping2_Actions takes nothing returns nothing
    local integer i = 1
    local group g
    loop
        exitwhen i>udg_PJnum
        set udg_PJtime[i] = udg_PJtime[i]+1
        if udg_PJtime[i]<21 then
            call SetUnitFlyHeight(udg_PJunit[i],GetUnitFlyHeight(udg_PJunit[i])+26.25-udg_PJtime[i]*2.5,1500)
            call SetUnitFacing(udg_PJunit[i],udg_PJa[i])
            call SetUnitX(udg_PJunit[i],GetUnitX(udg_PJunit[i])+(udg_PJx[i]*(1+0.21-udg_PJtime[i]*0.02)))
            call SetUnitY(udg_PJunit[i],GetUnitY(udg_PJunit[i])+(udg_PJy[i]*(1+0.21-udg_PJtime[i]*0.02)))
        else
            set g = CreateGroup()
            set udg_RealX = GetUnitX(udg_PJunit[i])
            set udg_RealY = GetUnitY(udg_PJunit[i])
            set udg_UnitX = udg_PJunit[i]
            call GroupEnumUnitsInRange(g,udg_RealX,udg_RealY,230,null)
            call ForGroup(g, function Trig_jumping2_FG)
            call GroupClear(g)
            call DestroyGroup(g)
            set g = null
            call SetUnitPathing(udg_PJunit[i],true)
            call PauseUnit(udg_PJunit[i],false)
            call UnitRemoveAbility(udg_PJunit[i],'Amrf')
            set udg_PJunit[i] = udg_PJunit[udg_PJnum]
            set udg_PJx[i] = udg_PJx[udg_PJnum]
            set udg_PJy[i] = udg_PJy[udg_PJnum]
            set udg_PJa[i] = udg_PJa[udg_PJnum]
            set udg_PJtime[i] = udg_PJtime[udg_PJnum]
            set udg_PJnum = udg_PJnum-1
        endif
        set i = i+1
    endloop
    set i = 1
    loop
        exitwhen i>udg_PJCnum
        set udg_PJCtime[i] = udg_PJCtime[i]+1
        if udg_PJCtime[i]<15 then
            call SetUnitX(udg_PJCunit[i],GetUnitX(udg_PJCunit[i])+(udg_PJCx[i]*(1.15-udg_PJCtime[i]*0.02)))
            call SetUnitY(udg_PJCunit[i],GetUnitY(udg_PJCunit[i])+(udg_PJCy[i]*(1.15-udg_PJCtime[i]*0.02)))
        else
            set udg_PJCunit[i] = udg_PJCunit[udg_PJCnum]
            set udg_PJCx[i] = udg_PJCx[udg_PJCnum]
            set udg_PJCy[i] = udg_PJCy[udg_PJCnum]
            set udg_PJCtime[i] = udg_PJCtime[udg_PJCnum]
            set udg_PJCnum = udg_PJCnum-1
        endif
        set i = i+1
    endloop
endfunction

//===========================================================================
function InitTrig_jumping2 takes nothing returns nothing
    set gg_trg_jumping2 = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_jumping2,0.02,true)
    call TriggerAddCondition( gg_trg_jumping2, Condition( function Trig_jumping2_Conditions ) )
    call TriggerAddAction( gg_trg_jumping2, function Trig_jumping2_Actions )
endfunction
//===========================================================================
// Trigger: ElfWarrior
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_ElfWarrior_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit())=='n00P' and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')==0
endfunction

function Trig_ElfWarrior_Actions takes nothing returns nothing
    local unit du = GetDyingUnit()
    local unit u
    local unit t
    local integer i
    local item it
    local group g = CreateGroup()
    local boolean b
    call GroupEnumUnitsInRange(g,GetUnitX(du),GetUnitY(du),700,null)
    set u = FirstOfGroup(g)
    loop
        exitwhen u==null
        if (GetUnitTypeId(u)>='n00P' and GetUnitTypeId(u)<='n00R') and GetUnitState(u,UNIT_STATE_LIFE)>0 and IsUnitAlly(u,GetOwningPlayer(du)) then
            set b = false
            if GetUnitAbilityLevel(u,'BNdo')==1 then
                set b=true
                call UnitRemoveAbility(u,'BNdo')
            endif
            set it = CreateItem('I008',GetUnitX(u),GetUnitY(u))
            if GetUnitAbilityLevel(u,'A0DU')==0 then
                call UnitAddAbility(u,'AInv')
                call UnitAddItem(u,it)
                call UnitRemoveAbility(u,'AInv')
            else
                call UnitAddItem(u,it)
            endif
            call RemoveItem(it)
            if b then
                set i = GetPlayerId(GetOwningPlayer(u))
                set t = CreateUnit(Player(i+1-2*(i-i/2*2)),'e019',GetUnitX(u),GetUnitY(u)-5,90)
                call UnitAddAbility(t,'A0BW')
                call IssueTargetOrder(t,"doom",u)
            endif
            call GroupRemoveUnit(g,u)
            set u = FirstOfGroup(g)
        else
            call GroupRemoveUnit(g,u)
            set u = FirstOfGroup(g)
        endif
    endloop
    set du=null
    set u=null
    set it=null
    call GroupClear(g)
    call DestroyGroup(g)
    set g=null
endfunction

//===========================================================================
function InitTrig_ElfWarrior takes nothing returns nothing
    set gg_trg_ElfWarrior = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfWarrior, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_ElfWarrior, Condition( function Trig_ElfWarrior_Conditions ) )
    call TriggerAddAction( gg_trg_ElfWarrior, function Trig_ElfWarrior_Actions )
endfunction

//===========================================================================
// Trigger: Tree
//===========================================================================
//TESH.scrollpos=120
//TESH.alwaysfold=0
function Trig_Tree_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit()) == 'e00D' and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')+GetUnitAbilityLevel(GetDyingUnit(),'A07K')+GetUnitAbilityLevel(GetDyingUnit(),'A0IX')==0
endfunction

function Trig_Tree_Actions takes nothing returns nothing
    local group g = CreateGroup()
    local unit t
    local unit d
    local unit u = GetDyingUnit()
    local real x = GetUnitX(u)
    local real y = GetUnitY(u)
    local real rd
    local real ra
    local real nx
    local real ny
    local integer lvl = GetUnitAbilityLevel(GetDyingUnit(),'A06F')

    set d = CreateUnit(GetOwningPlayer(u),'e018',x,y,0)

    call SetTerrainType(x,y,'Agrd',-1,4,0)
    call SetTerrainType(x,y,'Alvd',-1,3,0)
    call SetTerrainType(x,y,'Avin',-1,2,0)
    
    set rd =  GetRandomReal(10, 180)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)    
    call CreateDestructable('B005',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,5))
    
    set rd =  GetRandomReal(10, 180)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B005',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,5))
    
    set rd =  GetRandomReal(10, 180)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B005',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,5))
    
    set rd =  GetRandomReal(10, 180)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B002',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,4))
    
    set rd =  GetRandomReal(10, 190)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B002',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,4))
    
    set rd =  GetRandomReal(10, 190)
    set ra =  GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B002',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,4))
    
    
    set nx=x+256
    set ny=y  
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x+256*Cos(45*bj_DEGTORAD)
    set ny=y+256*Sin(45*bj_DEGTORAD)
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x
    set ny=y+256
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x+256*Cos(135*bj_DEGTORAD)
    set ny=y+256*Sin(135*bj_DEGTORAD)
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x-256
    set ny=y
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x+256*Cos(225*bj_DEGTORAD)
    set ny=y+256*Sin(225*bj_DEGTORAD)
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x
    set ny=y-256
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    set nx=x+256*Cos(315*bj_DEGTORAD)
    set ny=y+256*Sin(315*bj_DEGTORAD)
    call CreateDestructable('B003',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),GetRandomInt(1,3))
    
    
    set rd = GetRandomReal(50,200)
    set ra = GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B004',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),1)
    
    set rd = GetRandomReal(50,200)
    set ra = GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B004',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),1)
    
    set rd = GetRandomReal(50,200)
    set ra = GetRandomReal(0,360)
    set nx=x+rd*Cos(ra*bj_DEGTORAD)
    set ny=y+rd*Sin(ra*bj_DEGTORAD)  
    call CreateDestructable('B004',nx,ny,GetRandomReal(0,360),GetRandomReal(0.8,1.2),1)
    
    set udg_TreeGhostNum = udg_TreeGhostNum+1
    set udg_TreeGhost[udg_TreeGhostNum] = CreateUnit(GetOwningPlayer(u),'e013',x,y,0)
    call UnitAddAbility(udg_TreeGhost[udg_TreeGhostNum],'A04V')
    call SetUnitAbilityLevel(udg_TreeGhost[udg_TreeGhostNum],'A04V',GetUnitAbilityLevel(u,'A06F'))
    call TriggerRegisterUnitInRange(gg_trg_AttackTree,udg_TreeGhost[udg_TreeGhostNum],360,null)
    call GroupEnumUnitsInRange(g,x,y,360,null)
    set t = FirstOfGroup(g)
    loop
        exitwhen t==null
        if GetRandomInt(1,3)==1 and GetUnitAbilityLevel(t,'A00N')==0 then
            set d = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
            call UnitAddAbility(d,'A04V')
            call SetUnitAbilityLevel(d,'A04V',lvl)
            call UnitApplyTimedLife(d,'BTLF',1)
            if IssueTargetOrder(d,"entanglingroots",t) then
                call UnitAddAbility(t,'A00N')
            endif
        endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    if not(IsTriggerEnabled(gg_trg_AttackTree)) then
        call EnableTrigger( gg_trg_AttackTree )
    endif
    //call RemoveUnit(u)
    set u = null
    set t = null
    set d = null
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

//===========================================================================
function InitTrig_Tree takes nothing returns nothing
    set gg_trg_Tree = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Tree, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_Tree, Condition( function Trig_Tree_Conditions ) )
    call TriggerAddAction( gg_trg_Tree, function Trig_Tree_Actions )
endfunction


//===========================================================================
// Trigger: AttackTree
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_AttackTree_Actions takes nothing returns nothing
    local integer v = GetRandomInt(1,3)
    local unit u = GetTriggerUnit()
    local real rx
    local real ry
    if v==1 and GetUnitAbilityLevel(u,'A00N')==0 then
        loop
            exitwhen v>udg_TreeGhostNum
            set rx = GetUnitX(udg_TreeGhost[v])-GetUnitX(u)
            set ry = GetUnitY(udg_TreeGhost[v])-GetUnitY(u)
            if SquareRoot(rx*rx+ry*ry)<370 then
                if IssueTargetOrder(udg_TreeGhost[v],"entanglingroots",u) then
                    call UnitAddAbility(u,'A00N')
                endif
            endif
            set v=v+1
        endloop
    endif
    set u = null
endfunction

//===========================================================================
function InitTrig_AttackTree takes nothing returns nothing
    set gg_trg_AttackTree = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AttackTree, function Trig_AttackTree_Actions )
endfunction

//===========================================================================
// Trigger: WarriorTreeOFF
//===========================================================================
//TESH.scrollpos=180
//TESH.alwaysfold=0
function Trig_WarriorTreeOFF_FG takes nothing returns nothing
    local unit t = GetEnumUnit()
    local real hp = GetUnitState(t,UNIT_STATE_LIFE)/GetUnitState(t,UNIT_STATE_MAX_LIFE)
    if GetUnitState(t,UNIT_STATE_LIFE)>0 then
        if GetUnitAbilityLevel(t,'S000')==2 then

    	    if GetUnitAbilityLevel(t,'B00M')==1 then
           	    if GetUnitAbilityLevel(t,'B02U')==1 then
                    if hp>0.64 then
                        call SetUnitAbilityLevel(t,'S000',1)
                        call SetUnitAbilityLevel(t,'A04Y',1)
                    endif
                else
                    if GetUnitAbilityLevel(t,'B02T')==1 then
                        if hp>0.62 then
                            call SetUnitAbilityLevel(t,'S000',1)
                            call SetUnitAbilityLevel(t,'A04Y',1)
                        endif
                    else
                        if GetUnitAbilityLevel(t,'B01X')==1 then
                            if hp>0.60 then
                                call SetUnitAbilityLevel(t,'S000',1)
                                call SetUnitAbilityLevel(t,'A04Y',1)
                            endif
                        else
                            if GetUnitAbilityLevel(t,'B01W')==1 then
                                if hp>0.58 then
                                    call SetUnitAbilityLevel(t,'S000',1)
                                    call SetUnitAbilityLevel(t,'A04Y',1)
                                endif
                            else
                                if GetUnitAbilityLevel(t,'B01V')==1 then
                                    if hp>0.56 then
                                        call SetUnitAbilityLevel(t,'S000',1)
                                        call SetUnitAbilityLevel(t,'A04Y',1)
                                    endif
                                else
                                    if GetUnitAbilityLevel(t,'B01U')==1 then
                                        if hp>0.54 then
                                            call SetUnitAbilityLevel(t,'S000',1)
                                            call SetUnitAbilityLevel(t,'A04Y',1)
                                        endif
                                    else
                                        if GetUnitAbilityLevel(t,'B01T')==1 then
                                            if hp>0.52 then
                                                call SetUnitAbilityLevel(t,'S000',1)
                                                call SetUnitAbilityLevel(t,'A04Y',1)
                                            endif
                                        else
                                            if GetUnitAbilityLevel(t,'B01S')==1 then
                                                if hp>0.50 then
                                                    call SetUnitAbilityLevel(t,'S000',1)
                                                    call SetUnitAbilityLevel(t,'A04Y',1)
                                                endif
                                            else
                                                if GetUnitAbilityLevel(t,'B01R')==1 then
                                                    if hp>0.48 then
                                                        call SetUnitAbilityLevel(t,'S000',1)
                                                        call SetUnitAbilityLevel(t,'A04Y',1)
                                                    endif
                                                else
                                                    if GetUnitAbilityLevel(t,'B01Q')==1 then
                                                        if hp>0.46 then
                                                            call SetUnitAbilityLevel(t,'S000',1)
                                                            call SetUnitAbilityLevel(t,'A04Y',1)
                                                        endif
                                                    else
                                                        if GetUnitAbilityLevel(t,'B00N')==1 then
                                                            if hp>0.44 then
                                                                call SetUnitAbilityLevel(t,'S000',1)
                                                                call SetUnitAbilityLevel(t,'A04Y',1)
                                                            endif
                                                        else
                                                            if GetUnitAbilityLevel(t,'B00H')==1 then
                                                                if hp>0.42 then
                                                                    call SetUnitAbilityLevel(t,'S000',1)
                                                                    call SetUnitAbilityLevel(t,'A04Y',1)
                                                                endif
                                                            else //'B002'
                                                                if hp>0.4 then
                                                                    call SetUnitAbilityLevel(t,'S000',1)
                                                                    call SetUnitAbilityLevel(t,'A04Y',1)
                                                                endif
                                                            endif
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
	        else
                call SetUnitAbilityLevel(t,'S000',1)
                call SetUnitAbilityLevel(t,'A04Y',1)
            endif
        else

            if GetUnitAbilityLevel(t,'B00M')==1 then
           	    if GetUnitAbilityLevel(t,'B02U')==1 then
           	        if hp<0.63 then
                    	call SetUnitAbilityLevel(t,'S000',2)
                    	call SetUnitAbilityLevel(t,'A04Y',2)
		            endif
                else
                    if GetUnitAbilityLevel(t,'B02T')==1 then
                        if hp<0.61 then
                            call SetUnitAbilityLevel(t,'S000',2)
                            call SetUnitAbilityLevel(t,'A04Y',2)
                        endif
                    else
                        if GetUnitAbilityLevel(t,'B01X')==1 then
                            if hp<0.59 then
                                call SetUnitAbilityLevel(t,'S000',2)
                                call SetUnitAbilityLevel(t,'A04Y',2)
                            endif
                        else
                            if GetUnitAbilityLevel(t,'B01W')==1 then
                                if hp<0.57 then
                                    call SetUnitAbilityLevel(t,'S000',2)
                                    call SetUnitAbilityLevel(t,'A04Y',2)
                                endif
                            else
                                if GetUnitAbilityLevel(t,'B01V')==1 then
                                    if hp<0.55 then
                                        call SetUnitAbilityLevel(t,'S000',2)
                                        call SetUnitAbilityLevel(t,'A04Y',2)
                                    endif
                                else
                                    if GetUnitAbilityLevel(t,'B01U')==1 then
                                        if hp<0.53 then
                                            call SetUnitAbilityLevel(t,'S000',2)
                                            call SetUnitAbilityLevel(t,'A04Y',2)
                                        endif
                                    else
                                        if GetUnitAbilityLevel(t,'B01T')==1 then
                                            if hp<0.51 then
                                                call SetUnitAbilityLevel(t,'S000',2)
                                                call SetUnitAbilityLevel(t,'A04Y',2)
                                            endif
                                        else
                                            if GetUnitAbilityLevel(t,'B01S')==1 then
                                                if hp<0.49 then
                                                    call SetUnitAbilityLevel(t,'S000',2)
                                                    call SetUnitAbilityLevel(t,'A04Y',2)
                                                endif
                                            else
                                                if GetUnitAbilityLevel(t,'B01R')==1 then
                                                    if hp<0.47 then
                                                        call SetUnitAbilityLevel(t,'S000',2)
                                                        call SetUnitAbilityLevel(t,'A04Y',2)
                                                    endif
                                                else
                                                    if GetUnitAbilityLevel(t,'B01Q')==1 then
                                                        if hp<0.45 then
                                                            call SetUnitAbilityLevel(t,'S000',2)
                                                            call SetUnitAbilityLevel(t,'A04Y',2)
                                                        endif
                                                    else
                                                        if GetUnitAbilityLevel(t,'B00N')==1 then
                                                            if hp<0.43 then
                                                                call SetUnitAbilityLevel(t,'S000',2)
                                                                call SetUnitAbilityLevel(t,'A04Y',2)
                                                            endif
                                                        else
                                                            if GetUnitAbilityLevel(t,'B00H')==1 then
                                                                if hp<0.41 then
                                                                    call SetUnitAbilityLevel(t,'S000',2)
                                                                    call SetUnitAbilityLevel(t,'A04Y',2)
                                                                endif
                                                            else //'B002'
                                                                if hp<0.39 then
                                                                    call SetUnitAbilityLevel(t,'S000',2)
                                                                    call SetUnitAbilityLevel(t,'A04Y',2)
                                                                endif
                                                            endif
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endif

	    endif
    else
        call GroupRemoveUnit(udg_EntGroupRage,t)
    endif
    set t = null
endfunction

function Trig_WarriorTreeOFF_Actions takes nothing returns nothing
    call ForGroup(udg_EntGroupRage,function Trig_WarriorTreeOFF_FG)
endfunction

//===========================================================================
function InitTrig_WarriorTreeOFF takes nothing returns nothing
    set gg_trg_WarriorTreeOFF = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_WarriorTreeOFF, 0.25, true)
    call TriggerAddAction( gg_trg_WarriorTreeOFF, function Trig_WarriorTreeOFF_Actions )
endfunction

//===========================================================================
// Trigger: DrevniDreven
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DrevniDreven_FG takes nothing returns nothing
    local unit ou = GetEnumUnit()
    local unit nu
    local integer i = 1
    local boolean b = false
    if GetUnitState(ou,UNIT_STATE_LIFE)>0 then
        set nu = CreateUnit(GetOwningPlayer(ou),'e00A',GetUnitX(ou),GetUnitY(ou),0)
	    call UnitAddAbility(nu,'A00H')
	    call UnitAddAbility(nu,'A0AG')
	    call SetUnitAbilityLevel(nu,'A0AG',61)
        call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(0,ou,nu,true,false,false)
        set udg_ElfEntNum=udg_ElfEntNum+1
        set udg_ElfEntWarrior[udg_ElfEntNum]=nu
        set udg_ElfEntTower[udg_ElfEntNum]=nu
        set nu = null
    else
        call GroupRemoveUnit(udg_DDG,ou)
    endif
    set ou = null
endfunction

function Trig_DrevniDreven_Actions takes nothing returns nothing
    if udg_WaveGoing then
        call ForGroup(udg_DDG,function Trig_DrevniDreven_FG)
        call TimerStart(udg_DDT,10,false,null)
    else
        call GroupClear(udg_DDG)
    endif
endfunction

//===========================================================================
function InitTrig_DrevniDreven takes nothing returns nothing
    set gg_trg_DrevniDreven = CreateTrigger(  )
    call TriggerRegisterTimerExpireEvent(gg_trg_DrevniDreven,udg_DDT)
    call TriggerAddAction( gg_trg_DrevniDreven, function Trig_DrevniDreven_Actions )
endfunction
//===========================================================================
// Trigger: ElfPassivkaInviz
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_ElfPassivkaInviz_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_ElfUnseenNum
        if udg_ElfUnseenTime[a]<=0 or GetUnitState(udg_ElfUnseenUnit[a],UNIT_STATE_LIFE)<=0 then
            call UnitRemoveAbility(udg_ElfUnseenUnit[a],'A0AU')
            set udg_ElfUnseenTime[a]=udg_ElfUnseenTime[udg_ElfUnseenNum]
            set udg_ElfUnseenUnit[a]=udg_ElfUnseenUnit[udg_ElfUnseenNum]
            set a=a-1
            set udg_ElfUnseenNum=udg_ElfUnseenNum-1
        else
            set udg_ElfUnseenTime[a]=udg_ElfUnseenTime[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_ElfPassivkaInviz takes nothing returns nothing
    set gg_trg_ElfPassivkaInviz = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_ElfPassivkaInviz, 0.1, true)
    call TriggerAddAction( gg_trg_ElfPassivkaInviz, function Trig_ElfPassivkaInviz_Actions )
endfunction

//===========================================================================
// Trigger: GruntSpell
//===========================================================================
//TESH.scrollpos=32
//TESH.alwaysfold=0
function Trig_armor_GruntSpellNumEnemyes takes nothing returns nothing
    local unit u = GetEnumUnit()
    if (IsUnitEnemy(u,udg_PlayerX) or GetOwningPlayer(u)==PlayerSlot(12)) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
        set udg_int=udg_int+1
    endif
    set u=null
endfunction

function Trig_GruntSpellGroup takes nothing returns nothing
    local unit u = GetEnumUnit()
    local group g
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        set g=CreateGroup()
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),400,null)
        set udg_PlayerX=GetOwningPlayer(u)
        set udg_int=1
        call ForGroup(g,function Trig_armor_GruntSpellNumEnemyes)
        if udg_int>90 then
            call SetUnitAbilityLevel(u,'A092',90)
            call SetUnitAbilityLevel(u,'A093',90)
        else
            call SetUnitAbilityLevel(u,'A092',udg_int)
            call SetUnitAbilityLevel(u,'A093',udg_int)
        endif
    else
        call GroupRemoveUnit(udg_GruntSpellGroup,u)
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g=null
    set u=null
endfunction

function Trig_GruntSpell_Actions takes nothing returns nothing
    call ForGroup(udg_GruntSpellGroup,function Trig_GruntSpellGroup)
endfunction

//===========================================================================
function InitTrig_GruntSpell takes nothing returns nothing
    set gg_trg_GruntSpell = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_GruntSpell, 0.15, true)
    call TriggerAddAction( gg_trg_GruntSpell, function Trig_GruntSpell_Actions )
endfunction

//===========================================================================
// Trigger: poison tic
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_poison_tic_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_PoisonC
        if GetUnitState(udg_PoisonU[a],UNIT_STATE_LIFE)>0 then
            if udg_PoisonD[a]==null then
                call UnitDamageTarget(null,udg_PoisonU[a],5,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            else
                call UnitDamageTarget(udg_PoisonD[a],udg_PoisonU[a],5,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            endif
            set udg_PoisonN[a]=udg_PoisonN[a]-1
            if udg_PoisonN[a]==0 then
                set udg_PoisonN[a]=udg_PoisonN[udg_PoisonC]
                set udg_PoisonU[a]=udg_PoisonU[udg_PoisonC]
                set udg_PoisonD[a]=udg_PoisonD[udg_PoisonC]
                set a=a-1
                set udg_PoisonC=udg_PoisonC-1
            endif
        else
            set udg_PoisonN[a]=udg_PoisonN[udg_PoisonC]
            set udg_PoisonU[a]=udg_PoisonU[udg_PoisonC]
            set udg_PoisonD[a]=udg_PoisonD[udg_PoisonC]
            set a=a-1
            set udg_PoisonC=udg_PoisonC-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_poison_tic takes nothing returns nothing
    set gg_trg_poison_tic = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_poison_tic, 1, true)
    call TriggerAddAction( gg_trg_poison_tic, function Trig_poison_tic_Actions )
endfunction

//===========================================================================
// Trigger: caniball start
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function beleberda_caniball_start takes nothing returns nothing
    local unit nu = GetEnumUnit()
    local real rx = GetUnitX(nu)-GetUnitX(udg_UnitX)
    local real ry = GetUnitY(nu)-GetUnitY(udg_UnitX)
    set rx = SquareRoot(rx*rx+ry*ry)
    if IsUnitAlly(nu,GetOwningPlayer(udg_UnitX)) and rx<udg_RealX and GetUnitAbilityLevel(nu,'A01A')==0 and GetUnitState(nu,UNIT_STATE_LIFE)>0 and not(IsUnitType(nu,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(nu,'Aloc')==0 and GetUnitAbilityLevel(nu,'A06T')==0 then
        set udg_RealX = rx
        set udg_UnitY = nu
    endif
    set nu = null
endfunction

function Trig_caniball_start_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local group j
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
	    if GetUnitState(u,UNIT_STATE_LIFE)<0.35*GetUnitState(u,UNIT_STATE_MAX_LIFE) and GetUnitAbilityLevel(u,'BNdo')==0 then
	        set j = CreateGroup()
            call GroupEnumUnitsInRange(j,GetUnitX(u),GetUnitY(u),190,null)
            set udg_UnitX=u
            set udg_UnitY=null
            set udg_RealX=181
            call ForGroup(j,function beleberda_caniball_start)
            if udg_UnitY!=null then
                call SetUnitFacingTimed(u,57.29583*Atan2(GetUnitY(udg_UnitY)-GetUnitY(u),GetUnitX(udg_UnitY)-GetUnitX(u)),0.3)
                call SetUnitAnimation(u, "attack slam" )
                call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+GetUnitState(udg_UnitY,UNIT_STATE_LIFE))
	            call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MAX_MANA))
                call KillUnit(udg_UnitY)
            endif
    	    call GroupClear(j)
    	    call DestroyGroup(j)
    	    set j = null
	    endif
    else
	    call GroupRemoveUnit(udg_CannibalOrc,u)
    endif
    set u = null
endfunction

function Trig_caniball_start_Actions takes nothing returns nothing
    call ForGroup(udg_CannibalOrc,function Trig_caniball_start_Func)
endfunction

//===========================================================================
function InitTrig_caniball_start takes nothing returns nothing
    set gg_trg_caniball_start = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_caniball_start, 1, true)
    call TriggerAddAction( gg_trg_caniball_start, function Trig_caniball_start_Actions )
endfunction

//===========================================================================
// Trigger: Ciclop rezist end
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Ciclop_rezist_end_Func takes nothing returns nothing
    if GetUnitAbilityLevel(GetEnumUnit(),'B01K')==0 then
        call GroupRemoveUnit(udg_Ziclops,GetEnumUnit())
        call UnitRemoveAbility(GetEnumUnit(),'A07H')
    endif
endfunction

function Trig_Ciclop_rezist_end_act takes nothing returns nothing
    call ForGroup(udg_Ziclops,function Trig_Ciclop_rezist_end_Func)
endfunction

//===========================================================================
function InitTrig_Ciclop_rezist_end takes nothing returns nothing
    set gg_trg_Ciclop_rezist_end = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Ciclop_rezist_end,0.1, true)
    call TriggerAddAction( gg_trg_Ciclop_rezist_end, function Trig_Ciclop_rezist_end_act )
endfunction

//===========================================================================
// Trigger: LightShaman
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0
function Trig_LightShaman_act takes nothing returns nothing
    local group g
    local unit u
    local player p
    local integer i = 1
    loop
        exitwhen i>udg_SferiMolniiNum
        
        if GetUnitState(udg_SferiMolniiDummi[i],UNIT_STATE_LIFE)>0 and udg_WaveGoing then
            set p = GetOwningPlayer(udg_SferiMolniiDummi[i])
	        set g = CreateGroup()
    	    call GroupEnumUnitsInRange(g,GetUnitX(udg_SferiMolniiDummi[i]),GetUnitY(udg_SferiMolniiDummi[i]),300,null)
    	    call GroupRemoveUnit(g,udg_SferiMolniiDummi[i])
    	    set u = FirstOfGroup(g)
    	    loop
                exitwhen u==null
	            if IsUnitEnemy(u,p) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                    call UnitDamageTarget(udg_SferiMolniiDealer[i],u,0.6,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
	            endif
                call GroupRemoveUnit(g,u)
                set u = FirstOfGroup(g)
    	    endloop
            set i=i+1
        else
	        call RemoveUnit(udg_SferiMolniiDummi[i])
            udg_SferiMolniiDealer[i] = udg_SferiMolniiDealer[udg_SferiMolniiNum]
            udg_SferiMolniiDummi[i] = udg_SferiMolniiDummi[udg_SferiMolniiNum]
            udg_SferiMolniiNum=udg_SferiMolniiNum-1
        endif
        
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set p = null
endfunction

//===========================================================================
function InitTrig_LightShaman takes nothing returns nothing
    set gg_trg_LightShaman = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_LightShaman,0.2, true)
    call TriggerAddAction( gg_trg_LightShaman, function Trig_LightShaman_act )
endfunction

//===========================================================================
// Trigger: BankaOrc
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_BankaOrcLoop_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_BankaOrcNum
        if udg_BankaOrcTime[a]<=0 or GetUnitState(udg_BankaOrcUnit[a],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_BankaOrcUnit[a],'A0FR')
            call UnitRemoveAbility(udg_BankaOrcUnit[a],'S00L')
            call UnitRemoveAbility(udg_BankaOrcUnit[a],'B029')
            set udg_BankaOrcTime[a]=udg_BankaOrcTime[udg_BankaOrcNum]
            set udg_BankaOrcUnit[a]=udg_BankaOrcUnit[udg_BankaOrcNum]
            set udg_BankaOrcDd[a]=udg_BankaOrcDd[udg_BankaOrcNum]
            set a=a-1
            set udg_BankaOrcNum=udg_BankaOrcNum-1
        else
            call UnitDamageTarget(udg_BankaOrcDd[a],udg_BankaOrcUnit[a],0.5,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            set udg_BankaOrcTime[a]=udg_BankaOrcTime[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_BankaOrc takes nothing returns nothing
    set gg_trg_BankaOrc = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_BankaOrc, 0.1, true)
    call TriggerAddAction( gg_trg_BankaOrc, function Trig_BankaOrcLoop_Actions )
endfunction

//===========================================================================
// Trigger: WolfEatStart
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_WolfEatStart_FGBosses takes nothing returns nothing
    local unit nu = GetEnumUnit()
    local real rx = GetUnitX(nu)-GetUnitX(udg_UnitX)
    local real ry = GetUnitY(nu)-GetUnitY(udg_UnitX)
    set rx = SquareRoot(rx*rx+ry*ry)
    if IsUnitEnemy(nu,GetOwningPlayer(udg_UnitX)) and rx<udg_RealX and GetUnitAbilityLevel(nu,'A01A')==1 and IsUnitInGroup(nu,udg_GLC) and GetUnitState(nu,UNIT_STATE_LIFE)>0 and not(IsUnitType(nu,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(nu,'Bvul')==0 and GetUnitAbilityLevel(nu,'Aloc')==0 then
        set udg_RealX = rx
        set udg_UnitY = nu
    endif
    set nu = null
endfunction

function Trig_WolfEatStart_FGAll takes nothing returns nothing
    local unit nu = GetEnumUnit()
    local real rx = GetUnitX(nu)-GetUnitX(udg_UnitX)
    local real ry = GetUnitY(nu)-GetUnitY(udg_UnitX)
    set rx = SquareRoot(rx*rx+ry*ry)
    if IsUnitEnemy(nu,GetOwningPlayer(udg_UnitX)) and rx<udg_RealX and IsUnitInGroup(nu,udg_GLC) and GetUnitState(nu,UNIT_STATE_LIFE)>0 and not(IsUnitType(nu,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(nu,'Bvul')==0 and GetUnitAbilityLevel(nu,'Aloc')==0 and GetUnitAbilityLevel(nu,'Avul')==0 then
        set udg_RealX = rx
        set udg_UnitY = nu
    endif
    set nu = null
endfunction

function Trig_WolfEatStart_FGW takes nothing returns nothing
    local group g
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitState(u,UNIT_STATE_MANA)>=50 then
            set g = CreateGroup()
            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),250,null)
            set udg_UnitX=u
            set udg_UnitY=null
            set udg_RealX=191
            if GetUnitState(u,UNIT_STATE_LIFE)>=120 then
                call ForGroup(g,function Trig_WolfEatStart_FGBosses)
                if udg_UnitY!=null then
		    if not(IssueImmediateOrder(u,"roar")) then
                    	call IssueTargetOrder(u,"magicleash",udg_UnitY)
		    endif
                endif
            else
                call ForGroup(g,function Trig_WolfEatStart_FGAll)
                if udg_UnitY!=null then
		    if not(IssueImmediateOrder(u,"roar")) then
                        call IssueTargetOrder(u,"magicleash",udg_UnitY)
		    endif
                endif
            endif
            call GroupClear(g)
            call DestroyGroup(g)
            set g = null
        endif
    else
        call GroupRemoveUnit(udg_WolfGroup,u)
    endif
    set u = null
endfunction

function Trig_WolfEatStart_Actions takes nothing returns nothing
    call ForGroup(udg_WolfGroup,function Trig_WolfEatStart_FGW)
endfunction

//===========================================================================
function InitTrig_WolfEatStart takes nothing returns nothing
    set gg_trg_WolfEatStart = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_WolfEatStart, 1.25, true)
    call TriggerAddAction( gg_trg_WolfEatStart, function Trig_WolfEatStart_Actions )
endfunction
//===========================================================================
// Trigger: WolfEat
//===========================================================================
//TESH.scrollpos=23
//TESH.alwaysfold=0
function Trig_WolfEat_FG1 takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)<=0 or GetUnitAbilityLevel(u,'B014')==0 then
        call GroupRemoveUnit(udg_WolfGroupEating,u)
        call UnitRemoveAbility(u,'A01B')
    else
        call SetUnitAnimation(u,"spell")
    endif
    set u=null
endfunction

function Trig_WolfEat_FG2 takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)<=0 or GetUnitAbilityLevel(u,'B00Z')==0 then
        call GroupRemoveUnit(udg_WolfGroupEated,u)
    else
        call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Orc\\OrcSmallDeathExplode\\OrcSmallDeathExplode.mdl",u,"chest"))
    endif
    set u=null
endfunction

function Trig_WolfEat_Actions takes nothing returns nothing
    call ForGroup(udg_WolfGroupEating,function Trig_WolfEat_FG1)
    call ForGroup(udg_WolfGroupEated,function Trig_WolfEat_FG2)
endfunction

//===========================================================================
function InitTrig_WolfEat takes nothing returns nothing
    set gg_trg_WolfEat = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_WolfEat,0.5,true)
    call TriggerAddAction( gg_trg_WolfEat, function Trig_WolfEat_Actions )
endfunction

//===========================================================================
// Trigger: OgreMagi
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_OgreMagi_Conditions takes nothing returns boolean
    return udg_OgreHitNum>0
endfunction

function Trig_OgreMagi_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_OgreHitNum
        set udg_OgreHitTime[i] = udg_OgreHitTime[i]+1
        if udg_OgreHitTime[i]<31 then
            call SetUnitX(udg_OgreHitUnit[i],GetUnitX(udg_OgreHitUnit[i])+udg_OgreHitX[i])
            call SetUnitY(udg_OgreHitUnit[i],GetUnitY(udg_OgreHitUnit[i])+udg_OgreHitY[i])
	    set i=i+1
        else
            set udg_OgreHitUnit[i] = udg_OgreHitUnit[udg_OgreHitNum]
            set udg_OgreHitX[i] = udg_OgreHitX[udg_OgreHitNum]
            set udg_OgreHitY[i] = udg_OgreHitY[udg_OgreHitNum]
            set udg_OgreHitTime[i] = udg_OgreHitTime[udg_OgreHitNum]
            set udg_OgreHitNum = udg_OgreHitNum-1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_OgreMagi takes nothing returns nothing
    set gg_trg_OgreMagi = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_OgreMagi,0.02,true)
    call TriggerAddCondition( gg_trg_OgreMagi, Condition( function Trig_OgreMagi_Conditions ) )
    call TriggerAddAction( gg_trg_OgreMagi, function Trig_OgreMagi_Actions )
endfunction

//===========================================================================
// Trigger: Kabaaan
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Kabaaan_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetSummonedUnit())=='e010'
endfunction

function Trig_Kabaaan_Actions takes nothing returns nothing
    local unit u = GetSummonedUnit()
    local unit e = GetSummoningUnit()
    local integer i = 1
    call UnitAddAbility(u,'A00H')
    call UnitAddAbility(u,'A0AG')
    loop
	exitwhen i>6
    	if IsUnitInGroup(e,udg_PlayerWarriorsGroup[i]) then
	    if udg_ModNumber==0 or udg_ModNumber==3 then
	    	call MultiboardSetPos03(i-1,-1*udg_CreepCost[1])
	    else
	    	call MultiboardSetPos12(i-1,-1*udg_CreepCost[1])
	    endif
            call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
    	    call SetUnitColor(u,udg_PlayerColor[i])
	else
	    if IsUnitInGroup(e,udg_PlayerCreepsGroup[i]) then
            	call GroupAddUnit(udg_PlayerCreepsGroup[i],u)
    	    	call SetUnitColor(u,udg_PlayerColor[i+3-6*(i/4)])
	    endif
	endif
	set i=i+1
    endloop
    set e = null
    set u = null
endfunction

//===========================================================================
function InitTrig_Kabaaan takes nothing returns nothing
    set gg_trg_Kabaaan = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Kabaaan, EVENT_PLAYER_UNIT_SUMMON )
    call TriggerAddCondition( gg_trg_Kabaaan, Condition( function Trig_Kabaaan_Conditions ) )
    call TriggerAddAction( gg_trg_Kabaaan, function Trig_Kabaaan_Actions )
endfunction

//===========================================================================
// Trigger: Kodo
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Kodo_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        set i = GetPlayerSlotId(GetOwningPlayer(u))
        set i = i/2-2+3*(i-i/2*2)
        if not(udg_StartSpellsWorkBool[i]) and GetUnitAbilityLevel(u,'A01Y')<50 then
            call SetUnitAbilityLevel(u,'A01Y',GetUnitAbilityLevel(u,'A01Y')+1)
        endif
    else
	    call GroupRemoveUnit(udg_KodoGroup,u)
    endif
    set u = null
endfunction

function Trig_Kodo_Actions takes nothing returns nothing
    call ForGroup(udg_KodoGroup,function Trig_Kodo_FG)
endfunction

//===========================================================================
function InitTrig_Kodo takes nothing returns nothing
    set gg_trg_Kodo = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Kodo,2,true)
    call TriggerAddAction( gg_trg_Kodo, function Trig_Kodo_Actions )
endfunction

//===========================================================================
// Trigger: OrcPassivka
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_OrcPassivka_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'A054')==0 and GetUnitState(u,UNIT_STATE_LIFE)<=0.55*GetUnitState(u,UNIT_STATE_MAX_LIFE) then
        call UnitAddAbility(u,'A054')
    endif
    set u = null
endfunction

function Trig_OrcPassivka_Actions takes nothing returns nothing
    local integer i
    local integer a = 1
    local unit u
    loop
        exitwhen a>6
        if IsPassChosenByPlayer(a,4) then
    	    call ForGroup(udg_PlayerWarriorsGroup[a],function Trig_OrcPassivka_Func)
    	    call ForGroup(udg_PlayerCreepsGroup[a+3-6*(a/4)],function Trig_OrcPassivka_Func)
        endif
        set a=a+1
    endloop
    set u=null
endfunction


//===========================================================================
function InitTrig_OrcPassivka takes nothing returns nothing
    set gg_trg_OrcPassivka = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_OrcPassivka,0.2, true)
    //call DisableTrigger( gg_trg_OrcPassivka )
    call TriggerAddAction( gg_trg_OrcPassivka, function Trig_OrcPassivka_Actions )
endfunction

//===========================================================================
// Trigger: ThrowerWarriors
//===========================================================================
//TESH.scrollpos=33
//TESH.alwaysfold=0
function Trig_ThrowerWarriors_Actions takes nothing returns nothing
    local integer i = 1
    local integer k
    loop
        exitwhen i>udg_KataWarriorCount
        if GetUnitState(udg_KataWarriorThrower[i],UNIT_STATE_LIFE)>0 then
            set k = 0
            loop
                exitwhen k>3
                if GetUnitState(udg_KataWarriorTarget[i*4-k],UNIT_STATE_LIFE)>0 then
                    if GetUnitAbilityLevel(udg_KataWarriorTarget[i*4-k],'A105')>0 and GetUnitCurrentOrder(udg_KataWarriorTarget[i*4-k])!=852083 then
                        //call DisplayTextToPlayer(Player(0),0,0,"yes")
                        call IssueTargetOrder(udg_KataWarriorTarget[i*4-k],"townbelloff",udg_KataWarriorThrower[i])
                        /*    call DisplayTextToPlayer(Player(0),0,0," ")
                            call DisplayTextToPlayer(Player(0),0,0,GetUnitName(udg_KataWarriorThrower[i])+" "+GetUnitName(udg_KataWarriorTarget[i*4-k]))
                            call DisplayTextToPlayer(Player(0),0,0,"i*4-k = "+I2S(i*4-k))
                        if IssueTargetOrder(udg_KataWarriorTarget[i*4-k],"townbelloff",udg_KataWarriorThrower[i]) then
                            call DisplayTextToPlayer(Player(0),0,0,"yes")
                        else
                            call DisplayTextToPlayer(Player(0),0,0,"no")
                        endif*/
                    endif
                else
                    call UnitRemoveAbility(udg_KataWarriorTarget[i*4-k],'A0IQ')
                    call UnitRemoveAbility(udg_KataWarriorTarget[i*4-k],'A105')
                    set udg_KataWarriorTarget[i*4-k]=null
                endif
                set k=k+1
            endloop
        else
            set k = 0
            loop
                exitwhen k>3
                call ShowUnit(udg_KataWarriorTarget[i*4-k],true)
                call SetUnitX(udg_KataWarriorTarget[i*4-k],GetUnitX(udg_KataWarriorThrower[i]))
                call SetUnitY(udg_KataWarriorTarget[i*4-k],GetUnitY(udg_KataWarriorThrower[i]))
                call SetUnitFacing(udg_KataWarriorTarget[i*4-k],GetUnitFacing(udg_KataWarriorThrower[i]))
                call SetUnitPathing(udg_KataWarriorTarget[i*4-k],true)
                call PauseUnit(udg_KataWarriorTarget[i*4-k],false)
                call UnitRemoveAbility(udg_KataWarriorTarget[i*4-k],'A0IQ')
                call UnitRemoveAbility(udg_KataWarriorTarget[i*4-k],'A105')
                call IssueImmediateOrder(udg_KataWarriorTarget[i*4-k],"stop")
                set udg_KataWarriorTarget[i*4-k]=null
                set k=k+1
            endloop
        endif
        
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ThrowerWarriors takes nothing returns nothing
    set gg_trg_ThrowerWarriors = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_ThrowerWarriors, 0.5, true)
    call TriggerAddAction( gg_trg_ThrowerWarriors, function Trig_ThrowerWarriors_Actions )
endfunction

//===========================================================================
// Trigger: ThrowerFly
//===========================================================================
//TESH.scrollpos=39
//TESH.alwaysfold=0
function Trig_ThrowerFly_Conditions takes nothing returns boolean
    return udg_KataFlyCount>0
endfunction

function Trig_ThrowerFly_FG takes nothing returns nothing
    local real r
    local real x
    local real y
    local unit u = GetEnumUnit()
    if IsUnitEnemy(u,GetOwningPlayer(udg_UnitX)) and GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(u,'A06T')==0 then
        call UnitDamageTarget(udg_UnitX,u,70,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
        
        set udg_PJCnum = udg_PJCnum+1
        set udg_PJCunit[udg_PJCnum] = u
        set udg_PJCtime[udg_PJCnum] = 0
        
        set x = GetUnitX(u)-udg_RealX
        set y = GetUnitY(u)-udg_RealY
        set r = SquareRoot(x*x+y*y)
        if r>80 then
            if r<230 then
                set udg_PJCx[udg_PJCnum] = x/r*(20-10*((r-80)/150))
                set udg_PJCy[udg_PJCnum] = y/r*(20-10*((r-80)/150))
            else
                set udg_PJCx[udg_PJCnum] = x/r*10
                set udg_PJCy[udg_PJCnum] = y/r*10
            endif
        else
            set udg_PJCx[udg_PJCnum] = x/r*20
            set udg_PJCy[udg_PJCnum] = y/r*20
        endif
        if GetUnitTypeId(u)=='h005' then
            call UnitRemoveAbility(u,'S006')
            call UnitRemoveAbility(u,'B00U')
        endif
            
    endif
endfunction

function Trig_ThrowerFly_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_KataFlyCount
        set udg_KataFlyZ[i] = udg_KataFlyZ[i]+1
        if udg_KataFlyZ[i]<21 then
            call SetUnitFlyHeight(udg_KataFlyUnit[i],GetUnitFlyHeight(udg_KataFlyUnit[i])+52.5-udg_KataFlyZ[i]*5,1500)
            call SetUnitFacing(udg_KataFlyUnit[i],udg_KataFlyA[i]+udg_KataFlyZ[i]*9)
            call SetUnitX(udg_KataFlyUnit[i],GetUnitX(udg_KataFlyUnit[i])+(udg_KataFlyX[i]*(1+0.21-udg_KataFlyZ[i]*0.02)))
            call SetUnitY(udg_KataFlyUnit[i],GetUnitY(udg_KataFlyUnit[i])+(udg_KataFlyY[i]*(1+0.21-udg_KataFlyZ[i]*0.02)))
        else
            call SetUnitPathing(udg_KataFlyUnit[i],true)
            call PauseUnit(udg_KataFlyUnit[i],false)
            call UnitRemoveAbility(udg_KataFlyUnit[i],'Amrf')
            set udg_KataFlyUnit[i] = udg_KataFlyUnit[udg_KataFlyCount]
            set udg_KataFlyX[i] = udg_KataFlyX[udg_KataFlyCount]
            set udg_KataFlyY[i] = udg_KataFlyY[udg_KataFlyCount]
            set udg_KataFlyA[i] = udg_KataFlyA[udg_KataFlyCount]
            set udg_KataFlyZ[i] = udg_KataFlyZ[udg_KataFlyCount]
            set udg_KataFlyCount = udg_KataFlyCount-1
        endif
        set i = i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ThrowerFly takes nothing returns nothing
    set gg_trg_ThrowerFly = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_ThrowerFly,0.02,true)
    call TriggerAddCondition( gg_trg_ThrowerFly, Condition( function Trig_ThrowerFly_Conditions ) )
    call TriggerAddAction( gg_trg_ThrowerFly, function Trig_ThrowerFly_Actions )
endfunction
//===========================================================================
// Trigger: arhangels
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0
function Trig_arhangels_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)/GetUnitState(u,UNIT_STATE_MAX_LIFE)>0.5 then
        if GetUnitTypeId(u)=='h00A' then
            call SetUnitAbilityLevel(u,'A00V',1)
        else
            call SetUnitAbilityLevel(u,'A00V',2)
        endif
    else
        if GetUnitState(u,UNIT_STATE_LIFE)>0 then
            call SetUnitAbilityLevel(u,'A00V',3)
        else
            call GroupRemoveUnit(udg_arhangels,u)
        endif
    endif
    set u = null
endfunction

function Trig_arhangels_Actions takes nothing returns nothing
    call ForGroup(udg_arhangels, function Trig_arhangels_FG)
endfunction

//===========================================================================
function InitTrig_arhangels takes nothing returns nothing
    set gg_trg_arhangels = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_arhangels,0.2,true)
    call TriggerAddAction( gg_trg_arhangels, function Trig_arhangels_Actions )
endfunction

//===========================================================================
// Trigger: Serafim
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_Serafim_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit())=='h00B' and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')==0
endfunction

function Trig_Serafim_Actions takes nothing returns nothing
    local unit t
    local unit u = GetDyingUnit()
    local group g = CreateGroup()
    local real x
    local real y
    local integer i
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),460,null)
    call GroupRemoveUnit(g,u)
    set t = FirstOfGroup(g)
    loop
        exitwhen t==null
        if IsUnitEnemy(t,GetOwningPlayer(u)) and GetUnitState(t,UNIT_STATE_LIFE)>0 then
            set x = GetUnitX(t)-GetUnitX(u)
            set y = GetUnitY(t)-GetUnitY(u)
            set x = SquareRoot(x*x+y*y)-2*GetUnitPointValue(t)
            if x<=270 then
                set i = GetUnitAbilityLevel(t,'A0GA')
                if i==0 then
                    call UnitAddAbility(t,'A0GA')
                    call SetUnitAbilityLevel(t,'A0GA',2)
                    call UnitAddAbility(t,'S00P')
                else
                    if i<50 then
                        call SetUnitAbilityLevel(t,'A0GA',i+2)
                    else
                        if i==50 then
                            call SetUnitAbilityLevel(t,'A0GA',51)
                        endif
                    endif
                endif
                call UnitDamageTarget(u,t,72+i*16,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            endif
        endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\HCancelDeath\\HCancelDeath.mdl",GetUnitX(u),GetUnitY(u)))
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

//===========================================================================
function InitTrig_Serafim takes nothing returns nothing
    set gg_trg_Serafim = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_Serafim, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_Serafim, Condition( function Trig_Serafim_Conditions ) )
    call TriggerAddAction( gg_trg_Serafim, function Trig_Serafim_Actions )
endfunction


//===========================================================================
// Trigger: FootArch
//===========================================================================
//TESH.scrollpos=18
//TESH.alwaysfold=0
function Trig_FootArch_Actions takes nothing returns nothing
    local integer i = 1
    local integer a
    local integer lvl
    local real x
    local real y
    local player p
    loop
	exitwhen i>udg_FootmenNum
	if GetUnitState(udg_FootmenMass[i],UNIT_STATE_LIFE)>0 then
	    set lvl=0
	    set p=GetOwningPlayer(udg_FootmenMass[i])
	    set x = GetUnitX(udg_FootmenMass[i])
	    set y = GetUnitY(udg_FootmenMass[i])
	    set a=1
	    loop
	        exitwhen a>udg_FootmenNum
	        if IsUnitAlly(udg_FootmenMass[a],p) and ((x-GetUnitX(udg_FootmenMass[a]))*(x-GetUnitX(udg_FootmenMass[a])))+((y-GetUnitY(udg_FootmenMass[a]))*(y-GetUnitY(udg_FootmenMass[a])))<1250*1250 then
		    set lvl=lvl+1
	        endif
	        set a=a+1
	    endloop
    	    call SetUnitAbilityLevel(udg_FootmenMass[i],'A058',lvl)
	    set i=i+1
	else
	    set udg_FootmenMass[i]=udg_FootmenMass[udg_FootmenNum]
	    set udg_FootmenNum=udg_FootmenNum-1
	endif
    endloop
    
    set i=1
    loop
	exitwhen i>udg_ArcherNum
	if GetUnitState(udg_ArcherMass[i],UNIT_STATE_LIFE)>0 then
	    set lvl=0
	    set p=GetOwningPlayer(udg_ArcherMass[i])
	    set x = GetUnitX(udg_ArcherMass[i])
	    set y = GetUnitY(udg_ArcherMass[i])
	    set a=1
	    loop
	        exitwhen a>udg_ArcherNum
	        if IsUnitAlly(udg_ArcherMass[a],p) and ((x-GetUnitX(udg_ArcherMass[a]))*(x-GetUnitX(udg_ArcherMass[a])))+((y-GetUnitY(udg_ArcherMass[a]))*(y-GetUnitY(udg_ArcherMass[a])))<850*850 then
		    set lvl=lvl+1
	        endif
	        set a=a+1
	    endloop
    	    call SetUnitAbilityLevel(udg_ArcherMass[i],'A059',lvl)
	    set i=i+1
	else
	    set udg_ArcherMass[i]=udg_ArcherMass[udg_ArcherNum]
	    set udg_ArcherNum=udg_ArcherNum-1
	endif
    endloop
    set p = null
endfunction

//===========================================================================
function InitTrig_FootArch takes nothing returns nothing
    set gg_trg_FootArch = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_FootArch, 1, true)
    call TriggerAddAction( gg_trg_FootArch, function Trig_FootArch_Actions )
endfunction
//===========================================================================
// Trigger: KnightGo
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function beleberda_nesysvetnaya takes nothing returns nothing
    local unit u = GetEnumUnit()
    local real ux=GetUnitX(u)
    local real uy=GetUnitY(u)
    local real a=180/bj_PI*Atan2(GetUnitY(udg_UnitX)-uy,GetUnitX(udg_UnitX)-ux)
    local real d=SquareRoot((GetUnitX(udg_UnitX)-ux)*(GetUnitX(udg_UnitX)-ux)+(GetUnitY(udg_UnitX)-uy)*(GetUnitY(udg_UnitX)-uy))-2*GetUnitPointValue(u)-64
    if IsUnitEnemy(udg_UnitX,GetOwningPlayer(u)) and d<75 and GetUnitAbilityLevel(u,'Amrf')==0 and not(IsUnitType(u,UNIT_TYPE_FLYING)) and GetUnitAbilityLevel(u,'Aloc')==0 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
        call UnitDamageTarget(udg_UnitX,u,0.225,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
        if GetUnitAbilityLevel(u,'B00U')==0 or (GetUnitTypeId(u)=='e008' and GetUnitAbilityLevel(u,'Amrf')>0) then
            call SetUnitX(u,ux-(75.01-d)*Cos(a*bj_PI/180))
            call SetUnitY(u,uy-(75.01-d)*Sin(a*bj_PI/180))
        endif
    endif
    set u = null
endfunction

function Trig_KnightGo_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local group j = CreateGroup()
    if GetUnitAbilityLevel(u,'B00U')>0 then
        call GroupEnumUnitsInRange(j,GetUnitX(u),GetUnitY(u),250,null)
        call GroupRemoveUnit(j,u)
        set udg_UnitX=u
        call ForGroup(j,function beleberda_nesysvetnaya)
    else
        call GroupRemoveUnit(udg_Horses,u)
	call UnitRemoveAbility(u,'A0AE')
    endif
    call GroupClear(j)
    call DestroyGroup(j)
    set j = null
    set u = null
endfunction

function Trig_KnightGo_Actions takes nothing returns nothing
    call ForGroup(udg_Horses,function Trig_KnightGo_Func)
endfunction

//===========================================================================
function InitTrig_KnightGo takes nothing returns nothing
    set gg_trg_KnightGo = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_KnightGo,0.016, true)
    call TriggerAddAction( gg_trg_KnightGo, function Trig_KnightGo_Actions )
endfunction

//===========================================================================
// Trigger: SHorses
//===========================================================================
//TESH.scrollpos=16
//TESH.alwaysfold=0
function Trig_SHorses_Func takes nothing returns nothing
    local integer n = 0
    local integer i = 0
    local group g = CreateGroup()
    local unit u = GetEnumUnit()
    local unit t
    local player p = GetOwningPlayer(u)
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then 
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1200,null)
        call GroupRemoveUnit(g,u)
        set t=FirstOfGroup(g)
        loop
            exitwhen t==null
            if GetUnitTypeId(t)=='h006' and GetUnitState(t,UNIT_STATE_LIFE)>0 and IsUnitAlly(t,p) then
                set i=i+1
            endif
            call GroupRemoveUnit(g,t)
            set t=FirstOfGroup(g)
        endloop
        //call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+I2R(i)/16)
        if i>6 then
            set i=6
        endif
        loop
            exitwhen n>5
            if i!=n+1 then
                call UnitRemoveAbility(u,'A06N'+n)
            else
                call UnitAddAbility(u,'A06N'+n)
            endif
            set n=n+1
        endloop
    else
        call GroupRemoveUnit(udg_SHorses,u)
        call IssueImmediateOrder(u,"stop")
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set p = null
    set u = null
    set t = null
endfunction

function Trig_SHorses_Actions takes nothing returns nothing
    call ForGroup(udg_SHorses,function Trig_SHorses_Func)
endfunction

//===========================================================================
function InitTrig_SHorses takes nothing returns nothing
    set gg_trg_SHorses = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_SHorses,0.125, true)
    call TriggerAddAction( gg_trg_SHorses, function Trig_SHorses_Actions )
endfunction

//===========================================================================
// Trigger: Tseliteli
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Tseliteli_FG takes nothing returns nothing
    local group g = CreateGroup()
    local unit e = GetEnumUnit()
    local unit u
    local player p = GetOwningPlayer(e)
    local integer i = 1
    if GetUnitState(e,UNIT_STATE_LIFE)>0 then
        call GroupEnumUnitsInRange(g,GetUnitX(e),GetUnitY(e),700,null)
        set u = FirstOfGroup(g)
        loop
            exitwhen u==null
            if GetUnitAbilityLevel(u,'B004')>0 and GetUnitState(u,UNIT_STATE_LIFE)>0 and IsUnitAlly(u,p) and GetUnitAbilityLevel(e,'BNdo')==0 then
                call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+0.05)
            endif
            call GroupRemoveUnit(g,u)
            set u = FirstOfGroup(g)
        endloop
        set u=null
        call GroupClear(g)
    else
        call GroupRemoveUnit(udg_tseliteli,e)
    endif
    call DestroyGroup(g)
    set g=null
    set e=null
    set p=null
endfunction

function Trig_Tseliteli_Actions takes nothing returns nothing
    call ForGroup(udg_tseliteli,function Trig_Tseliteli_FG)
endfunction

//===========================================================================
function InitTrig_Tseliteli takes nothing returns nothing
    set gg_trg_Tseliteli = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Tseliteli,0.05,true)
    call TriggerAddAction( gg_trg_Tseliteli, function Trig_Tseliteli_Actions )
endfunction

//===========================================================================
// Trigger: Peasant
//===========================================================================
//TESH.scrollpos=13
//TESH.alwaysfold=0
function Trig_Peasant_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitAbilityLevel(u,'B00R')==0 then
	    call SetUnitAbilityLevel(u,'A00F',1)
        else
	    call SetUnitAbilityLevel(u,'A00F',2)
        endif
    else
	call GroupRemoveUnit(udg_PeasantMiss,u)
    endif
    set u = null
endfunction

function Trig_Peasant_Actions takes nothing returns nothing
    call ForGroup(udg_PeasantMiss,function Trig_Peasant_Func)
endfunction

//===========================================================================
function InitTrig_Peasant takes nothing returns nothing
    set gg_trg_Peasant = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Peasant,1, true)
    call TriggerAddAction( gg_trg_Peasant, function Trig_Peasant_Actions )
endfunction
//===========================================================================
// Trigger: HumPalaLoop
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_HumPalaAura_Func takes nothing returns nothing
    local unit t
    local unit u = GetEnumUnit()
    local player p = GetOwningPlayer(u)
    local group g = CreateGroup()
    local boolean b = true
    local integer i
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1350,null)
        set t = FirstOfGroup(g)
        loop
            exitwhen t==null
            if GetOwningPlayer(t)==p and GetUnitAbilityLevel(t,'B02P')==1 and GetUnitAbilityLevel(t,'A06T')==0 and not(IsUnitType(t,UNIT_TYPE_STRUCTURE)) and not(IsUnitType(t,UNIT_TYPE_PEON)) then
                if GetUnitTypeId(t)!='h01N' and GetUnitTypeId(t)!='h01Q' then
                    set b = false
                endif
                call UnitAddAbility(t,'A0FS')
                if GetUnitAbilityLevel(t,'A0AG')>0 then
                    call SetUnitAbilityLevel(t,'A0FS',1+udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]/25)
                endif
                call GroupAddUnit(udg_GroupX,t)
                call GroupRemoveUnit(udg_HumPalaAuraPrevious1,t)
            endif
            call GroupRemoveUnit(g,t)
            set t = FirstOfGroup(g)
        endloop
        if b and GetUnitAbilityLevel(u,'Bvul')==1 then
            set i = GetPlayerSlotId(p)
            set i = i/2-2+3*(i-i/2*2)
            if not(udg_StartSpellsWorkBool[i]) then
                call UnitRemoveAbility(u,'Bvul')
            endif
        endif
    else
        call GroupRemoveUnit(udg_HumPalaAura1,u)
    endif
    call DestroyGroup(g)
    set g = null
    set u = null
    set p = null
endfunction
           
function Trig_PalaHeal_end takes nothing returns nothing
    local unit u = udg_UnitX
    call TriggerSleepAction(2)
    call GroupRemoveUnit(udg_CastingPalaHealGroup,u)
endfunction

function Trig_HumPalaLoop_Actions takes nothing returns nothing
    local integer i = 1
    local integer s
    local group g = CreateGroup()
    local player p
    local unit u
    local unit t
    local real a
    local boolean b
    local item it
    loop
        exitwhen i>udg_PalaNum
        if GetUnitState(udg_PalaUnit[i],UNIT_STATE_LIFE)<=0 then
            set udg_PalaTime[i]=udg_PalaTime[udg_PalaNum]
            set udg_PalaUnit[i]=udg_PalaUnit[udg_PalaNum]
            set udg_PalaNum=udg_PalaNum-1
            set i=i-1
        else
                  
            set s = GetPlayerSlotId(GetOwningPlayer(udg_PalaUnit[i]))
            set s = s/2-2+3*(s-s/2*2)
            
            
            if udg_PalaTime[i]<61 then
                if udg_PalaTime[i]==0 then
                    set udg_PalaTime[i]=1
                    if GetUnitAbilityLevel(udg_PalaUnit[i],'BNdo')==1 then
                        set b=true
                        call UnitRemoveAbility(udg_PalaUnit[i],'BNdo')
                    else
                        set b=false
                    endif
                    set it = CreateItem('I015',0,0)
                    if GetUnitAbilityLevel(udg_PalaUnit[i],'A0DU')==0 then
                        call UnitAddAbility(udg_PalaUnit[i],'AInv')
                        call UnitAddItem(udg_PalaUnit[i],it)
                        call UnitRemoveAbility(udg_PalaUnit[i],'AInv')
                    else
                        call UnitAddItem(udg_PalaUnit[i],it)
                    endif
                    call RemoveItem(it)
                    if b then
                        set i = GetPlayerId(GetOwningPlayer(udg_PalaUnit[i]))
                        set t = CreateUnit(Player(i+1-2*(i-i/2*2)),'e019',GetUnitX(udg_PalaUnit[i]),GetUnitY(udg_PalaUnit[i])-5,90)
                        call UnitAddAbility(t,'A0BW')
                        call IssueTargetOrder(t,"doom",udg_PalaUnit[i])
                    endif
                else
                    if GetUnitAbilityLevel(udg_PalaUnit[i],'Bvul')>0 then
                        if not(udg_StartSpellsWorkBool[s]) then
                            if udg_PalaTime[i]==60 then
                                call UnitRemoveAbility(udg_PalaUnit[i],'Bvul')
                            endif
                            set udg_PalaTime[i]=udg_PalaTime[i]+1
                        endif
                    else
                        set udg_PalaTime[i]=61
                    endif
                endif
            endif
            
            if GetUnitState(udg_PalaUnit[i],UNIT_STATE_MANA)>=12 and GetUnitCurrentOrder(udg_PalaUnit[i])!=852501 then// and not(udg_StartSpellsWorkBool[s])
                set p = GetOwningPlayer(udg_PalaUnit[i])
                call GroupEnumUnitsInRange(g,GetUnitX(udg_PalaUnit[i]),GetUnitY(udg_PalaUnit[i]),800,null)
                set a = 25
                set u = null
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and not(IsUnitInGroup(t,udg_CastingPalaHealGroup)) and GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)>a and not(IsUnitType(t,UNIT_TYPE_PEON)) then
                        set a=GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE)      
                        set u=t
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
                if u!=null then
                    call GroupAddUnit(udg_CastingPalaHealGroup,u)
                    call IssueTargetOrder(udg_PalaUnit[i],"healingwave",u)
                    set udg_UnitX = u
                    call ExecuteFunc( "Trig_PalaHeal_end" )
                endif
                call GroupClear(g)
            endif
        endif
        set i=i+1
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set p = null
    set u = null
    set t = null
    set it = null
    
    
    call GroupClear(udg_GroupX)
    call ForGroup(udg_HumPalaAura1,function Trig_HumPalaAura_Func)
    set u = FirstOfGroup(udg_HumPalaAuraPrevious1)
    
    loop
        exitwhen u==null
        call UnitRemoveAbility(u,'A0FS')
        call UnitRemoveAbility(u,'B02P')
        call GroupRemoveUnit(udg_HumPalaAuraPrevious1,u)
        set u = FirstOfGroup(udg_HumPalaAuraPrevious1)
    endloop
    
    call DestroyGroup(udg_HumPalaAuraPrevious1)
    set udg_HumPalaAuraPrevious1 = udg_GroupX
    set udg_GroupX = CreateGroup()
    set u = null
endfunction

//===========================================================================
function InitTrig_HumPalaLoop takes nothing returns nothing
    set gg_trg_HumPalaLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_HumPalaLoop, 0.25, true)
    call TriggerAddAction( gg_trg_HumPalaLoop, function Trig_HumPalaLoop_Actions )
endfunction

//===========================================================================
// Trigger: HumPalaHeal
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_HumPalaHeal_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_HumPalaHealN
        if udg_HumPalaHealT[a]<=0 or GetUnitState(udg_HumPalaHealU[a],UNIT_STATE_LIFE)<=0 then
            if GetUnitState(udg_HumPalaHealU[a],UNIT_STATE_LIFE)>0 then
                //call SetUnitState(udg_HumPalaHealU[a],UNIT_STATE_LIFE,GetUnitState(udg_HumPalaHealU[a],UNIT_STATE_LIFE)+100)
                //call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl",udg_HumPalaHealU[a],"origin"))
            endif
            call UnitRemoveAbility(udg_HumPalaHealU[a],'A0DS')
            call UnitRemoveAbility(udg_HumPalaHealU[a],'S00K')
            call UnitRemoveAbility(udg_HumPalaHealU[a],'B02O')
            set udg_HumPalaHealT[a]=udg_HumPalaHealT[udg_HumPalaHealN]
            set udg_HumPalaHealU[a]=udg_HumPalaHealU[udg_HumPalaHealN]
            set udg_HumPalaHealN=udg_HumPalaHealN-1
            set a=a-1
        else
            set udg_HumPalaHealT[a]=udg_HumPalaHealT[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_HumPalaHeal takes nothing returns nothing
    set gg_trg_HumPalaHeal = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_HumPalaHeal, 0.1, true)
    call TriggerAddAction( gg_trg_HumPalaHeal, function Trig_HumPalaHeal_Actions )
endfunction

//===========================================================================
// Trigger: HumPassivka
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_HumPassivka_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetDyingUnit(),'A0AG')>0 and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')==0
endfunction

function Trig_HumPassivka_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = 1
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        loop
            exitwhen i>6
            if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
                if IsPassChosenByPlayer(i,1) and GetUnitAbilityLevel(u,'A00X')<15 and IsUnitAlly(u,udg_PlayerY) then
                    if GetUnitAbilityLevel(u,'A00X')>0 then
                        if GetUnitAbilityLevel(u,'A00X')==5 then
                            call UnitAddAbility(u,'A0DE')
                        endif
                        call SetUnitAbilityLevel(u,'A00X',GetUnitAbilityLevel(u,'A00X')+1)
                    else
                        call UnitAddAbility(u,'A00X')
                    endif
                endif
            else
                if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
                    if IsPassChosenByPlayer(3-6*(i/4)+i,1) and GetUnitAbilityLevel(u,'A00X')<15 and IsUnitAlly(u,udg_PlayerY) then
                        if GetUnitAbilityLevel(u,'A00X')>0 then
                            if GetUnitAbilityLevel(u,'A00X')==5 then
                                call UnitAddAbility(u,'A0DE')
                            endif
                            call SetUnitAbilityLevel(u,'A00X',GetUnitAbilityLevel(u,'A00X')+1)
                        else
                            call UnitAddAbility(u,'A00X')
                        endif
                    endif
                endif
            endif
            set i=i+1
        endloop
    endif
    set u = null
endfunction

function Trig_HumPassivka_Actions takes nothing returns nothing
    local group g
    local unit u = GetDyingUnit()
    local integer id = GetUnitTypeId(u)
    set g = CreateGroup()
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1400,null)
    set udg_PlayerY = GetOwningPlayer(u)
    call ForGroup(g,function Trig_HumPassivka_FG)
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

//===========================================================================
function InitTrig_HumPassivka takes nothing returns nothing
    set gg_trg_HumPassivka = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_HumPassivka, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_HumPassivka, function Trig_HumPassivka_Actions )
    call TriggerAddCondition( gg_trg_HumPassivka, Condition( function Trig_HumPassivka_Conditions ) )
endfunction

//===========================================================================
// Trigger: MargolSpell
//===========================================================================
//TESH.scrollpos=30
//TESH.alwaysfold=0
function Trig_MargolSpell_end takes nothing returns nothing
    local unit u = udg_UnitX
    call TriggerSleepAction(3.2)
    call GroupRemoveUnit(udg_MargolSpellCasting,u)
endfunction

function Trig_MargolSpell_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local unit e = null
    local player p
    local real hp = 0
    local integer i
    local integer num = 0
    local group g
    local group j
    local boolean b = false
	if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) then// and GetUnitCurrentOrder(u)!=852527
            set g = CreateGroup()
            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),490,null)
            set p = GetOwningPlayer(u)
            set t = FirstOfGroup(g)
            loop
                exitwhen t==null
                if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and not(IsUnitInGroup(t,udg_MargolSpellCasting)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'B02Q')==0 then
                    set b = true
                    call GroupClear(g)
                    set t = null
                else
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endif
            endloop
        
            if b then
			    set j = CreateGroup()
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1000,null)
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>10 and GetUnitAbilityLevel(t,'B02Q')==0 and not(IsUnitInGroup(t,udg_MargolSpellCasting)) and IsUnitVisible(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>=hp and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 then
                        if GetUnitLevel(t)==hp then
                            call GroupAddUnit(j,t)
                            set num = num + 1
                        else
                            call GroupClear(j)
                            call GroupAddUnit(j,t)
                            set hp = GetUnitState(t,UNIT_STATE_LIFE)
                            set num = 1
                        endif
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
                if hp>0 then
                    set t = FirstOfGroup(j)
                    set i=GetRandomInt(1,num)
                    set num=1
                    loop
                        exitwhen t==null
                        if i==num then
                            call GroupAddUnit(udg_MargolSpellCasting,t)
                            set udg_UnitX = t
                            call IssueTargetOrder(u,"acidbomb",t)
                            call ExecuteFunc("Trig_MargolSpell_end")
                        endif
                        call GroupRemoveUnit(j,t)
                        set t = FirstOfGroup(j)
				        set num = num + 1
                    endloop
                endif
            endif
            call GroupClear(j)
            call DestroyGroup(j)
            call GroupClear(g)
            call DestroyGroup(g)
            set j = null
            set g = null
        endif
        
    else
        call GroupRemoveUnit(udg_MargolDaggerGroup,u)
    endif
    set u = null
    set e = null
    set t = null
    set p = null
endfunction

function Trig_MargolSpell_Actions takes nothing returns nothing
    call ForGroup(udg_MargolDaggerGroup,function Trig_MargolSpell_FG)
endfunction

//===========================================================================
function InitTrig_MargolSpell takes nothing returns nothing
    set gg_trg_MargolSpell = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_MargolSpell, 0.4, true)
    call TriggerAddAction( gg_trg_MargolSpell, function Trig_MargolSpell_Actions )
endfunction
//===========================================================================
// Trigger: MargolLoop
//===========================================================================
//TESH.scrollpos=2
//TESH.alwaysfold=0
function Trig_MargolLoop_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_MargolDaggerNum
        if udg_MargolDaggerTime[a]<=0 or GetUnitState(udg_MargolDaggerUnit[a],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_MargolDaggerUnit[a],'S00M')
            call UnitRemoveAbility(udg_MargolDaggerUnit[a],'B02Q')
            call UnitRemoveAbility(udg_MargolDaggerUnit[a],'A0FV')
            set udg_MargolDaggerTime[a]=udg_MargolDaggerTime[udg_MargolDaggerNum]
            set udg_MargolDaggerUnit[a]=udg_MargolDaggerUnit[udg_MargolDaggerNum]
            set udg_MargolDaggerDd[a]=udg_MargolDaggerDd[udg_MargolDaggerNum]
            set a=a-1
            set udg_MargolDaggerNum=udg_MargolDaggerNum-1
        else
            set udg_MargolDaggerTime[a]=udg_MargolDaggerTime[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_MargolLoop takes nothing returns nothing
    set gg_trg_MargolLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_MargolLoop, 0.1, true)
    call TriggerAddAction( gg_trg_MargolLoop, function Trig_MargolLoop_Actions )
endfunction

//===========================================================================
// Trigger: NagaVoin
//===========================================================================
//TESH.scrollpos=11
//TESH.alwaysfold=0
function Trig_NagaVoin_Actions takes nothing returns nothing
    local unit u = GetEnumUnit()
    local real r
    local integer i = 1
    loop
        exitwhen i>udg_NagaVoinNum
        set u = udg_NagaVoinUnit[i]
        if GetUnitState(u,UNIT_STATE_LIFE)>0 and udg_NagaVoinReal[i]<110 then
            if GetUnitAbilityLevel(u,'BNdo')==0 and GetUnitState(u,UNIT_STATE_LIFE)!=GetUnitState(u,UNIT_STATE_MAX_LIFE) then
                set r = 0.01*(GetUnitState(u,UNIT_STATE_MAX_LIFE)-GetUnitState(u,UNIT_STATE_LIFE))
                if udg_NagaVoinReal[i]+r<110 then
                    set udg_NagaVoinReal[i] = udg_NagaVoinReal[i]+r
                else
                    set udg_NagaVoinReal[i] = 111
                    set r = 110-udg_NagaVoinReal[i]
                endif
                call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+r)
            endif
            set i=i+1
        else
            set udg_NagaVoinReal[i] = udg_NagaVoinReal[udg_NagaVoinNum]
            set udg_NagaVoinUnit[i] = udg_NagaVoinUnit[udg_NagaVoinNum]
            set udg_NagaVoinNum = udg_NagaVoinNum-1
        endif
    endloop
    set u = null
endfunction

//===========================================================================
function InitTrig_NagaVoin takes nothing returns nothing
    set gg_trg_NagaVoin = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_NagaVoin,0.2, true)
    call TriggerAddAction( gg_trg_NagaVoin, function Trig_NagaVoin_Actions )
endfunction

//===========================================================================
// Trigger: NagaMirmidon
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_NagaMirmidon_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitState(u,UNIT_STATE_LIFE)<=0.2*GetUnitState(u,UNIT_STATE_MAX_LIFE) and GetUnitAbilityLevel(u,'BNdo')==0 then
            call UnitAddAbility(u,'S00C')
            call UnitAddAbility(u,'A085')
            call UnitAddAbility(u,'A084')
	        call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_MAX_LIFE)*0.5)
            call GroupRemoveUnit(udg_NagaMirmidon,u)
	    endif
    else
        call GroupRemoveUnit(udg_NagaMirmidon,u)
    endif
    set u = null
endfunction

function Trig_NagaMirmidon_Actions takes nothing returns nothing
    call ForGroup(udg_NagaMirmidon,function Trig_NagaMirmidon_Func)
endfunction

//===========================================================================
function InitTrig_NagaMirmidon takes nothing returns nothing
    set gg_trg_NagaMirmidon = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_NagaMirmidon,0.07, true)
    call TriggerAddAction( gg_trg_NagaMirmidon, function Trig_NagaMirmidon_Actions )
endfunction

//===========================================================================
// Trigger: MargolAttSp
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_MargolAttSp_SetAttSp takes nothing returns nothing
    if udg_int>0 then
        call SetUnitAbilityLevel(GetEnumUnit(),'A087',udg_int+1)
        call UnitAddAbility(GetEnumUnit(),'S00B')
    else
        call UnitRemoveAbility(GetEnumUnit(),'S00B')
    endif
endfunction

function Trig_MargolAttSp_NumAttSp takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'A087')>0 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitTypeId(u)=='n010' then
            set udg_int=udg_int+1
        endif
        call GroupAddUnit(udg_GroupX,u)
    endif
    set u = null
endfunction

function Trig_MargolAttSp_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>6
    
            call GroupClear(udg_GroupX)
            set udg_int=0
            call ForGroup(udg_PlayerWarriorsGroup[a],function Trig_MargolAttSp_NumAttSp)
            if udg_int>35 then
                set udg_int=35
            endif
            call ForGroup(udg_GroupX,function Trig_MargolAttSp_SetAttSp)
    
            call GroupClear(udg_GroupX)
            set udg_int=0
            call ForGroup(udg_PlayerCreepsGroup[a],function Trig_MargolAttSp_NumAttSp)
            if udg_int>35 then
                set udg_int=35
            endif
            call ForGroup(udg_GroupX,function Trig_MargolAttSp_SetAttSp)
        
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_MargolAttSp takes nothing returns nothing
    set gg_trg_MargolAttSp = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_MargolAttSp, 1, true)
    call TriggerAddAction( gg_trg_MargolAttSp, function Trig_MargolAttSp_Actions )
endfunction

//===========================================================================
// Trigger: MarkyraBigEnd
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_MarkyraBigEnd_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'B019')==0 then
        call GroupRemoveUnit(udg_MarkyraBig,u)
	call UnitRemoveAbility(u,'A09C')
	call UnitAddAbility(u,'A08U')
    endif
    set u = null
endfunction

function Trig_MarkyraBigEnd_Actions takes nothing returns nothing
    call ForGroup(udg_MarkyraBig,function Trig_MarkyraBigEnd_Func)
endfunction

//===========================================================================
function InitTrig_MarkyraBigEnd takes nothing returns nothing
    set gg_trg_MarkyraBigEnd = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_MarkyraBigEnd,0.25, true)
    call TriggerAddAction( gg_trg_MarkyraBigEnd, function Trig_MarkyraBigEnd_Actions )
endfunction

//===========================================================================
// Trigger: NagaZaklLoop
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_NagaZaklLoop_Actions takes nothing returns nothing
    local integer i = udg_NagaZaklNum
    local real n
    loop
        exitwhen i==0
        if GetUnitState(udg_NagaZaklCaster[i],UNIT_STATE_LIFE)>0 then
            if GetUnitAbilityLevel(udg_NagaZaklCaster[i],'Bdcl')==1 then
                set n = 0.01*GetUnitState(udg_NagaZaklTarget[i],UNIT_STATE_MAX_LIFE)/4
                if GetUnitTypeId(udg_NagaZaklTarget[i])!='n01D' then
                    call SetUnitState(udg_NagaZaklCaster[i],UNIT_STATE_LIFE,GetUnitState(udg_NagaZaklCaster[i],UNIT_STATE_LIFE)+2.5+n)
                endif
                call UnitDamageTarget(udg_NagaZaklCaster[i],udg_NagaZaklTarget[i],2.5+n+(0.1+n/20)*GetUnitAbilityLevel(udg_NagaZaklCaster[i],'A015'),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            endif
        else
            set udg_NagaZaklCaster[i]=udg_NagaZaklCaster[udg_NagaZaklNum]
            set udg_NagaZaklTarget[i]=udg_NagaZaklTarget[udg_NagaZaklNum]
            set udg_NagaZaklNum=udg_NagaZaklNum-1
        endif
        set i=i-1
    endloop
endfunction

//===========================================================================
function InitTrig_NagaZaklLoop takes nothing returns nothing
    set gg_trg_NagaZaklLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_NagaZaklLoop,0.25,true)
    call TriggerAddAction( gg_trg_NagaZaklLoop, function Trig_NagaZaklLoop_Actions )
endfunction

//===========================================================================
// Trigger: Koatles
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Koatles_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        set i = GetPlayerSlotId(GetOwningPlayer(u))
        set i = i/2-2+3*(i-i/2*2)
        if not(udg_StartSpellsWorkBool[i]) then
            set i = GetUnitAbilityLevel(u,'A09U')+2+1*(GetUnitAbilityLevel(u,'A015')/10)
            if i<125 then
	            call SetUnitAbilityLevel(u,'A09U',i)
            else
	            call SetUnitAbilityLevel(u,'A09U',125)
            endif
        endif
    else
	    call GroupRemoveUnit(udg_Koatles,u)
    endif
    set u = null
endfunction

function Trig_Koatles_Actions takes nothing returns nothing
    call ForGroup(udg_Koatles,function Trig_Koatles_FG)
endfunction

//===========================================================================
function InitTrig_Koatles takes nothing returns nothing
    set gg_trg_Koatles = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Koatles,1,true)
    call TriggerAddAction( gg_trg_Koatles, function Trig_Koatles_Actions )
endfunction

//===========================================================================
// Trigger: TornadoDmg
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_TornadoDmg_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local real ux=GetUnitX(u)
    local real uy=GetUnitY(u)
    local real a=180/bj_PI*Atan2(GetUnitY(udg_UnitX)-uy,GetUnitX(udg_UnitX)-ux)
    local real d=SquareRoot((GetUnitX(udg_UnitX)-ux)*(GetUnitX(udg_UnitX)-ux)+(GetUnitY(udg_UnitX)-uy)*(GetUnitY(udg_UnitX)-uy))-2*GetUnitPointValue(u)-64
    if IsUnitEnemy(udg_UnitX,GetOwningPlayer(u)) and d<210 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
        call UnitDamageTarget(udg_UnitX,u,2.5,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
    endif
    set u = null
endfunction

function Trig_TornadoDmg_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local group j = CreateGroup()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        call GroupEnumUnitsInRange(j,GetUnitX(u),GetUnitY(u),310,null)
        call GroupRemoveUnit(j,u)
        set udg_UnitX=u
        call ForGroup(j,function Trig_TornadoDmg_FG)
    else
        call GroupRemoveUnit(udg_Tornados,u)
    endif
    call GroupClear(j)
    call DestroyGroup(j)
    set j = null
    set u = null
endfunction

function Trig_TornadoDmg_Actions takes nothing returns nothing
    call ForGroup(udg_Tornados,function Trig_TornadoDmg_Func)
endfunction

//===========================================================================
function InitTrig_TornadoDmg takes nothing returns nothing
    set gg_trg_TornadoDmg = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_TornadoDmg,0.25, true)
    call TriggerAddAction( gg_trg_TornadoDmg, function Trig_TornadoDmg_Actions )
endfunction

//===========================================================================
// Trigger: TornadoPrilivSil
//===========================================================================
function Trig_TornadoPrilivSil_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetSummoningUnit())=='n01G' and GetUnitAbilityLevel(GetSummoningUnit(),'S00E')==1
endfunction

function Trig_TornadoPrilivSil_Actions takes nothing returns nothing
    call UnitAddAbility(GetSummonedUnit(),'S00E')
endfunction

//===========================================================================
function InitTrig_TornadoPrilivSil takes nothing returns nothing
    set gg_trg_TornadoPrilivSil = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TornadoPrilivSil, EVENT_PLAYER_UNIT_SUMMON )
    call TriggerAddCondition( gg_trg_TornadoPrilivSil, Condition( function Trig_TornadoPrilivSil_Conditions ) )
    call TriggerAddAction( gg_trg_TornadoPrilivSil, function Trig_TornadoPrilivSil_Actions )
endfunction

//===========================================================================
// Trigger: OceanAvatarTar
//===========================================================================
//TESH.scrollpos=25
//TESH.alwaysfold=0
function Trig_OceanAvatarTar_FG takes nothing returns nothing
    local group g = CreateGroup()
    local unit e = GetEnumUnit()
    local unit u
    local real r = GetUnitState(e,UNIT_STATE_MAX_LIFE)-GetUnitState(e,UNIT_STATE_MAX_LIFE)/10*GetUnitAbilityLevel(e,'A0AB')
    if GetUnitState(e,UNIT_STATE_LIFE)>0 then
	    if GetUnitState(e,UNIT_STATE_LIFE)<r then
	        call SetUnitAbilityLevel(e,'A0AB',GetUnitAbilityLevel(e,'A0AB')+1)
	    else
	        if GetUnitState(e,UNIT_STATE_LIFE)>r+80 then
	            call SetUnitAbilityLevel(e,'A0AB',GetUnitAbilityLevel(e,'A0AB')-1)
	        endif
	    endif
        if GetUnitState(e,UNIT_STATE_MANA)>=GetUnitState(e,UNIT_STATE_MAX_MANA) then
	    call IssueImmediateOrder(e,"thunderclap")
        endif
        call GroupEnumUnitsInRange(g,GetUnitX(e),GetUnitY(e),500,null)
        set u = FirstOfGroup(g)
        loop
            exitwhen u==null
            if GetUnitAbilityLevel(u,'B01O')>0 and not(IsUnitInGroup(u,udg_OceanAvatarTar)) then
		        call GroupAddUnit(udg_OceanAvatarTar,u)
                set udg_OceanAvatarNum=udg_OceanAvatarNum+1
		        set udg_OceanAvatarUnit[udg_OceanAvatarNum]=u
		        set udg_OceanAvatarHP[udg_OceanAvatarNum]=GetUnitState(u,UNIT_STATE_LIFE)
            endif
            call GroupRemoveUnit(g,u)
            set u = FirstOfGroup(g)
	    endloop
    else
        call GroupRemoveUnit(udg_OceanAvatar,e)
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
    set e = null
endfunction

function Trig_OceanAvatarTar_Actions takes nothing returns nothing
    call ForGroup(udg_OceanAvatar,function Trig_OceanAvatarTar_FG)
endfunction

//===========================================================================
function InitTrig_OceanAvatarTar takes nothing returns nothing
    set gg_trg_OceanAvatarTar = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_OceanAvatarTar,0.25,true)
    call TriggerAddAction( gg_trg_OceanAvatarTar, function Trig_OceanAvatarTar_Actions )
endfunction
//===========================================================================
// Trigger: OceanAvatarLoop
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_OceanAvatarLoop_Actions takes nothing returns nothing
    local unit u
    local integer i = udg_OceanAvatarNum
    loop
        exitwhen i<=0
        set u = udg_OceanAvatarUnit[i]
        if GetUnitState(u,UNIT_STATE_LIFE)==0 then
	        call GroupRemoveUnit(udg_OceanAvatarTar,u)
            set udg_OceanAvatarUnit[i]=udg_OceanAvatarUnit[udg_OceanAvatarNum]
            set udg_OceanAvatarHP[i]=udg_OceanAvatarHP[udg_OceanAvatarNum]
            set udg_OceanAvatarNum=udg_OceanAvatarNum-1
        else
    	    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\ReplenishMana\\ReplenishManaCasterOverhead.mdl",u,"overhead"))
            if GetUnitState(u,UNIT_STATE_LIFE)<udg_OceanAvatarHP[i] then
                call SetUnitState(u,UNIT_STATE_LIFE,0.75*GetUnitState(u,UNIT_STATE_LIFE)+0.25*udg_OceanAvatarHP[i])
            endif
	        if GetUnitAbilityLevel(u,'B01O')>0 then
                set udg_OceanAvatarHP[i]=GetUnitState(u,UNIT_STATE_LIFE)
	        else
            	set udg_OceanAvatarUnit[i]=udg_OceanAvatarUnit[udg_OceanAvatarNum]
            	set udg_OceanAvatarHP[i]=udg_OceanAvatarHP[udg_OceanAvatarNum]
            	set udg_OceanAvatarNum=udg_OceanAvatarNum-1
	        endif
        endif
        set i=i-1
    endloop
    set u = null
endfunction

//===========================================================================
function InitTrig_OceanAvatarLoop takes nothing returns nothing
    set gg_trg_OceanAvatarLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_OceanAvatarLoop,5,true)
    call TriggerAddAction( gg_trg_OceanAvatarLoop, function Trig_OceanAvatarLoop_Actions )
endfunction//===========================================================================
// Trigger: NagaCannibalismPass2
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_NagaCannibalismPass2_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetDyingUnit(),'A0AG')>0 and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')==0
endfunction

function Trig_NagaCannibalismPass2_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = 1
    loop
        exitwhen i>6
        if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            if IsPassChosenByPlayer(i,14) and IsUnitEnemy(u,udg_PlayerY) then
                call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+udg_RealX)
                call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",u,"origin"))
            endif
        else
            if IsUnitInGroup(u,udg_PlayerCreepsGroup[i]) then
                if (IsPassChosenByPlayer(3-6*(i/4)+i,14) or (IsPassChosenByPlayer(3-6*(i/4)+i,15) and udg_EnableCreeps)) and IsUnitEnemy(u,udg_PlayerY) then
                    call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+udg_RealX)
                    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",u,"origin"))
                endif
            endif
        endif
        set i=i+1
    endloop
    set u = null
endfunction

function Trig_NagaCannibalismPass2_Actions takes nothing returns nothing
    local group g = CreateGroup()
    local unit u = GetDyingUnit()
    set udg_PlayerY = GetOwningPlayer(u)
    set udg_RealX = 0.07*GetUnitState(u,UNIT_STATE_MAX_LIFE)
    if udg_RealX > 20 then
        set udg_RealX = 20
    endif
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),560,null)
    call ForGroup(g,function Trig_NagaCannibalismPass2_FG)
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction

//===========================================================================
function InitTrig_NagaCannibalismPass2 takes nothing returns nothing
    set gg_trg_NagaCannibalismPass2 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_NagaCannibalismPass2, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_NagaCannibalismPass2, function Trig_NagaCannibalismPass2_Actions )
    call TriggerAddCondition( gg_trg_NagaCannibalismPass2, Condition( function Trig_NagaCannibalismPass2_Conditions ) )
endfunction

//===========================================================================
// Trigger: HeroBankaLoop
//===========================================================================
//TESH.scrollpos=18
//TESH.alwaysfold=0
function Trig_HeroBankaLoop_Actions takes nothing returns nothing
    local integer a = 1
    local integer n
    local integer times1summ
    local real speed
    
    local integer array slows
    local integer array times
    local integer array trashholds
    
    set slows[1] = 10
    set slows[2] = 40
    set slows[3] = 80
    set slows[4] = 150
    set slows[5] = 300
    
    set times[1] = 10//+5*lvl now
    set times[2] = 70
    
    set trashholds[1] = 40
    set trashholds[2] = 8
    set trashholds[3] = 32
    
    loop
        exitwhen a>udg_HeroBankaCount
        set times1summ = times[1]+udg_HeroBankaLvl[a]*5
        //call DisplayTextToPlayer(Player(0),0,0,"lvl="+I2S(udg_HeroBankaLvl[a]))
        //call DisplayTextToPlayer(Player(0),0,0,"times1summ="+I2S(times1summ))
        //call DisplayTextToPlayer(Player(0),0,0,"time="+I2S(udg_HeroBankaTime[a]))
        //call DisplayTextToPlayer(Player(0),0,0,"time="+I2S(udg_HeroBankaTime[a]))
        //if udg_HeroBankaTime[a]>=times[1]+times[2] or GetUnitState(udg_HeroBankaUnit[a],UNIT_STATE_LIFE)==0 then
        if udg_HeroBankaTime[a]>=times1summ+times[2] or GetUnitState(udg_HeroBankaUnit[a],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_HeroBankaUnit[a],'A0II')
            call UnitRemoveAbility(udg_HeroBankaUnit[a],'A0IJ')
            call UnitRemoveAbility(udg_HeroBankaUnit[a],'A0IK')
            call UnitRemoveAbility(udg_HeroBankaUnit[a],'B030')
            set udg_HeroBankaTime[a]=udg_HeroBankaTime[udg_HeroBankaCount]
            set udg_HeroBankaUnit[a]=udg_HeroBankaUnit[udg_HeroBankaCount]
            set udg_HeroBankaLvl[a]=udg_HeroBankaLvl[udg_HeroBankaCount]
            set a=a-1
            set udg_HeroBankaCount=udg_HeroBankaCount-1
        elseif udg_HeroBankaTime[a]>=times1summ then
            call UnitRemoveAbility(udg_HeroBankaUnit[a],'A0II')
            
            set n = udg_HeroBankaLvl[a]
            set speed = I2R(slows[n])/I2R(times[2])
            set n = R2I(speed*(times[2]+times1summ-udg_HeroBankaTime[a]))
            if n>times1summ+(trashholds[2]*5) then
                set n = times1summ+(trashholds[2]*5)+ (n-times1summ-(trashholds[2]*5))/10
            endif
            if n>times1summ then
                set n = times1summ+(n-times1summ)/5
            endif
            //call DisplayTextToPlayer(Player(0),0,0,"level="+I2S(n))
            
            call SetUnitAbilityLevel(udg_HeroBankaUnit[a],'A0IK',n+1)
            set udg_HeroBankaTime[a]=udg_HeroBankaTime[a]+1
        else
            call UnitDamageTarget(udg_HeroBankaDD[a],udg_HeroBankaUnit[a],0.3,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            set udg_HeroBankaTime[a]=udg_HeroBankaTime[a]+1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_HeroBankaLoop takes nothing returns nothing
    set gg_trg_HeroBankaLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_HeroBankaLoop, 0.1, true)
    call TriggerAddAction( gg_trg_HeroBankaLoop, function Trig_HeroBankaLoop_Actions )
endfunction

//===========================================================================
// Trigger: HeroLoop
//===========================================================================
//TESH.scrollpos=59
//TESH.alwaysfold=0
function Trig_HeroLoop_Actions takes nothing returns nothing
    local integer i = 1
    local integer n
    local integer k
    local unit u
    local unit t
    local player p
    local group g = CreateGroup()
    loop
        exitwhen i>udg_HeroNagaCount
        if GetUnitState(udg_HeroNagaHero[i],UNIT_STATE_LIFE)>0 then
            // 3
            if GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0HV')>0 then
                set p = GetOwningPlayer(udg_HeroNagaHero[i])
                set n = udg_HeroNagaExtraHp[i]
                set k = 0
                call GroupEnumUnitsInRange(g,GetUnitX(udg_HeroNagaHero[i]),GetUnitY(udg_HeroNagaHero[i]),1000,null)
                loop
                    set u = FirstOfGroup(g)
                    exitwhen u==null
                    if GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(u,'A06T')==0 and GetOwningPlayer(u)==p then
                        set k = k + 1
                    endif
                    call GroupRemoveUnit(g,u)
                endloop
                if k*GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0HV')*4>n then
                    call UnitAddMaxHP(udg_HeroNagaHero[i],k*GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0HV')*4-n)
                    set udg_HeroNagaExtraHp[i]=k*GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0HV')*4
                endif
            endif
            
            // 8
            if GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0IL')>0 then
                set p = GetOwningPlayer(udg_HeroNagaHero[i])
                if udg_HeroNagaBounded[i]!=null and GetUnitState(udg_HeroNagaBounded[i],UNIT_STATE_LIFE)>0 then
                    set t = udg_HeroNagaBounded[i]
                    set n = R2I(GetUnitState(udg_HeroNagaBounded[i],UNIT_STATE_MAX_LIFE))
                else
                    set udg_HeroNagaBounded[i]=null
                    set t = null
                    set n = 0
                endif
                //call DisplayTextToPlayer(Player(0),0,0,"first="+GetUnitName(udg_HeroNagaBounded[i]))
                call GroupEnumUnitsInRange(g,GetUnitX(udg_HeroNagaHero[i]),GetUnitY(udg_HeroNagaHero[i]),900,null)
                call GroupRemoveUnit(g,udg_HeroNagaHero[i])
                call GroupRemoveUnit(g,udg_HeroNagaBounded[i])
                loop
                    set u = FirstOfGroup(g)
                    exitwhen u==null
                    if GetUnitState(u,UNIT_STATE_LIFE)>0 and GetUnitState(u,UNIT_STATE_MAX_LIFE)>n and IsUnitAlly(u,p) and GetUnitAbilityLevel(u,'A0IL')+GetUnitAbilityLevel(u,'A06T')+GetUnitAbilityLevel(u,'Avul')+GetUnitAbilityLevel(u,'Bvul')==0 and not(IsUnitType(u,UNIT_TYPE_PEON)) then
                        set t = u
                        set n = R2I(GetUnitState(u,UNIT_STATE_MAX_LIFE))
                    endif
                    call GroupRemoveUnit(g,u)
                endloop
                //call DisplayTextToPlayer(Player(0),0,0,"second="+GetUnitName(t))
                if t!=udg_HeroNagaBounded[i] then
                    call UnitRemoveAbility(udg_HeroNagaBounded[i],'A0IL')
                    call UnitRemoveAbility(udg_HeroNagaBounded[i],'A0IM')
                    call UnitAddAbility(t,'A0IL')
                    call UnitAddAbility(t,'A0IM')
                    call SetUnitAbilityLevel(t,'A0IL',GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0IL'))
                    call SetUnitAbilityLevel(t,'A0IM',GetUnitAbilityLevel(udg_HeroNagaHero[i],'A0IM'))
                    set udg_HeroNagaBounded[i]=t
                endif
            endif
            set i=i+1
        else
            if udg_HeroNagaBounded[i]!=null then
                call UnitRemoveAbility(udg_HeroNagaBounded[i],'A0IL')
                call UnitRemoveAbility(udg_HeroNagaBounded[i],'A0IM')
                call UnitRemoveAbility(udg_HeroNagaBounded[i],'B031')
            endif
            set udg_HeroNagaBounded[i] = udg_HeroNagaBounded[udg_HeroNagaCount]
            set udg_HeroNagaHero[i] = udg_HeroNagaHero[udg_HeroNagaCount]
            set udg_HeroNagaExtraHp[i] = udg_HeroNagaExtraHp[udg_HeroNagaCount]
            set udg_HeroNagaBounded[udg_HeroNagaCount] = null
            set udg_HeroNagaHero[udg_HeroNagaCount] = null
            set udg_HeroNagaExtraHp[udg_HeroNagaCount] = 0
            set udg_HeroNagaCount = udg_HeroNagaCount-1
        endif
    endloop
    set u = null
    set t = null
    set p = null
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
endfunction

//===========================================================================
function InitTrig_HeroLoop takes nothing returns nothing
    set gg_trg_HeroLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_HeroLoop, 0.5, true)
    call TriggerAddAction( gg_trg_HeroLoop, function Trig_HeroLoop_Actions )
endfunction
//===========================================================================
// Trigger: FireLordDebuff
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_FireLordDebuff_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_FireLordDebuffNum
        set udg_FireLordDebuffTime[a]=udg_FireLordDebuffTime[a]-1
        if GetUnitState(udg_FireLordDebuffUnit[a],UNIT_STATE_LIFE)==0 or udg_FireLordDebuffTime[a]==0 then
            call UnitRemoveAbility(udg_FireLordDebuffUnit[a],'S00R')
            call UnitRemoveAbility(udg_FireLordDebuffUnit[a],'B02W')
            set udg_FireLordDebuffTime[a]=udg_FireLordDebuffTime[udg_FireLordDebuffNum]
            set udg_FireLordDebuffUnit[a]=udg_FireLordDebuffUnit[udg_FireLordDebuffNum]
            set udg_FireLordDebuffDealer[a]=udg_FireLordDebuffDealer[udg_FireLordDebuffNum]
            set udg_FireLordDebuffNum=udg_FireLordDebuffNum-1
        else
            set udg_FireLordDebuffTime[a]=udg_FireLordDebuffTime[a]-1
            set a=a+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_FireLordDebuff takes nothing returns nothing
    set gg_trg_FireLordDebuff = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_FireLordDebuff, 0.1, true)
    call TriggerAddAction( gg_trg_FireLordDebuff, function Trig_FireLordDebuff_Actions )
endfunction

//===========================================================================
// Trigger: FellHound
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_FellHound_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_FellHoundDebuffNum
        if GetUnitState(udg_FellHoundDebuffUnit[a],UNIT_STATE_LIFE)>0 then
            if udg_FellHoundDebuffDealer[a]==null then
                call UnitDamageTarget(null,udg_FellHoundDebuffUnit[a],GetUnitAbilityLevel(udg_FellHoundDebuffUnit[a],'A0BH')*0.1,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            else
                call UnitDamageTarget(udg_FellHoundDebuffDealer[a],udg_FellHoundDebuffUnit[a],GetUnitAbilityLevel(udg_FellHoundDebuffUnit[a],'A0BH')*0.1,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
            endif
            set udg_FellHoundDebuffTime[a]=udg_FellHoundDebuffTime[a]-1
            if udg_FellHoundDebuffTime[a]==0 then
                call UnitRemoveAbility(udg_FellHoundDebuffUnit[a],'A0BH')
                call UnitRemoveAbility(udg_FellHoundDebuffUnit[a],'S00F')
                call UnitRemoveAbility(udg_FellHoundDebuffUnit[a],'B00A')
                set udg_FellHoundDebuffTime[a]=udg_FellHoundDebuffTime[udg_FellHoundDebuffNum]
                set udg_FellHoundDebuffUnit[a]=udg_FellHoundDebuffUnit[udg_FellHoundDebuffNum]
                set udg_FellHoundDebuffDealer[a]=udg_FellHoundDebuffDealer[udg_FellHoundDebuffNum]
                set udg_FellHoundDebuffNum=udg_FellHoundDebuffNum-1
            else
                set a=a+1
            endif
        else
            set udg_FellHoundDebuffTime[a]=udg_FellHoundDebuffTime[udg_FellHoundDebuffNum]
            set udg_FellHoundDebuffUnit[a]=udg_FellHoundDebuffUnit[udg_FellHoundDebuffNum]
            set udg_FellHoundDebuffDealer[a]=udg_FellHoundDebuffDealer[udg_FellHoundDebuffNum]
            set udg_FellHoundDebuffNum=udg_FellHoundDebuffNum-1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_FellHound takes nothing returns nothing
    set gg_trg_FellHound = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_FellHound, 0.1, true)
    call TriggerAddAction( gg_trg_FellHound, function Trig_FellHound_Actions )
endfunction

//===========================================================================
// Trigger: InfernalsHP
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_InfernalsHP_FG takes nothing returns nothing
    local unit e = GetEnumUnit()
    if GetUnitState(e,UNIT_STATE_LIFE)>0 then
        call SetUnitState(e,UNIT_STATE_LIFE,GetUnitState(e,UNIT_STATE_LIFE)+(25-(GetUnitAbilityLevel(e,'A04O')-1)/2)*0.1)
    endif
    set e = null
endfunction

function Trig_InfernalsHP_Actions takes nothing returns nothing
    call ForGroup(udg_Infernals,function Trig_InfernalsHP_FG)
endfunction

//===========================================================================
function InitTrig_InfernalsHP takes nothing returns nothing
    set gg_trg_InfernalsHP = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_InfernalsHP,0.1,true)
    call TriggerAddAction( gg_trg_InfernalsHP, function Trig_InfernalsHP_Actions )
endfunction
//===========================================================================
// Trigger: InfernalsDMG
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_InfernalsDMG_FG takes nothing returns nothing
    local group g
    local integer i
    local boolean b = false
    local player p
    local unit e = GetEnumUnit()
    local unit u
    
        
        
    if GetUnitState(e,UNIT_STATE_LIFE)>0 then
        set p = GetOwningPlayer(e)
        
        set i = GetPlayerSlotId(p)
        set i = i/2-2+3*(i-i/2*2)
        if not(udg_StartSpellsWorkBool[i]) and GetUnitAbilityLevel(e,'A04O')<40 then
            call SetUnitAbilityLevel(e,'A04O',GetUnitAbilityLevel(e,'A04O')+1)
        endif
        
        set g = CreateGroup()
        call GroupEnumUnitsInRange(g,GetUnitX(e),GetUnitY(e),370,null)
        call GroupRemoveUnit(g,e)
        set u = FirstOfGroup(g)
        loop
            exitwhen u==null
            if GetUnitState(u,UNIT_STATE_LIFE)>0 and IsUnitEnemy(u,p) and GetUnitAbilityLevel(u,'B001')>0 and not(IsUnitInGroup(u,udg_GroupX)) then
                set i = GetUnitAbilityLevel(u,'A0BL')
                if i==0 then
                    call UnitAddAbility(u,'A0BL')
                else
                    if i<30 then
                        call SetUnitAbilityLevel(u,'A0BL',GetUnitAbilityLevel(u,'A0BL')+1)
                    endif
                endif
                call UnitDamageTarget(e,u,20+i*4,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                call GroupAddUnit(udg_GroupY,u)
            endif
            call GroupRemoveUnit(g,u)
            set u = FirstOfGroup(g)
        endloop
        call GroupClear(g)
        call DestroyGroup(g)
        set g = null
        set u = null
        set p = null
    else
        call GroupRemoveUnit(udg_Infernals,e)
    endif
    set e = null
endfunction

function Trig_InfernalsDMG_Actions takes nothing returns nothing
    call GroupClear(udg_GroupY)
    call ForGroup(udg_Infernals,function Trig_InfernalsDMG_FG)
    call GroupClear(udg_GroupY)
endfunction

//===========================================================================
function InitTrig_InfernalsDMG takes nothing returns nothing
    set gg_trg_InfernalsDMG = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_InfernalsDMG,1,true)
    call TriggerAddAction( gg_trg_InfernalsDMG, function Trig_InfernalsDMG_Actions )
endfunction
//===========================================================================
// Trigger: Vlastiteli
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_Vlastiteli_Func takes nothing returns nothing
    local item it
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitAbilityLevel(u,'B00G')==0 then
            if GetUnitState(u,UNIT_STATE_MANA)>=30 and GetUnitState(u,UNIT_STATE_LIFE)<0.5*GetUnitState(u,UNIT_STATE_MAX_LIFE) and GetUnitAbilityLevel(u,'BNdo')==0 then
                call UnitRemoveAbility(u,'A0BS')//Anti-magic aura
                call UnitRemoveAbility(u,'A0D2')//Human pass resist
                call UnitAddAbility(u,'A0BQ')
                set it = CreateItem('I00F',0,0)
                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-30)
                if GetUnitAbilityLevel(u,'A0DU')==0 then
                    call UnitAddAbility(u,'AInv')
                    call UnitAddItem(u,it)
                    call UnitRemoveAbility(u,'AInv')
                else
                    call UnitAddItem(u,it)
                endif
                call RemoveItem(it)
                set it = null
            else
                call UnitRemoveAbility(u,'A0BQ')
                if GetUnitAbilityLevel(u,'S00D')==1 then
                    call UnitAddAbility(u,'A053')
                endif
                if GetUnitAbilityLevel(u,'A0D1')>0 then
                    call UnitAddAbility(u,'A0D2')
                    call SetUnitAbilityLevel(u,'A0D2',GetUnitAbilityLevel(u,'A0D1'))
                endif
            endif
        endif
    else
        call GroupRemoveUnit(udg_Vlastiteli,u)
    endif
    set u = null
endfunction

function Trig_Vlastiteli_Actions takes nothing returns nothing
    call ForGroup(udg_Vlastiteli,function Trig_Vlastiteli_Func)
endfunction

//===========================================================================
function InitTrig_Vlastiteli takes nothing returns nothing
    set gg_trg_Vlastiteli = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Vlastiteli,0.07, true)
    call TriggerAddAction( gg_trg_Vlastiteli, function Trig_Vlastiteli_Actions )
endfunction

//===========================================================================
// Trigger: Dooms
//===========================================================================
//TESH.scrollpos=29
//TESH.alwaysfold=0
function Trig_Dooms_end takes nothing returns nothing
    local unit u = udg_UnitX
    call TriggerSleepAction(3)
    call GroupRemoveUnit(udg_DoomsCasting,u)
endfunction

function Trig_Dooms_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local unit e = null
    local player p
    local integer lvl = 0
    local integer num = 0
    local group g
    local group j
    local boolean b = false
	if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitState(u,UNIT_STATE_MANA)>=200 and GetUnitCurrentOrder(u)!=852583 then
            set g = CreateGroup()
            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),450,null)
            set p = GetOwningPlayer(u)
            set t = FirstOfGroup(g)
            loop
                exitwhen t==null
                if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and not(IsUnitInGroup(t,udg_DoomsCasting)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'BNdo')==0 then
                    set b = true
                    call GroupClear(g)
                    set t = null
                else
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endif
            endloop
        
            if b then
			    set j = CreateGroup()
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1220,null)
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>10 and GetUnitAbilityLevel(t,'BNdo')==0 and not(IsUnitInGroup(t,udg_DoomsCasting)) and IsUnitVisible(t,p) and GetUnitAbilityLevel(t,'A0AG')>0 and S2I(SubString(udg_CreepDescr[GetUnitAbilityLevel(t,'A0AG')],12,13))>=lvl and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'A06T')==0 then
                        if S2I(SubString(udg_CreepDescr[GetUnitAbilityLevel(t,'A0AG')],12,13))==lvl then
                            call GroupAddUnit(j,t)
                            set num = num + 1
                        else
                            call GroupClear(j)
                            call GroupAddUnit(j,t)
                            set lvl = S2I(SubString(udg_CreepDescr[GetUnitAbilityLevel(t,'A0AG')],12,13))
                            set num = 1
                        endif
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
                if lvl>0 then
                    set t = FirstOfGroup(j)
                    set lvl=GetRandomInt(1,num)
                    set num=1
                    loop
                        exitwhen t==null
                        if lvl==num then
                            call GroupAddUnit(udg_DoomsCasting,t)
                            set udg_UnitX = t
                            call IssueTargetOrder(u,"doom",t)
                            call ExecuteFunc("Trig_Dooms_end")
                        endif
                        call GroupRemoveUnit(j,t)
                        set t = FirstOfGroup(j)
				        set num = num + 1
                    endloop
                endif
            endif
            call GroupClear(j)
            call DestroyGroup(j)
            call GroupClear(g)
            call DestroyGroup(g)
            set j = null
            set g = null
        endif
    else
        call GroupRemoveUnit(udg_Dooms,u)
    endif
    set u = null
    set e = null
    set t = null
    set p = null
endfunction

function Trig_Dooms_Actions takes nothing returns nothing
    call ForGroup(udg_Dooms,function Trig_Dooms_FG)
endfunction

//===========================================================================
function InitTrig_Dooms takes nothing returns nothing
    set gg_trg_Dooms = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Dooms, 0.5, true)
    call TriggerAddAction( gg_trg_Dooms, function Trig_Dooms_Actions )
endfunction
//===========================================================================
// Trigger: DoomTargets
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DoomTargets_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_DoomTargetNum
        if GetUnitState(udg_DoomTargetUnit[i],UNIT_STATE_LIFE)>0 and udg_DoomTargetTime[i]>0 then
            set udg_DoomTargetTime[i]=udg_DoomTargetTime[i]-1
            set i=i+1
        else
            call GroupRemoveUnit(udg_DoomTargets,udg_DoomTargetUnit[i])
            call UnitRemoveAbility(udg_DoomTargetUnit[i],'BNdo')
            set udg_DoomTargetTime[i]=udg_DoomTargetTime[udg_DoomTargetNum]
            set udg_DoomTargetUnit[i]=udg_DoomTargetUnit[udg_DoomTargetNum]
            set udg_DoomTargetNum=udg_DoomTargetNum-1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_DoomTargets takes nothing returns nothing
    set gg_trg_DoomTargets = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DoomTargets, 0.1, true)
    call TriggerAddAction( gg_trg_DoomTargets, function Trig_DoomTargets_Actions )
endfunction
//===========================================================================
// Trigger: FellHoundBig
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_FellHoundBig_Func takes nothing returns nothing
    local unit t
    local unit u = GetEnumUnit()
    local group g = CreateGroup()
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1320,null)
        set t = FirstOfGroup(g)
        loop
            exitwhen t==null
            if GetUnitAbilityLevel(t,'B02C')==1 and GetUnitAbilityLevel(t,'A06T')==0 and not(IsUnitType(t,UNIT_TYPE_STRUCTURE)) and not(IsUnitType(t,UNIT_TYPE_PEON)) then
                if GetUnitAbilityLevel(t,'B00G')==0 then
                    call UnitAddAbility(t,'A0BS')
                endif
                call GroupAddUnit(udg_GroupX,t)
                call GroupRemoveUnit(udg_FellHoundBigPrevious,t)
            endif
            call GroupRemoveUnit(g,t)
            set t = FirstOfGroup(g)
        endloop
    else
        call GroupRemoveUnit(udg_FellHoundBig,u)
    endif
    call DestroyGroup(g)
    set g = null
    set u = null
endfunction
                    
function Trig_FellHoundBig_Actions takes nothing returns nothing
    local unit u
    call GroupClear(udg_GroupX)
    call ForGroup(udg_FellHoundBig,function Trig_FellHoundBig_Func)
    
    set u = FirstOfGroup(udg_FellHoundBigPrevious)
    loop
        exitwhen u==null
        call UnitRemoveAbility(u,'A0BS')
        call GroupRemoveUnit(udg_FellHoundBigPrevious,u)
        set u = FirstOfGroup(udg_FellHoundBigPrevious)
    endloop
    
    call DestroyGroup(udg_FellHoundBigPrevious)
    set udg_FellHoundBigPrevious = udg_GroupX
    set udg_GroupX = CreateGroup()
endfunction

//===========================================================================
function InitTrig_FellHoundBig takes nothing returns nothing
    set gg_trg_FellHoundBig = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_FellHoundBig,0.5, true)
    call TriggerAddAction( gg_trg_FellHoundBig, function Trig_FellHoundBig_Actions )
endfunction

//===========================================================================
// Trigger: VoidWalkerBig
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_VoidWalkerBig_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i
    if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        set i = GetPlayerSlotId(GetOwningPlayer(u))
        set i = i/2-2+3*(i-i/2*2)
        if not(udg_StartSpellsWorkBool[i]) then
            call UnitDamageTarget(u,u,0.8,true,false,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
        endif
    else
        call GroupRemoveUnit(udg_VoidWalkerBig,u)
    endif
    set u = null
endfunction

function Trig_VoidWalkerBig_Actions takes nothing returns nothing
    call ForGroup(udg_VoidWalkerBig,function Trig_VoidWalkerBig_Func)
endfunction

//===========================================================================
function InitTrig_VoidWalkerBig takes nothing returns nothing
    set gg_trg_VoidWalkerBig = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_VoidWalkerBig,0.1, true)
    call TriggerAddAction( gg_trg_VoidWalkerBig, function Trig_VoidWalkerBig_Actions )
endfunction

//===========================================================================
// Trigger: VoidWalkerTinyDies
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_VoidWalkerTinyDies_Conditions takes nothing returns boolean
    return GetUnitTypeId(GetDyingUnit())=='u01G' and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')+GetUnitAbilityLevel(GetDyingUnit(),'A07K')+GetUnitAbilityLevel(GetDyingUnit(),'A0IX')==0 and udg_WaveGoing
endfunction

function Trig_VoidWalkerTinyDies_Actions takes nothing returns nothing
    local unit u
    local unit t = GetDyingUnit()
    local group g = CreateGroup()
    local group j = CreateGroup()
    local player p = GetOwningPlayer(t)
    local boolean b = false
    local integer i = 0
    local integer n
    set u = CreateUnit(p,'n00L',GetUnitX(t),GetUnitY(t),GetUnitFacing(t))
    call GroupAddUnit(udg_VoidWalkerShade,u)
    call UnitApplyTimedLife(u,'BTLF',7)
    call SetUnitColor(u,GetPlayerColor(p))
    call SetUnitVertexColor(u,55,55,55,128)
    set t = null
    
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
    set t = FirstOfGroup(g)
    loop
        exitwhen t==null
        if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 then
            if GetUnitTypeId(t)=='u01G' and not(b) then
                call GroupAddUnit(j,t)
                set i = i + 1
            else
                if GetUnitTypeId(t)=='n00K' then
                    if b then
                        call GroupAddUnit(j,t)
                        set i = i + 1
                    else
                        set b = true
                        call GroupClear(j)
                        call GroupAddUnit(j,t)
                        set i = 1
                    endif
                endif
            endif
        endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    
    if FirstOfGroup(j)!=null then
        set t = FirstOfGroup(j)
        set n=GetRandomInt(1,i)
        set i=1
        loop
            exitwhen t==null
            if n==i then
                call IssueTargetOrderById(u,852160,t)
            endif
            call GroupRemoveUnit(j,t)
            set t = FirstOfGroup(j)
            set i = i + 1
        endloop
    endif
    call GroupClear(g)
    call GroupClear(j)
    call DestroyGroup(g)
    call DestroyGroup(j)
    set g = null
    set j = null
    set p = null
    set t = null
    set u = null
endfunction

//===========================================================================
function InitTrig_VoidWalkerTinyDies takes nothing returns nothing
    set gg_trg_VoidWalkerTinyDies = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_VoidWalkerTinyDies, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_VoidWalkerTinyDies, Condition( function Trig_VoidWalkerTinyDies_Conditions ) )
    call TriggerAddAction( gg_trg_VoidWalkerTinyDies, function Trig_VoidWalkerTinyDies_Actions )
endfunction


//===========================================================================
// Trigger: VoidWalkerShade
//===========================================================================
//TESH.scrollpos=63
//TESH.alwaysfold=0
function Trig_VoidWalkerShade_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local group g
    local group j
    local player p
    local boolean b = false
    local integer i = 0
    local integer n
    if udg_WaveGoing then
    
        if GetUnitState(u,UNIT_STATE_LIFE)>0 then
            if GetUnitCurrentOrder(u)!=852160 then
                set p = GetOwningPlayer(u)
                set j = CreateGroup()
                set g = CreateGroup()
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),900,null)
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitAlly(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 then
                        if GetUnitTypeId(t)=='u01G' and not(b) then
                            call GroupAddUnit(j,t)
                            set i = i + 1
                        else
                            if GetUnitTypeId(t)=='n00K' then
                                if b then
                                    call GroupAddUnit(j,t)
                                    set i = i + 1
                                else
                                    set b = true
                                    call GroupClear(j)
                                    call GroupAddUnit(j,t)
                                    set i = 1
                                endif
                            endif
                        endif
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
                
                if FirstOfGroup(j)!=null then
                    set t = FirstOfGroup(j)
                    set n=GetRandomInt(1,i)
                    set i=1
                    loop
                        exitwhen t==null
                        if n==i then
                            call IssueTargetOrderById(u,852160,t)
                        endif
                        call GroupRemoveUnit(j,t)
                        set t = FirstOfGroup(j)
                        set i = i + 1
                    endloop
                endif
                call GroupClear(g)
                call GroupClear(j)
                call DestroyGroup(g)
                call DestroyGroup(j)
                set g = null
                set j = null
                set p = null
                set t = null
            endif
        else
            call GroupRemoveUnit(udg_VoidWalkerShade,u)
        endif
    
    else
        call KillUnit(u)
        call GroupRemoveUnit(udg_VoidWalkerShade,u)
    endif
    set u = null
endfunction

function Trig_VoidWalkerShade_Actions takes nothing returns nothing
    call ForGroup(udg_VoidWalkerShade,function Trig_VoidWalkerShade_Func)
endfunction

//===========================================================================
function InitTrig_VoidWalkerShade takes nothing returns nothing
    set gg_trg_VoidWalkerShade = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_VoidWalkerShade,0.1, true)
    call TriggerAddAction( gg_trg_VoidWalkerShade, function Trig_VoidWalkerShade_Actions )
endfunction

//===========================================================================
// Trigger: DemonShield
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DemonShield_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_DemonShieldGroupNum
        if udg_DemonShieldGroupTime[a]<=0 or GetUnitState(udg_DemonShieldGroupUnit[a],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_DemonShieldGroupUnit[a],'S00J')
            call UnitRemoveAbility(udg_DemonShieldGroupUnit[a],'B02D')
            set udg_DemonShieldGroupTime[a]=udg_DemonShieldGroupTime[udg_DemonShieldGroupNum]
            set udg_DemonShieldGroupUnit[a]=udg_DemonShieldGroupUnit[udg_DemonShieldGroupNum]
            set a=a-1
            set udg_DemonShieldGroupNum=udg_DemonShieldGroupNum-1
        else
            set udg_DemonShieldGroupTime[a]=udg_DemonShieldGroupTime[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_DemonShield takes nothing returns nothing
    set gg_trg_DemonShield = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DemonShield, 0.1, true)
    call TriggerAddAction( gg_trg_DemonShield, function Trig_DemonShield_Actions )
endfunction

//===========================================================================
// Trigger: EfreetStart
//===========================================================================
//TESH.scrollpos=48
//TESH.alwaysfold=0
function Trig_EfreetStart_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local unit e = null
    local player p
    local integer cost = 0
    local integer num = 0
    local group g
    local group j
	if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if not(IsUnitHidden(u)) and GetUnitState(u,UNIT_STATE_MANA)>=200 then
            set g = CreateGroup()
            set p = GetOwningPlayer(u)
            
            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),350,null)
            set t = FirstOfGroup(g)
            loop
                exitwhen t==null
                if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 then
                    set cost = 1
                    call GroupClear(g)
                    set t = null
                else
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endif
            endloop
            
            if cost>0 then
                set cost = 0
                set j = CreateGroup()
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),980,null)
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and GetUnitAbilityLevel(t,'A0AG')>0 and GetUnitAbilityLevel(t,'A0AG')<109 and udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]<220 and udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]>=70 and IsUnitVisible(t,p) and GetUnitTypeId(t)!='n00S' and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 then
                        call GroupAddUnit(j,t)
                        if cost<udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')] then
                            set cost=udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]
                        endif
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
        
                if cost>0 then
                    set t = FirstOfGroup(j)
                    loop
                        exitwhen t==null
                        if udg_CreepCost[GetUnitAbilityLevel(t,'A0AG')]+30>=cost then
                            call GroupAddUnit(g,t)
                            set num=num+1
                        endif
                        call GroupRemoveUnit(j,t)
                        set t = FirstOfGroup(j)
                    endloop
                    
                    set t = FirstOfGroup(g)
                    set cost=GetRandomInt(1,num)
                    set num=1
                    loop
                        exitwhen t==null
                        if cost==num then
                        
                            call IssueTargetOrder(u,"web",t)
                            call GroupClear(g)
                        endif
                        call GroupRemoveUnit(g,t)
                        set t = FirstOfGroup(g)
                        set num = num + 1
                    endloop
                endif
            endif
            call GroupClear(j)
            call DestroyGroup(j)
            call GroupClear(g)
            call DestroyGroup(g)
            set j = null
            set g = null
        endif
    else
        call GroupRemoveUnit(udg_EfreetGroup,u)
    endif
    set u = null
    set e = null
    set t = null
    set p = null
endfunction

function Trig_EfreetStart_Actions takes nothing returns nothing
    call ForGroup(udg_EfreetGroup,function Trig_EfreetStart_FG)
endfunction

//===========================================================================
function InitTrig_EfreetStart takes nothing returns nothing
    set gg_trg_EfreetStart = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_EfreetStart, 0.2, true)
    call TriggerAddAction( gg_trg_EfreetStart, function Trig_EfreetStart_Actions )
endfunction
//===========================================================================
// Trigger: EfreetSpell
//===========================================================================
//TESH.scrollpos=34
//TESH.alwaysfold=0
function Trig_EfreetSpell_Actions takes nothing returns nothing
    local integer i = 1
    local integer pn
    loop
        exitwhen i>udg_EfreetNum
        if GetUnitState(udg_EfreetImagUnit[i],UNIT_STATE_LIFE)>0 then
            if udg_EfreetTime[i]>0 then
                set udg_EfreetTime[i]=udg_EfreetTime[i]-1
                set i=i+1
            else
                call ShowUnit(udg_EfreetRealUnit[i],true)
                call PauseUnit(udg_EfreetRealUnit[i],false)
                call SetUnitX(udg_EfreetRealUnit[i],GetUnitX(udg_EfreetImagUnit[i]))
                call SetUnitY(udg_EfreetRealUnit[i],GetUnitY(udg_EfreetImagUnit[i]))
                call SetUnitFacing(udg_EfreetRealUnit[i],GetUnitFacing(udg_EfreetImagUnit[i]))
                call SetUnitState(udg_EfreetRealUnit[i],UNIT_STATE_LIFE,GetUnitState(udg_EfreetRealUnit[i],UNIT_STATE_MAX_LIFE)*(GetUnitState(udg_EfreetImagUnit[i],UNIT_STATE_LIFE)/GetUnitState(udg_EfreetImagUnit[i],UNIT_STATE_MAX_LIFE)))
                call SetUnitState(udg_EfreetRealUnit[i],UNIT_STATE_MANA,0)
                set pn = 1
                loop
                    exitwhen pn>6
                    if IsUnitInGroup(udg_EfreetRealUnit[i],udg_PlayerWarriorsGroup[pn]) then
                    
                        if GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD')>0 then
                            if udg_ModNumber==0 or udg_ModNumber==3 then
                                call MultiboardSetPos03(pn-1,-5*(R2I(udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD'))+2.5)/5))
                            else
                                call MultiboardSetPos12(pn-1,-5*(R2I(udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD'))+2.5)/5))
                            endif
                        else
                            if udg_ModNumber==0 or udg_ModNumber==3 then
                                call MultiboardSetPos03(pn-1,-udg_CreepCost[96])
                            else
                                call MultiboardSetPos12(pn-1,-udg_CreepCost[96])
                            endif
                        endif
                    
                    else
                        if IsUnitInGroup(udg_EfreetRealUnit[i],udg_PlayerCreepsGroup[pn]) then
                            set pn=6
                        endif
                    endif
                    set pn=pn+1
                endloop
                // Item Road of skeletons remove
                if GetItemTypeId(UnitItemInSlot(udg_EfreetImagUnit[i],0))=='I00U' or GetItemTypeId(UnitItemInSlot(udg_EfreetImagUnit[i],0))=='I017' or GetItemTypeId(UnitItemInSlot(udg_EfreetImagUnit[i],0))=='I018' then
                    call RemoveItem(UnitItemInSlot(udg_EfreetImagUnit[i],0))
                endif
                call RemoveItem(UnitItemInSlot(udg_EfreetRealUnit[i],0))
                call UnitAddItem(udg_EfreetRealUnit[i],CreateItem(GetItemTypeId(UnitItemInSlot(udg_EfreetImagUnit[i],0)),0,0))
                call RemoveItem(UnitItemInSlot(udg_EfreetImagUnit[i],0))
                
                call UnitRemoveAbility(udg_EfreetImagUnit[i],'A0B2')
                call UnitAddAbility(udg_EfreetImagUnit[i],'A07K') // undead respawn block
                call UnitAddAbility(udg_EfreetImagUnit[i],'A0G9') // fake death
                set pn=1
                loop
                    exitwhen pn>udg_UndeadSpellManaCount
                    if udg_UndeadSpellManaUnit[pn]==udg_EfreetImagUnit[i] then
                        set udg_UndeadSpellManaUnit[pn]=udg_EfreetRealUnit[i]
                        call UnitAddAbility(udg_EfreetRealUnit[i],'S00T')
                        call SetUnitAbilityLevel(udg_EfreetRealUnit[i],'S00T',GetUnitAbilityLevel(udg_EfreetImagUnit[i],'S00T'))
                        call UnitAddAbility(udg_EfreetRealUnit[i],'A0IU')
                        call SetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0IU',GetUnitAbilityLevel(udg_EfreetImagUnit[i],'A0IU'))
                        call UnitAddAbility(udg_EfreetRealUnit[i],'A0IW')
                        call SetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0IW',GetUnitAbilityLevel(udg_EfreetImagUnit[i],'A0IW'))
                        set pn=udg_UndeadSpellManaCount
                    endif
                    set pn=pn+1
                endloop
                call KillUnit(udg_EfreetImagUnit[i])
                call RemoveUnit(udg_EfreetImagUnit[i])
    			call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\FeralSpirit\\feralspirittarget.mdl",udg_EfreetRealUnit[i],"origin"))
                set udg_EfreetRealUnit[i]=udg_EfreetRealUnit[udg_EfreetNum]
                set udg_EfreetImagUnit[i]=udg_EfreetImagUnit[udg_EfreetNum]
                set udg_EfreetTime[i]=udg_EfreetTime[udg_EfreetNum]
                set udg_EfreetNum=udg_EfreetNum-1
            endif
        else
            call ShowUnit(udg_EfreetRealUnit[i],true)
            call PauseUnit(udg_EfreetRealUnit[i],false)
            set pn = 1
            loop
                exitwhen pn>6
                if IsUnitInGroup(udg_EfreetRealUnit[i],udg_PlayerWarriorsGroup[pn]) then 
                
                    if GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD')>0 then
                        if udg_ModNumber==0 or udg_ModNumber==3 then
                            call MultiboardSetPos03(pn-1,-5*(R2I(udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD'))+2.5)/5))
                        else
                            call MultiboardSetPos12(pn-1,-5*(R2I(udg_CreepCost[96]*(1+0.05*GetUnitAbilityLevel(udg_EfreetRealUnit[i],'A0AD'))+2.5)/5))
                        endif
                    else
                        if udg_ModNumber==0 or udg_ModNumber==3 then
                            call MultiboardSetPos03(pn-1,-udg_CreepCost[96])
                        else
                            call MultiboardSetPos12(pn-1,-udg_CreepCost[96])
                        endif
                    endif
                    
                else
                    if IsUnitInGroup(udg_EfreetRealUnit[i],udg_PlayerCreepsGroup[pn]) then
                        set pn=6
                    endif
                endif
                set pn=pn+1
            endloop
            call UnitRemoveAbility(udg_EfreetRealUnit[i],'A0B2')
            call UnitAddAbility(udg_EfreetRealUnit[i],'A07K') // undead respawn block
            call UnitAddAbility(udg_EfreetRealUnit[i],'A0G9') // fake death
            call KillUnit(udg_EfreetRealUnit[i])
            call RemoveUnit(udg_EfreetRealUnit[i])
            set udg_EfreetRealUnit[i]=udg_EfreetRealUnit[udg_EfreetNum]
            set udg_EfreetImagUnit[i]=udg_EfreetImagUnit[udg_EfreetNum]
            set udg_EfreetTime[i]=udg_EfreetTime[udg_EfreetNum]
            set udg_EfreetNum=udg_EfreetNum-1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_EfreetSpell takes nothing returns nothing
    set gg_trg_EfreetSpell = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_EfreetSpell, 0.05, true)
    call TriggerAddAction( gg_trg_EfreetSpell, function Trig_EfreetSpell_Actions )
endfunction
//===========================================================================
// Trigger: SuccubDeath
//===========================================================================
//TESH.scrollpos=6
//TESH.alwaysfold=0
function Trig_SuccubDeath_Conditions takes nothing returns boolean
    return (GetUnitTypeId(GetDyingUnit())=='n00I' or GetUnitTypeId(GetDyingUnit())=='e000') and GetUnitAbilityLevel(GetDyingUnit(),'A0G9')==0
endfunction

function Trig_SuccubDeath_Actions takes nothing returns nothing
    local unit u = GetDyingUnit()
    local unit t = GetKillingUnit()
    local unit u2 = null
    local player p = GetOwningPlayer(u)
    local group g
    local group j
    local real hp = 0
    local boolean b = false
    if IsUnitEnemy(t,p) then
        set g = CreateGroup()
        set j = CreateGroup()
        call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),870,null)
        set t = FirstOfGroup(g)
        loop
            exitwhen t==null
            if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and IsUnitVisible(t,p) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'A06T')==0 and GetUnitAbilityLevel(t,'Bvul')==0 then
                call GroupAddUnit(j,t)
                set b=true
            endif
            call GroupRemoveUnit(g,t)
            set t = FirstOfGroup(g)
        endloop
        
        if b then
            set t = FirstOfGroup(j)
            loop
                exitwhen t==null
                if GetUnitState(t,UNIT_STATE_LIFE)>hp then
                    set hp = GetUnitState(t,UNIT_STATE_LIFE)
                    set u2 = t
                endif
                call GroupRemoveUnit(j,t)
                set t = FirstOfGroup(j)
            endloop
        endif
        call GroupClear(j)
        call GroupClear(g)
        call DestroyGroup(j)
        call DestroyGroup(g)
        set j = null
        set g = null
        if u2!=null then
            if UnitDamageTarget(u,u2,35+0.13*(GetUnitState(u2,UNIT_STATE_LIFE)), true, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC, WEAPON_TYPE_WHOKNOWS) then
                call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl",u2,"origin"))
            endif
        endif
    endif
    set u = null
    set u2 = null
    set t = null
    set p = null
endfunction

//===========================================================================
function InitTrig_SuccubDeath takes nothing returns nothing
    set gg_trg_SuccubDeath = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(6), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(7), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(8), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(9), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(10), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(11), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_SuccubDeath, Player(12), EVENT_PLAYER_UNIT_DEATH, null)
    call TriggerAddCondition( gg_trg_SuccubDeath, Condition( function Trig_SuccubDeath_Conditions ) )
    call TriggerAddAction( gg_trg_SuccubDeath, function Trig_SuccubDeath_Actions )
endfunction

//===========================================================================
// Trigger: SuccubKnife
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_SuccubKnife_end takes nothing returns nothing
    local unit u = udg_UnitX
    call TriggerSleepAction(1.8)
    call GroupRemoveUnit(udg_SuccubKnifeCasting,u)
endfunction

function Trig_SuccubKnife_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local unit e = null
    local player p
    local integer lvl = 0
    local integer num = 0
    local group g
    local group j
    local boolean b = false
	if GetUnitState(u,UNIT_STATE_LIFE)>0 then
        if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) and GetUnitCurrentOrder(u)!=852527 then
            set g = CreateGroup()
            call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),620,null)
            set p = GetOwningPlayer(u)
            set t = FirstOfGroup(g)
            loop
                exitwhen t==null
                if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>0 and not(IsUnitInGroup(t,udg_SuccubKnifeCasting)) and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 and GetUnitAbilityLevel(t,'B016')==0 then
                    set b = true
                    call GroupClear(g)
                    set t = null
                else
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endif
            endloop
        
            if b then
			    set j = CreateGroup()
                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),1320,null)
                set t = FirstOfGroup(g)
                loop
                    exitwhen t==null
                    if IsUnitEnemy(t,p) and GetUnitState(t,UNIT_STATE_LIFE)>10 and GetUnitAbilityLevel(t,'B016')==0 and not(IsUnitInGroup(t,udg_SuccubKnifeCasting)) and IsUnitVisible(t,p) and GetUnitLevel(t)>=lvl and not(IsUnitType(t,UNIT_TYPE_PEON)) and GetUnitAbilityLevel(t,'Aloc')==0 then
                        if GetUnitLevel(t)==lvl then
                            call GroupAddUnit(j,t)
                            set num = num + 1
                        else
                            call GroupClear(j)
                            call GroupAddUnit(j,t)
                            set lvl = GetUnitLevel(t)
                            set num = 1
                        endif
                    endif
                    call GroupRemoveUnit(g,t)
                    set t = FirstOfGroup(g)
                endloop
                if lvl>0 then
                    set t = FirstOfGroup(j)
                    set lvl=GetRandomInt(1,num)
                    set num=1
                    loop
                        exitwhen t==null
                        if lvl==num then
                            call GroupAddUnit(udg_SuccubKnifeCasting,t)
                            set udg_UnitX = t
                            call IssueTargetOrder(u,"shadowstrike",t)
                            call ExecuteFunc("Trig_SuccubKnife_end")
                        endif
                        call GroupRemoveUnit(j,t)
                        set t = FirstOfGroup(j)
				        set num = num + 1
                    endloop
                endif
            endif
            call GroupClear(j)
            call DestroyGroup(j)
            call GroupClear(g)
            call DestroyGroup(g)
            set j = null
            set g = null
        endif
        
    else
        call GroupRemoveUnit(udg_SuccubKnifeGroup,u)
    endif
    set u = null
    set e = null
    set t = null
    set p = null
endfunction

function Trig_SuccubKnife_Actions takes nothing returns nothing
    call ForGroup(udg_SuccubKnifeGroup,function Trig_SuccubKnife_FG)
endfunction

//===========================================================================
function InitTrig_SuccubKnife takes nothing returns nothing
    set gg_trg_SuccubKnife = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_SuccubKnife, 0.35, true)
    call TriggerAddAction( gg_trg_SuccubKnife, function Trig_SuccubKnife_Actions )
endfunction
//===========================================================================
// Trigger: SuccubKnifeLoop
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SuccubKnifeLoop_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_SuccubCurseNum
        if udg_SuccubCurseTime[a]<=0 or GetUnitState(udg_SuccubCurseUnit[a],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_SuccubCurseUnit[a],'S00G')
            call UnitRemoveAbility(udg_SuccubCurseUnit[a],'B016')
            set udg_SuccubCurseTime[a]=udg_SuccubCurseTime[udg_SuccubCurseNum]
            set udg_SuccubCurseUnit[a]=udg_SuccubCurseUnit[udg_SuccubCurseNum]
            set a=a-1
            set udg_SuccubCurseNum=udg_SuccubCurseNum-1
        else
            set udg_SuccubCurseTime[a]=udg_SuccubCurseTime[a]-1
        endif
        set a=a+1
    endloop
endfunction

//===========================================================================
function InitTrig_SuccubKnifeLoop takes nothing returns nothing
    set gg_trg_SuccubKnifeLoop = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_SuccubKnifeLoop, 0.1, true)
    call TriggerAddAction( gg_trg_SuccubKnifeLoop, function Trig_SuccubKnifeLoop_Actions )
endfunction

//===========================================================================
// Trigger: InfernalCannon
//===========================================================================
//TESH.scrollpos=27
//TESH.alwaysfold=0
function Trig_InfernalCannon_act takes nothing returns nothing
    local group g
    local unit u
    local player p
    local integer i = 1
    local real x
    local real y
    loop
        exitwhen i>udg_InfernalCannonSpellNum
        if udg_WaveGoing and udg_InfernalCannonSpellTime[i]<=18 then
            set udg_InfernalCannonSpellTime[i]=udg_InfernalCannonSpellTime[i]+1
            if udg_InfernalCannonSpellTime[i]>=10 then
                set p = GetOwningPlayer(udg_InfernalCannonSpellUnit[i])
                if udg_InfernalCannonSpellTime[i]==10 then
                    set udg_InfernalCannonSpellDummy[i]=CreateUnit(p,'e01U',udg_InfernalCannonSpellX[i],udg_InfernalCannonSpellY[i],0)
                    call SetUnitVertexColor(udg_InfernalCannonSpellDummy[i],255,255,255,128)
                    call UnitAddAbility(udg_InfernalCannonSpellDummy[i],'A0CY')
                    
                    set udg_DummyWaveNum=udg_DummyWaveNum+1
                    set udg_DummyWaveRu[udg_DummyWaveNum]=udg_InfernalCannonSpellUnit[i]
                    set udg_DummyWaveDd[udg_DummyWaveNum]=udg_InfernalCannonSpellDummy[i]
                            
                endif
	            set g = CreateGroup()
    	        call GroupEnumUnitsInRange(g,udg_InfernalCannonSpellX[i],udg_InfernalCannonSpellY[i],330,null)
    	        set u = FirstOfGroup(g)
    	        loop
                    exitwhen u==null
	                if IsUnitEnemy(u,p) and GetUnitState(u,UNIT_STATE_LIFE)>0 then
                        set x = GetUnitX(u)-udg_InfernalCannonSpellX[i]
                        set y = GetUnitY(u)-udg_InfernalCannonSpellY[i]
                        set x = SquareRoot(x*x+y*y)-2*GetUnitPointValue(u)
                        if x<=0 then
                            if UnitDamageTarget(udg_InfernalCannonSpellDummy[i],u,3,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS) then
                                if GetUnitAbilityLevel(u,'A052')>0 then
                                    if GetUnitAbilityLevel(u,'A052')<112 then
                                        call SetUnitAbilityLevel(u,'A052',GetUnitAbilityLevel(u,'A052')+3)
                                    endif
                                else
                                    call UnitAddAbility(u,'A052')
                                endif
                            endif
                        else
                            if x<=160 then
                                if UnitDamageTarget(udg_InfernalCannonSpellDummy[i],u,2,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS) then
                                    if GetUnitAbilityLevel(u,'A052')>0 then
                                        if GetUnitAbilityLevel(u,'A052')<112 then
                                            call SetUnitAbilityLevel(u,'A052',GetUnitAbilityLevel(u,'A052')+2)
                                        endif
                                    else
                                        call UnitAddAbility(u,'A052')
                                    endif
                                endif
                            endif
                        endif
	                endif
                    call GroupRemoveUnit(g,u)
                    set u = FirstOfGroup(g)
    	        endloop
            endif
            set i=i+1
        else
            call RemoveUnit(udg_InfernalCannonSpellDummy[i])
            set udg_InfernalCannonSpellDummy[i]=udg_InfernalCannonSpellDummy[udg_InfernalCannonSpellNum]
            set udg_InfernalCannonSpellUnit[i]=udg_InfernalCannonSpellUnit[udg_InfernalCannonSpellNum]
            set udg_InfernalCannonSpellX[i]=udg_InfernalCannonSpellX[udg_InfernalCannonSpellNum]
            set udg_InfernalCannonSpellY[i]=udg_InfernalCannonSpellY[udg_InfernalCannonSpellNum]
            set udg_InfernalCannonSpellTime[i]=udg_InfernalCannonSpellTime[udg_InfernalCannonSpellNum]
            set udg_InfernalCannonSpellNum=udg_InfernalCannonSpellNum-1
        endif
    endloop
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set p = null
endfunction

//===========================================================================
function InitTrig_InfernalCannon takes nothing returns nothing
    set gg_trg_InfernalCannon = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_InfernalCannon,0.09, true)
    call TriggerAddAction( gg_trg_InfernalCannon, function Trig_InfernalCannon_act )
endfunction

//===========================================================================
// Trigger: DemonPassivka
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_DemonPassivka_Func takes nothing returns nothing
    local unit u = GetEnumUnit()
    local unit t
    local integer summ = 1
    local integer id = GetUnitTypeId(u)
    local player p = GetOwningPlayer(u)
    local group g = CreateGroup()
    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),970,null)
    call GroupRemoveUnit(g,u)
    set t = FirstOfGroup(g)
    loop
        exitwhen t==null
        if GetUnitState(t,UNIT_STATE_LIFE)>0 and GetOwningPlayer(t)==p and GetUnitTypeId(t)==id then
            set summ = summ +1
        endif
        call GroupRemoveUnit(g,t)
        set t = FirstOfGroup(g)
    endloop
    if GetUnitAbilityLevel(u,'A0AG')>0 then
        set summ=summ*udg_CreepCost[GetUnitAbilityLevel(u,'A0AG')]/40
        if summ<1 then
            set summ=1
        endif
    endif
    
    if GetUnitAbilityLevel(u,'A0CS')==0 then
        call UnitAddAbility(u,'A0CS')
        call UnitAddAbility(u,'A0CQ')
    endif
    
    if summ>40 then//60 then
        call SetUnitAbilityLevel(u,'A0CS',40)//60)
        call SetUnitAbilityLevel(u,'A0CQ',40)//60)
    else
        call SetUnitAbilityLevel(u,'A0CS',summ)
        call SetUnitAbilityLevel(u,'A0CQ',summ)
    endif
    
    call GroupClear(g)
    call DestroyGroup(g)
    set g = null
    set p = null
    set t = null
    set u = null
endfunction

function Trig_DemonPassivka_Actions takes nothing returns nothing
    local integer a = 1
    local unit u
    loop
	    exitwhen a>6
	    if IsPassChosenByPlayer(a,16) then
    	    call ForGroup(udg_PlayerWarriorsGroup[a],function Trig_DemonPassivka_Func)
    	    call ForGroup(udg_PlayerCreepsGroup[a+3-6*(a/4)],function Trig_DemonPassivka_Func)
	    endif
	    set a=a+1
    endloop
    set u=null
endfunction

//===========================================================================
function InitTrig_DemonPassivka takes nothing returns nothing
    set gg_trg_DemonPassivka = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DemonPassivka,0.25, true)
    call TriggerAddAction( gg_trg_DemonPassivka, function Trig_DemonPassivka_Actions )
endfunction

//===========================================================================
// Trigger: DemonPassivkaGatesOpen
//===========================================================================
//TESH.scrollpos=48
//TESH.alwaysfold=0
function Trig_DemonPassivkaGatesOpen_Conditions takes nothing returns boolean
    return udg_WaveGoing
endfunction

function Trig_DemonPassivkaGatesOpen_Actions takes nothing returns nothing
    local integer i = 1
    local integer a
    local real r
    local unit u
    
    
    loop
        exitwhen i>udg_DemonPass17PortalsCout
        set a = GetPlayerSlotId(GetOwningPlayer(udg_DemonPass17PortalsPortal[i]))+1
        if (FirstOfGroup(udg_PlayerWarriorsGroup[a])!=null and udg_DemonPass17PortalsWar[i]) or (udg_WaveGoingForPlayer[a+3-a/4*6] and not(udg_DemonPass17PortalsWar[i])) then
            if udg_DemonPass17PortalsTime[i]<8 then
                if udg_DemonPass17PortalsTime[i]>=5 then
                    call SetUnitTimeScale(udg_DemonPass17PortalsPortal[i],1)
                endif
                set udg_DemonPass17PortalsTime[i]=udg_DemonPass17PortalsTime[i]+1
            else
                if udg_ModNumber<2 then
                    if udg_ModNumber==0 then
                        if udg_Wave==11 then
                            call MultiboardSetPos03(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                            if a>3 then
                                set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])+100,GetUnitY(udg_DemonPass17PortalsPortal[i]),0)
                                call IssuePointOrder(u,"attack",GetUnitX(u)+4000,GetUnitY(u))
                            else
                                set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])-100,GetUnitY(udg_DemonPass17PortalsPortal[i]),180)
                                call IssuePointOrder(u,"attack",GetUnitX(u)-4000,GetUnitY(u))
                            endif
                            call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                        else
                            if udg_DemonPass17PortalsWar[i] then
                                call MultiboardSetPos03(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                                if a>3 then
                                    set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])+100,90)
                                else
                                    set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])+100,90)
                                endif
                                call IssuePointOrder(u,"attack",GetUnitX(u),GetUnitY(u)+1400)
                                call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                            else
                                if a>3 then
                                    set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])-100,270)
                                else
                                    set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])-100,270)
                                endif
                                call IssuePointOrder(u,"attack",GetUnitX(u),GetUnitY(u)-1400)
                                call GroupAddUnit(udg_PlayerCreepsGroup[a+3-a/4*6],u)
                            endif
                        endif
                        //
                        if IsPassChosenByPlayer(a,11) then// Пассивка 11 инвиз выключен
                            call UnitAddAbility(u,'A0AP')
                        endif
                        if IsPassChosenByPlayer(a,16) then// Пассивка 16 пламенный приём гидра
                            call UnitAddAbility(u,'A0B2')
                        endif
                        if IsPassChosenByPlayer(a,9) then// Пассивка 9 предмет
                            call UnitAddAbility(u,'A0DU')
                        endif
                        
                        call SetUnitColor(u,udg_PlayerColor[a])
                        call UnitAddAbility(u,'A00H')
                        call UnitAddAbility(u,'A0AG')
                        call SetUnitAbilityLevel(u,'A0AG',udg_DemonPass17PortalsUnit[i])
                        call KillUnit(udg_DemonPass17PortalsPortal[i])
                        set udg_DemonPass17PortalsPortal[i] = udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsUnit[i]   = udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsTime[i]   = udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsWar[i]    = udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsCout      = udg_DemonPass17PortalsCout-1
                        set i=i-1
                    else// ModNumber==1
                        if udg_Wave==11 then
                            call MultiboardSetPos12(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                            if a>3 then
                                set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])+100,GetUnitY(udg_DemonPass17PortalsPortal[i]),0)
                                call IssuePointOrder(u,"attack",GetUnitX(u)+4000,GetUnitY(u))
                            else
                                set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])-100,GetUnitY(udg_DemonPass17PortalsPortal[i]),180)
                                call IssuePointOrder(u,"attack",GetUnitX(u)-4000,GetUnitY(u))
                            endif
                            call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                        else
                            if udg_DemonPass17PortalsWar[i] then
                                call MultiboardSetPos12(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                                if a>3 then
                                    set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])+100,90)
                                else
                                    set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])+100,90)
                                endif
                                call IssuePointOrder(u,"attack",GetUnitX(u),GetUnitY(u)+2000)
                                call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                            else
                                if a>3 then
                                    set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])-100,270)
                                else
                                    set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i]),GetUnitY(udg_DemonPass17PortalsPortal[i])-100,270)
                                endif
                                call IssuePointOrder(u,"attack",GetUnitX(u),GetUnitY(u)-2000)
                                call GroupAddUnit(udg_PlayerCreepsGroup[a+3-a/4*6],u)
                            endif
                        endif
                        call SetUnitColor(u,udg_PlayerColor[a])
                        call UnitAddAbility(u,'A00H')
                        call UnitAddAbility(u,'A0AG')
                        call SetUnitAbilityLevel(u,'A0AG',udg_DemonPass17PortalsUnit[i])
                        call KillUnit(udg_DemonPass17PortalsPortal[i])
                        set udg_DemonPass17PortalsPortal[i] = udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsUnit[i]   = udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsTime[i]   = udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsWar[i]    = udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsCout      = udg_DemonPass17PortalsCout-1
                        set i=i-1
                    endif
                else
                    if udg_ModNumber==2 then
                        call MultiboardSetPos12(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                        if a>3 then
                            set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])+100,GetUnitY(udg_DemonPass17PortalsPortal[i]),0)
                            call IssuePointOrder(u,"attack",GetUnitX(u)+4000,GetUnitY(u))
                        else
                            set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])-100,GetUnitY(udg_DemonPass17PortalsPortal[i]),180)
                            call IssuePointOrder(u,"attack",GetUnitX(u)-4000,GetUnitY(u))
                        endif
                        call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                        
                        call SetUnitColor(u,udg_PlayerColor[a])
                        call UnitAddAbility(u,'A00H')
                        call UnitAddAbility(u,'A0AG')
                        call SetUnitAbilityLevel(u,'A0AG',udg_DemonPass17PortalsUnit[i])
                        call KillUnit(udg_DemonPass17PortalsPortal[i])
                        set udg_DemonPass17PortalsPortal[i] = udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsUnit[i]   = udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsTime[i]   = udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsWar[i]    = udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsCout      = udg_DemonPass17PortalsCout-1
                        set i=i-1
                    else// ModNumber==3
                        if udg_Wave==11 then
                            call MultiboardSetPos03(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                            if a>3 then
                                set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])+100,GetUnitY(udg_DemonPass17PortalsPortal[i]),0)
                                call IssuePointOrder(u,"attack",GetUnitX(u)+4000,GetUnitY(u))
                            else
                                set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])-100,GetUnitY(udg_DemonPass17PortalsPortal[i]),180)
                                call IssuePointOrder(u,"attack",GetUnitX(u)-4000,GetUnitY(u))
                            endif
                            call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                        else
                            call MultiboardSetPos03(a-1,-5*R2I((udg_CreepCost[udg_DemonPass17PortalsUnit[i]]+2.5)/5))
                            if a>3 then
                                set u = CreateUnit(PlayerSlot(a*2-1),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])+100,GetUnitY(udg_DemonPass17PortalsPortal[i]),0)
                                call IssuePointOrder(u,"attack",GetUnitX(u)+3000,GetUnitY(u))
                            else
                                set u = CreateUnit(PlayerSlot(a*2+4),udg_CreepWarrior[udg_DemonPass17PortalsUnit[i]],GetUnitX(udg_DemonPass17PortalsPortal[i])-100,GetUnitY(udg_DemonPass17PortalsPortal[i]),180)
                                call IssuePointOrder(u,"attack",GetUnitX(u)-3000,GetUnitY(u))
                            endif
                            call GroupAddUnit(udg_PlayerWarriorsGroup[a],u)
                        endif
                        call SetUnitColor(u,udg_PlayerColor[a])
                        call UnitAddAbility(u,'A00H')
                        call UnitAddAbility(u,'A0AG')
                        call SetUnitAbilityLevel(u,'A0AG',udg_DemonPass17PortalsUnit[i])
                        call KillUnit(udg_DemonPass17PortalsPortal[i])
                        set udg_DemonPass17PortalsPortal[i] = udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsUnit[i]   = udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsTime[i]   = udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsWar[i]    = udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]
                        set udg_DemonPass17PortalsCout      = udg_DemonPass17PortalsCout-1
                        set i=i-1
                        
                    endif
                endif
            endif
            set i=i+1
        else
            call KillUnit(udg_DemonPass17PortalsPortal[i])  
            set udg_DemonPass17PortalsPortal[i] = udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]
            set udg_DemonPass17PortalsUnit[i]   = udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]
            set udg_DemonPass17PortalsTime[i]   = udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]
            set udg_DemonPass17PortalsWar[i]    = udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]
            set udg_DemonPass17PortalsCout      = udg_DemonPass17PortalsCout-1
        endif
        
    endloop
    
    
    
    if udg_WaveGoing then
        set udg_DemonPass17CreateFinalTime=udg_DemonPass17CreateFinalTime+1
        
        set i = 1
        loop
            exitwhen i>6
            if IsPassChosenByPlayer(i,17) and udg_DemonPass17CreateFinalTime<61 then
                set a = i+3-i/4*6
                if udg_WaveGoingForPlayer[i] or udg_WaveGoingForPlayer[a] then
                    set udg_DemonPass17CreateNetworth[i]=udg_DemonPass17CreateNetworth[i]+(80+70.0*udg_Wave)/120
                    
                    loop
                        exitwhen udg_DemonPass17CreateNetworth[i]+0.05<udg_CreepCost[udg_DemonPass17CreateUnit[i]]
                        set udg_DemonPass17CreateNetworth[i]=udg_DemonPass17CreateNetworth[i]-udg_CreepCost[udg_DemonPass17CreateUnit[i]]
                        
                        if udg_WaveGoingForPlayer[i] then
                            set udg_DemonPass17PortalsCout=udg_DemonPass17PortalsCout+1
                            set udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]=udg_DemonPass17CreateUnit[i]
                            set udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]=0
                            set udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]=true
                            
                            if udg_ModNumber<2 then
                                if udg_ModNumber==0 then
                                    if udg_Wave==11 then
                                        if i>3 then
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',-1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        else
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        endif
                                    else
                                        set u = CreateUnit(PlayerSlot(i-1),'e01T',udg_PlayerHomeLocX[i]+GetRandomReal(-500,500),udg_PlayerHomeLocY[i]+1550+GetRandomReal(-200,200),90)
                                    endif
                                else// ModNumber==1
                                    if udg_Wave==11 then
                                        if i>3 then
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',-1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        else
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        endif
                                    else
                                        if i>3 then
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',-2550+GetRandomReal(-500,500),1300+GetRandomReal(-200,200),270)
                                        else
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',2550+GetRandomReal(-500,500),1300+GetRandomReal(-200,200),270)
                                        endif
                                    endif
                                endif
                            else
                                if udg_ModNumber==2 then
                                    if i>3 then
                                        set u = CreateUnit(PlayerSlot(i-1),'e01T',-1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                    else
                                        set u = CreateUnit(PlayerSlot(i-1),'e01T',1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                    endif
                                else// ModNumber==3
                                    if udg_Wave==11 then
                                        if i>3 then
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',-1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        else
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',1000+GetRandomReal(-500,500),-7885+GetRandomReal(-1000,1000),180)
                                        endif
                                    else
                                        if i>3 then
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',udg_PlayerHomeLocX[i]+1350+GetRandomReal(-170,170),udg_PlayerHomeLocY[i]+GetRandomReal(-400,400),180)
                                        else
                                            set u = CreateUnit(PlayerSlot(i-1),'e01T',udg_PlayerHomeLocX[i]-1350+GetRandomReal(-170,170),udg_PlayerHomeLocY[i]+GetRandomReal(-400,400),180)
                                        endif
                                    endif
                                endif
                            endif
                            set udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]=u
                            call SetUnitVertexColor(u,255,255,255,127)
                            call SetUnitAnimation(u,"birth")
                            call SetUnitTimeScale(u,2)
        		            call QueueUnitAnimation(u,"stand")
                        endif
                        
                        if udg_WaveGoingForPlayer[a] and udg_ModNumber<2 and udg_Wave<11 then
                            set udg_DemonPass17PortalsCout=udg_DemonPass17PortalsCout+1
                            set udg_DemonPass17PortalsUnit[udg_DemonPass17PortalsCout]=udg_DemonPass17CreateUnit[i]
                            set udg_DemonPass17PortalsTime[udg_DemonPass17PortalsCout]=0
                            set udg_DemonPass17PortalsWar[udg_DemonPass17PortalsCout]=false
                            
                            if udg_ModNumber==0 then
                                set u = CreateUnit(PlayerSlot(i-1),'e01T',udg_PlayerHomeLocX[a]+GetRandomReal(-500,500),udg_PlayerHomeLocY[a]+2650+GetRandomReal(-200,200),270)
                            else// ModNumber==1
                                if i>3 then
                                    set u = CreateUnit(PlayerSlot(i-1),'e01T',2550+GetRandomReal(-500,500),2500+GetRandomReal(-200,200),270)
                                else
                                    set u = CreateUnit(PlayerSlot(i-1),'e01T',-2550+GetRandomReal(-500,500),2500+GetRandomReal(-200,200),270)
                                endif
                            endif
                            set udg_DemonPass17PortalsPortal[udg_DemonPass17PortalsCout]=u
                            call SetUnitVertexColor(u,255,255,255,127)
                            call SetUnitAnimation(u,"birth")
                            call SetUnitTimeScale(u,2)
        		            call QueueUnitAnimation(u,"stand")
                        endif
                    endloop
                    
                endif
            endif
            
            set i = i+1
        endloop
    endif
    
    set u = null
endfunction

//===========================================================================
function InitTrig_DemonPassivkaGatesOpen takes nothing returns nothing
    set gg_trg_DemonPassivkaGatesOpen = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DemonPassivkaGatesOpen,0.5, true)
    call TriggerAddAction( gg_trg_DemonPassivkaGatesOpen, function Trig_DemonPassivkaGatesOpen_Actions )
    //call TriggerAddCondition( gg_trg_DemonPassivkaGatesOpen, Condition( function Trig_DemonPassivkaGatesOpen_Conditions ) )
endfunction

//===========================================================================
// Trigger: Dmg taken
//===========================================================================
//TESH.scrollpos=376
//TESH.alwaysfold=0
function AddParasiteDmg takes unit dd, real dmg returns boolean
    local integer i = 1
    loop
        exitwhen i>udg_UndeadSpellManaCount
        if udg_UndeadSpellManaUnit[i]==dd then
            if GetUnitTypeId(dd)!='n01R' then
                set udg_UndeadSpellManaDmg[i]=udg_UndeadSpellManaDmg[i]+dmg
                if udg_UndeadSpellManaDmg[i]>50*(2-GetUnitAbilityLevel(dd,'S00T')/5) then
                    call SetUnitAbilityLevel(dd,'A0IU',IMinBJ(GetUnitAbilityLevel(dd,'A0IU')+1,100))
                    set udg_UndeadSpellManaDmg[i]=udg_UndeadSpellManaDmg[i]-50*(2-GetUnitAbilityLevel(dd,'S00T')/5)
                endif
            endif
            return true
        endif
        set i=i+1
    endloop
    return false
endfunction

function AddParasiteHP takes unit dd, real dmg returns boolean
    local integer i = 1
    loop
        exitwhen i>udg_UndeadSpellManaCount
        if udg_UndeadSpellManaUnit[i]==dd then
            if GetUnitTypeId(dd)!='n01R' then
                set udg_UndeadSpellManaHealth[i]=udg_UndeadSpellManaHealth[i]+dmg
                //call DisplayTextToPlayer(Player(0),0,0,"add")
            endif
            return true
        endif
        set i=i+1
    endloop
    return false
endfunction

function Trig_Dmg_taken_Actions takes nothing returns nothing
    local group g = CreateGroup()
    local group gg = CreateGroup()
    local unit u = GetEventDamageSource()
    local unit t = GetTriggerUnit()
    local real x = GetUnitX(t)
    local real y = GetUnitY(t)
    local real hp = (GetUnitState(t,UNIT_STATE_LIFE)-GetEventDamage())/GetUnitState(t,UNIT_STATE_MAX_LIFE)
    local integer i = GetUnitTypeId(u)
    local integer a = GetUnitTypeId(t)
    local item it
    local boolean S00Jresisting = true
    //call DisplayTextToPlayer(PlayerSlot(0),0,0,R2S(GetEventDamage())) 
    if GetUnitAbilityLevel(t,'B01A')>0 then
        call UnitRemoveAbility(t,'B01A')
        if i=='o002' then
            set i=a
        endif
        if i=='E01W' then
            if GetUnitAbilityLevel(t,'A0IJ')==1 then
                set i = 1
                set a = 0
                loop
                    exitwhen i>udg_HeroBankaCount
                    if udg_HeroBankaUnit[i]==t then
                        set a = i
                        set i = udg_HeroBankaCount
                    endif
                    set i=i+1
                endloop
                set udg_HeroBankaTime[a]=0
                if GetUnitAbilityLevel(u,'A0IF')==1 then
                    call SetUnitAbilityLevel(t,'A0IK',10)
                elseif GetUnitAbilityLevel(u,'A0IF')==2 then
                    call SetUnitAbilityLevel(t,'A0IK',40)
                elseif GetUnitAbilityLevel(u,'A0IF')==3 then
                    call SetUnitAbilityLevel(t,'A0IK',48)
                elseif GetUnitAbilityLevel(u,'A0IF')==4 then
                    call SetUnitAbilityLevel(t,'A0IK',55)
                elseif GetUnitAbilityLevel(u,'A0IF')==5 then
                    call SetUnitAbilityLevel(t,'A0IK',70)
                endif
                set udg_HeroBankaLvl[a]=GetUnitAbilityLevel(u,'A0IF')
                set udg_HeroBankaDD[a]=u
            else
                call UnitAddAbility(t,'A0IJ')
                call UnitAddAbility(t,'A0IK')
                if GetUnitAbilityLevel(u,'A0IF')==1 then
                    call SetUnitAbilityLevel(t,'A0IK',10)
                elseif GetUnitAbilityLevel(u,'A0IF')==2 then
                    call SetUnitAbilityLevel(t,'A0IK',40)
                elseif GetUnitAbilityLevel(u,'A0IF')==3 then
                    call SetUnitAbilityLevel(t,'A0IK',48)
                elseif GetUnitAbilityLevel(u,'A0IF')==4 then
                    call SetUnitAbilityLevel(t,'A0IK',55)
                elseif GetUnitAbilityLevel(u,'A0IF')==5 then
                    call SetUnitAbilityLevel(t,'A0IK',70)
                endif
                set udg_HeroBankaCount=udg_HeroBankaCount+1
                set udg_HeroBankaTime[udg_HeroBankaCount]=0
                set udg_HeroBankaUnit[udg_HeroBankaCount]=t
                set udg_HeroBankaDD[udg_HeroBankaCount]=u
                set udg_HeroBankaLvl[udg_HeroBankaCount]=GetUnitAbilityLevel(u,'A0IF')
                //call DisplayTextToPlayer(Player(0),0,0,"GetUnitAbilityLevel(u,'A0IF')="+I2S(GetUnitAbilityLevel(u,'A0IF')))
                
            endif
            call UnitAddAbility(t,'A0II')
            call IssueImmediateOrder(t,"stop")
        else
        if i<'n011' then
            if i<'n003' then
                if i<'h001' then
                    if i<'e005' then
                        if i=='e000' then
                            if GetUnitAbilityLevel(t,'S00G')==1 then
                                set i = 1
                                set a = 0
                                loop
                                    exitwhen i>udg_SuccubCurseNum
                                    if udg_SuccubCurseUnit[i]==t then
                                        set a = i
                                        set i = udg_SuccubCurseNum
                                    endif
                                    set i=i+1
                                endloop
                                set udg_SuccubCurseTime[a]=81
                                call UnitRemoveAbility(t,'S00G')
                                call UnitRemoveAbility(t,'B016')
                                call UnitAddAbility(t,'S00G')
                            else
                                call UnitAddAbility(t,'S00G')
                                set udg_SuccubCurseNum=udg_SuccubCurseNum+1
                                set udg_SuccubCurseUnit[udg_SuccubCurseNum]=t
                                set udg_SuccubCurseTime[udg_SuccubCurseNum]=81
                            endif
                        else//'e001'
                            if hp>0 then
                                set i = GetPlayerSlotId(GetOwningPlayer(u))-6
                                set u = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                                call UnitAddAbility(u,'A001')
                                call UnitApplyTimedLife(u,'BTLF',1)
                                call UnitAddAbility(u,'A01E')
                                call IssueTargetOrder(u,"curse",t)
                            endif
                        endif
                    else
                        if i=='e005' then
                            set x = 0.08*(GetUnitState(t,UNIT_STATE_MAX_LIFE)-GetUnitState(t,UNIT_STATE_LIFE))
                            if x>35 then
                                set x=35
                            endif
                            call UnitDamageTarget(u,t,x,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                        else//'e00E'
                            set i = GetUnitAbilityLevel(u,'A07O')
                            call SetUnitAbilityLevel(u,'A07O',i+1)
                            if GetRandomReal(0,100)<=i*8.475 then
                                call SetUnitAbilityLevel(u,'A07O',1)
                                set t = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                                call UnitApplyTimedLife(t,'BTLF',1)
                                call UnitAddAbility(t,'A07M')
                                set i = GetUnitAbilityLevel(u,'A06M')
                                call SetUnitAbilityLevel(t,'A07M',i)
                                call IssueTargetOrder(t,"thunderbolt",GetTriggerUnit())
                                call UnitDamageTarget(t,GetTriggerUnit(),30+(0.35+0.05*i)*(GetUnitState(u,UNIT_STATE_MAX_LIFE)-GetUnitState(u,UNIT_STATE_LIFE)),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                            endif
                        endif
                    endif
                else
                    if i<'h01Q' then
                        if i>='h001' and i<='h003' then
                            if i=='h003' then
                                call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+4)
                            elseif i=='h002' then
                                if GetUnitAbilityLevel(t,'S00S')==0 then
                                    call UnitAddAbility(t,'S00S')
                                    call UnitAddAbility(t,'A0GY')
                                elseif GetUnitAbilityLevel(t,'A0GY')<100 then
                                    call SetUnitAbilityLevel(t,'A0GY',GetUnitAbilityLevel(t,'A0GY')+1)
                                endif
                            endif
                            if GetUnitAbilityLevel(t,'A0GY')>0 then
                                call UnitDamageTarget(u,t,GetUnitAbilityLevel(t,'A0GY')*3,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                            endif
                        else
                            if i=='h00A' then
                                set i = GetUnitAbilityLevel(t,'A08T')
                                if i==0 then
                                    call UnitAddAbility(t,'A08T')
                                    call UnitAddAbility(t,'S00O')
                                else
                                    if i<51 then
                                        call SetUnitAbilityLevel(t,'A08T',i+1)
                                    endif
                                    call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\IncinerateBuff.mdl",t,"overhead"))
                                    call UnitDamageTarget(u,t,i*20,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                endif
                            else//'h00B'
                                set i = GetUnitAbilityLevel(t,'A08T')
                                if i==0 then
                                    call UnitAddAbility(t,'A08T')
                                    call UnitAddAbility(t,'S00O')
                                else
                                    if i<51 then
                                        call SetUnitAbilityLevel(t,'A08T',i+1)
                                    endif
                                endif
                                call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),460,null)
                                call GroupRemoveUnit(g,u)
                                set t = FirstOfGroup(g)
                                loop
                                    exitwhen t==null
                                    if IsUnitEnemy(t,GetOwningPlayer(u)) and GetUnitState(t,UNIT_STATE_LIFE)>0 then
                                        set x = GetUnitX(t)-GetUnitX(u)
                                        set y = GetUnitY(t)-GetUnitY(u)
                                        set x = SquareRoot(x*x+y*y)-2*GetUnitPointValue(t)
                                        if x<=270 then
                                            set i = GetUnitAbilityLevel(t,'A0GA')
                                            if i==0 then
                                                call UnitAddAbility(t,'A0GA')
                                                call UnitAddAbility(t,'S00P')
                                            else
                                                if i<51 then
                                                    call SetUnitAbilityLevel(t,'A0GA',i+1)
                                                endif
                                            endif
                                            call UnitDamageTarget(u,t,32+i*8,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                        endif
                                    endif
                                    call GroupRemoveUnit(g,t)
                                    set t = FirstOfGroup(g)
                                endloop
                            endif
                        endif
                    else
                        if i=='h01Q' then
                            if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) and hp>0 then
                                set t = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                                call UnitApplyTimedLife(t,'BTLF',1)
                                call UnitAddAbility(t,'A0FU')
                                if IssueTargetOrder(t,"thunderbolt",GetTriggerUnit()) then
                                    call SetUnitState(u,UNIT_STATE_MANA,0)
                                    call UnitDamageTarget(u,GetTriggerUnit(),50,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                endif
                            endif
			            else//'n001'
                            set x=GetUnitState(t,UNIT_STATE_MAX_LIFE)*0.03+GetUnitAbilityLevel(t,'AO8H')*6
                            if x>30 then
                            	set x=30
                            endif
                            call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",u,"origin"))
                            set udg_GhoulDMGdeal=true
                            call UnitDamageTarget(u,t,x,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                            set udg_GhoulDMGdeal=false
			            endif
                    endif
                endif
            else
                if i<'n00R' then
                
                    if i<'n00A' then
                    	if i=='n003' then
                            call UnitDamageTarget(u,t,10,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                        else//'n004'
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
                            set S00Jresisting = false
                            set t = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                            set udg_DummyWaveNum=udg_DummyWaveNum+1
                            set udg_DummyWaveRu[udg_DummyWaveNum]=u
                            set udg_DummyWaveDd[udg_DummyWaveNum]=t
                            call UnitAddAbility(t,'A0CY')
                            call UnitAddAbility(t,'A072')
                            call UnitApplyTimedLife(t,'BTLF',3)
                            call IssuePointOrder(t,"carrionswarm",x,y)
                        endif
		            else
                    	if i=='n00A' then
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
                            set S00Jresisting = false
                            set u = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                            call UnitAddAbility(u,'A001')
                            call UnitApplyTimedLife(u,'BTLF',1)
                            call UnitAddAbility(u,'A067')
                            call IssueTargetOrder(u,"thunderbolt",t)
                            call UnitDamageTarget(GetEventDamageSource(),t,25,true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                        else//'n00Q'
                            if udg_BR and GetUnitState(t,UNIT_STATE_MAX_LIFE)>=200 then
                                set udg_BR = false
                               call UnitDamageTarget(u,t,1.7*GetEventDamage(),true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
                               call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Orc\\OrcLargeDeathExplode\\OrcLargeDeathExplode.mdl",x,y))
                                set udg_BR = true
                            endif
                        endif
                    endif
                else
                    if i<'n00W' then
                        if i=='n00R' then
			                if GetUnitAbilityLevel(u,'A06U')>0 then
                                call UnitRemoveAbility(u,'A06U')
                                set u = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),0)
                                call UnitApplyTimedLife(u,'BTLF',1)
                                call UnitAddAbility(u,'A06U')
                                call IssueImmediateOrder(u,"fanofknives")
			                else
			                    call UnitAddAbility(u,'A06U')
			                endif
                        else// i=='n00T'
                            if GetUnitAbilityLevel(u,'A06Z')>0 then
                                set x = 0.45*GetUnitState(t,UNIT_STATE_LIFE)
                                if x>280 then
                                    call UnitDamageTarget(u,t,280,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                else
                                    call UnitDamageTarget(u,t,x,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                endif
                            endif
                        endif
                    else
                        if i=='n00W' then
			                if GetUnitAbilityLevel(u,'A06Z')>0 then
				                set udg_OgreHitNum=udg_OgreHitNum+1
				                set udg_OgreHitUnit[udg_OgreHitNum]=t
				                set udg_OgreHitTime[udg_OgreHitNum]=0
                                set x = GetUnitX(t)-GetUnitX(u)
			                	set y = GetUnitY(t)-GetUnitY(u)
                                set udg_OgreHitX[udg_OgreHitNum] = x/SquareRoot((x*x)+(y*y))*11
                	        	set udg_OgreHitY[udg_OgreHitNum] = y/SquareRoot((x*x)+(y*y))*11
                                call UnitDamageTarget(u,t,80,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                set t = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(t),GetUnitY(t),0)
                                call UnitAddAbility(t,'A02C')
                                call UnitApplyTimedLife(t,'BTLF',1)
                                call IssueTargetOrder(t,"thunderbolt",GetTriggerUnit())
			                endif
                        else// i=='n00Z'
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
                            set S00Jresisting = false
                            set udg_InfernalCannonSpellNum=udg_InfernalCannonSpellNum+1
                            set udg_InfernalCannonSpellDummy[udg_InfernalCannonSpellNum]=null
                            set udg_InfernalCannonSpellUnit[udg_InfernalCannonSpellNum]=u
                            set udg_InfernalCannonSpellX[udg_InfernalCannonSpellNum]=GetUnitX(t)
                            set udg_InfernalCannonSpellY[udg_InfernalCannonSpellNum]=GetUnitY(t)
                            set udg_InfernalCannonSpellTime[udg_InfernalCannonSpellNum]=0
                        endif
                    endif
                endif
            endif
        else
            if i<'o004' then
                if i<'n01C' then
                    if i<'n016' then
                        if i=='n011' then
                            if GetUnitAbilityLevel(t,'S00L')==1 then
                                set i = 1
                                set a = 0
                                loop
                                    exitwhen i>udg_MargolDaggerNum
                                    if udg_MargolDaggerUnit[i]==t then
                                        set a = i
                                        set i = udg_MargolDaggerNum
                                    endif
                                    set i=i+1
                                endloop
                                set udg_MargolDaggerTime[a]=80+4*(GetUnitAbilityLevel(u,'A015'))
                                set udg_MargolDaggerDd[a]=u
                                call UnitRemoveAbility(t,'S00M')
                                call UnitRemoveAbility(t,'B02Q')
                                call UnitAddAbility(t,'S00M')
                            else
                                call UnitAddAbility(t,'S00M')
                                call UnitAddAbility(t,'A0FV')
                                set udg_MargolDaggerNum=udg_MargolDaggerNum+1
                                set udg_MargolDaggerTime[udg_MargolDaggerNum]=80+4*(GetUnitAbilityLevel(u,'A015'))
                                set udg_MargolDaggerUnit[udg_MargolDaggerNum]=t
                                set udg_MargolDaggerDd[udg_MargolDaggerNum]=u
                            endif
                        else//'n012'
                            set i = GetPlayerSlotId(GetOwningPlayer(u))-6
                            set u = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                            call UnitAddAbility(u,'A08O')
                            call UnitApplyTimedLife(u,'BTLF',2)
                            call IssuePointOrderById(u,852560,GetUnitX(t),GetUnitY(t))
                        endif
                    else
                        if i=='n016' then
                            set i = GetUnitAbilityLevel(t,'A08N')
                            if i>0 then
                                if i<7 then
                                    call SetUnitAbilityLevel(t,'A08N',i+1)
                                endif
                            else
                                call UnitAddAbility(t,'A08N')
                            endif
                        else//'n018'
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
                        endif
                    endif
                else
                    if i<'n01L' then
                        if i=='n01C' then
                            if GetUnitState(u,UNIT_STATE_MANA)==GetUnitState(u,UNIT_STATE_MAX_MANA) then
                                call UnitDamageTarget(u,t,40+2*GetUnitAbilityLevel(u,'A015'),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                                call SetUnitState(u,UNIT_STATE_MANA,0)
			                endif
                        else//'n01J'
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
    	    		        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\Impale\\ImpaleMissTarget.mdl",GetUnitX(t),GetUnitY(t)))
    	    		        call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\Impale\\ImpaleHitTarget.mdl",GetUnitX(t),GetUnitY(t)))
                            set udg_DummyWaveNum=udg_DummyWaveNum+1
                            set udg_DummyWaveRu[udg_DummyWaveNum]=u
                            set u = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(t),GetUnitY(t)-5,90)
                            set udg_DummyWaveDd[udg_DummyWaveNum]=u
			                if GetUnitAbilityLevel(GetEventDamageSource(),'S00E')>0 then
			                	call UnitAddAbility(u,'S00E')
			                endif
                            call UnitAddAbility(u,'A0CY')
                            call UnitAddAbility(u,'A0B7')
                            call UnitApplyTimedLife(u,'BTLF',5)
                            call IssueTargetOrder(u,"unstableconcoction",t)
                        endif
                    else
                        if i=='n01L' then
                            if GetUnitState(u,UNIT_STATE_MANA)>=5 then
                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-5)
                                set i=1
                                set a=0
                                loop
                                    exitwhen i>udg_FellHoundDebuffNum
                                    if udg_FellHoundDebuffUnit[i]==t then
                                        set a=i
                                    endif
                                    set i=i+1
                                endloop
                                if a>0 then
                                    if GetUnitAbilityLevel(t,'A0BH')<15 then
                                        call SetUnitAbilityLevel(t,'A0BH',GetUnitAbilityLevel(t,'A0BH')+1)
                                    endif
                                    set udg_FellHoundDebuffTime[a]=31
                                    set udg_FellHoundDebuffDealer[a]=u
                                else
                                    set udg_FellHoundDebuffNum=udg_FellHoundDebuffNum+1
                                    set udg_FellHoundDebuffUnit[udg_FellHoundDebuffNum]=t
                                    set udg_FellHoundDebuffDealer[udg_FellHoundDebuffNum]=u
                                    set udg_FellHoundDebuffTime[udg_FellHoundDebuffNum]=31
                                    call UnitAddAbility(t,'A0BH')
                                    call UnitAddAbility(t,'S00F')
                                endif
                            endif
                        else//'n01O'
                            // ПУСТАЯ СТРОКА
                            
                            
                            
                            
                                set i=1
                                set a=0
                                loop
                                    exitwhen i>udg_FireLordDebuffNum
                                    if udg_FireLordDebuffUnit[i]==t then
                                        set a=i
                                    endif
                                    set i=i+1
                                endloop
                                if a>0 then
                                    set udg_FireLordDebuffTime[a]=31
                                    set udg_FireLordDebuffDealer[a]=u
                                else
                                    set udg_FireLordDebuffNum=udg_FireLordDebuffNum+1
                                    set udg_FireLordDebuffUnit[udg_FireLordDebuffNum]=t
                                    set udg_FireLordDebuffDealer[udg_FireLordDebuffNum]=u
                                    set udg_FireLordDebuffTime[udg_FireLordDebuffNum]=31
                                    call UnitAddAbility(t,'S00R')
                                endif
                            
                            
                            
                            
                        endif
                    endif
                endif
            else
                if i<'u005' then
                    if i<'o00D' then
                        if i=='o004' then
			                call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+GetEventDamage())
                            set S00Jresisting = false
                            udg_SferiMolniiNum=udg_SferiMolniiNum+1
                            udg_SferiMolniiDealer[udg_SferiMolniiNum]=u
                            udg_SferiMolniiDummi[udg_SferiMolniiNum] = CreateUnit(GetOwningPlayer(u),'e00N',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
			                if GetUnitAbilityLevel(GetEventDamageSource(),'S00E')>0 then
			                    call UnitAddAbility(udg_SferiMolniiDummi[udg_SferiMolniiNum],'S00E')
			                endif
                            call UnitApplyTimedLife(udg_SferiMolniiDummi[udg_SferiMolniiNum],'BTLF',5.5)
                            call IssuePointOrder(udg_SferiMolniiDummi[udg_SferiMolniiNum],"move",x,y)
                        else//'o008'
			                if GetUnitAbilityLevel(u,'A022')==3 then
				                call SetUnitAbilityLevel(u,'A022',1)
                	    	    call GroupEnumUnitsInRange(g,GetUnitX(u),GetUnitY(u),450,null)
			    	            call GroupRemoveUnit(g,u)
			    	            call GroupRemoveUnit(g,t)
                            	set t = CreateUnit(GetOwningPlayer(t),'e019',x,y-5,90)
                            	call UnitAddAbility(t,'A001')
                            	call UnitAddAbility(t,'A002')
                            	call UnitApplyTimedLife(t,'BTLF',1)
                            	call IssueTargetOrder(t,"thunderbolt",GetTriggerUnit())
				                set i = GetPlayerSlotId(GetOwningPlayer(u))
    				            set x = GetUnitX(u)
    				            set y = GetUnitY(u)
                	    	    set t = FirstOfGroup(g)
                                loop
				                    exitwhen t==null
				                    if GetUnitAbilityLevel(t,'Aloc')==0 and IsUnitEnemy(t,Player(i)) and GetUnitState(t,UNIT_STATE_LIFE)>0 then
					                    if SquareRoot((x-GetUnitX(t))*(x-GetUnitX(t))+(y-GetUnitY(t))*(y-GetUnitY(t)))-2*GetUnitPointValue(t)-64<170 then
                                	        call UnitDamageTarget(u,t,GetEventDamage(),true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
                            		        set u = CreateUnit(GetOwningPlayer(t),'e019',GetUnitX(t),GetUnitY(t)-5,90)
                            		        call UnitAddAbility(u,'A001')
                            		        call UnitAddAbility(u,'A002')
                            		        call UnitApplyTimedLife(u,'BTLF',1)
                            		        call IssueTargetOrder(u,"thunderbolt",t)
					                    endif
				                    endif
				                    call GroupRemoveUnit(g,t)
				                    set t = FirstOfGroup(g)
				                endloop
			                else
				                call SetUnitAbilityLevel(u,'A022',GetUnitAbilityLevel(u,'A022')+1)
			                endif
		            	endif
		            else
                        if i<'o00G' then
                            if i=='o00D' then
                                //call DisplayTextToPlayer(Player(0),0,0,"ADD1")
                                if GetUnitAbilityLevel(t,'S00L')==1 then
                                    set i = 1
                                    set a = 0
                                    loop
                                        exitwhen i>udg_BankaOrcNum
                                        if udg_BankaOrcUnit[i]==t then
                                            set a = i
                                            set i = udg_BankaOrcNum
                                        endif
                                        set i=i+1
                                    endloop
                                    set udg_BankaOrcTime[a]=61
                                    set udg_BankaOrcDd[a]=u
                                    call UnitRemoveAbility(t,'S00L')
                                    call UnitRemoveAbility(t,'B029')
                                    call UnitAddAbility(t,'S00L')
                                else
                                    call UnitAddAbility(t,'S00L')
                                    call UnitAddAbility(t,'A0FR')
                                    set udg_BankaOrcNum=udg_BankaOrcNum+1
                                    set udg_BankaOrcTime[udg_BankaOrcNum]=61
                                    set udg_BankaOrcUnit[udg_BankaOrcNum]=t
                                    set udg_BankaOrcDd[udg_BankaOrcNum]=u
                                endif
                            else//'o00F'
                                if GetUnitAbilityLevel(u,'A06Z')>0 then
                                    set x = 0.45*GetUnitState(t,UNIT_STATE_LIFE)
                                    if x>280 then
                                        call UnitDamageTarget(u,t,280,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                    else
                                        call UnitDamageTarget(u,t,x,true,false,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
                                    endif
                                endif
                            endif
                        else//'o00G'
			                if GetUnitAbilityLevel(u,'A022')==3 then
				                call SetUnitAbilityLevel(u,'A022',1)
                            	set t = CreateUnit(GetOwningPlayer(u),'e019',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
                            	set udg_DummyWaveNum=udg_DummyWaveNum+1
                            	set udg_DummyWaveRu[udg_DummyWaveNum]=u
                            	set udg_DummyWaveDd[udg_DummyWaveNum]=t
                           		call UnitAddAbility(t,'A0CY')
                            	call UnitAddAbility(t,'A020')
                            	call UnitApplyTimedLife(t,'BTLF',4)
                            	call IssuePointOrder(t,"shockwave",x,y)
			                else
				                call SetUnitAbilityLevel(u,'A022',GetUnitAbilityLevel(u,'A022')+1)
			                endif
                        endif
                    endif
                else
                    if i<'u00B' then
                        if i=='u005' then
                            set i = GetUnitAbilityLevel(u,'A000')
                            if i<5 then
                                call SetUnitAbilityLevel(u,'A000',i+1)
                            else
                                if GetUnitState(u,UNIT_STATE_MANA)>40 then
                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-40)
                                    call SetUnitAbilityLevel(u,'A000',1)
                                    set i = GetPlayerSlotId(GetOwningPlayer(u))
                                    if i/2*2==i then
                                        set i=i/2-2
                                    else
                                        set i=i/2+1
                                    endif
                                    set t = CreateUnit(GetOwningPlayer(u),'u00X',GetUnitX(u),GetUnitY(u),GetUnitFacing(u))
    	    			            //call SetUnitColor(u,udg_PlayerColor[i])
                                    call CopySpecialUnitAbilitiesAddAddToWarCreepGroup(0,u,t,false,false,false)
    				                /*if IsUnitInGroup(u,udg_PlayerWarriorsGroup[i]) then
            			                call GroupAddUnit(udg_PlayerWarriorsGroup[i],t)
				                    else
	    			                    if IsUnitInGroup(u,udg_PlayerCreepsGroup[i+3-6*(i/4)]) then
            			                	call GroupAddUnit(udg_PlayerCreepsGroup[i+3-6*(i/4)],t)
	    			                    endif
				                    endif*/
                                endif
                            endif
                        else// i=='u007'
                            call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+0.25*GetEventDamage())
                            set u = CreateUnit(GetOwningPlayer(u),'e019',x,y,0)
                            call UnitAddAbility(u,'A001')
                            call UnitAddAbility(u,'A073')
                            call IssueTargetOrder(u,"drunkenhaze",t)
                            call UnitApplyTimedLife(u,'BTLF',0.2)
                        endif
                    else
                        if i=='u00B' then
                            if GetUnitState(u,UNIT_STATE_MANA)>=9 and hp>0 then
                                set t = CreateUnit(GetOwningPlayer(u),'e019',x-100,y,0)
                                call UnitAddAbility(t,'A007')
                                call UnitApplyTimedLife(t,'BTLF',1)
                                if IssueTargetOrder(t,"frostnova",GetTriggerUnit()) then
                                    call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)-9)
                                endif
                            else
                                call SetUnitState(u,UNIT_STATE_MANA,GetUnitState(u,UNIT_STATE_MANA)+2)
                            endif
                        else// i=='u01G'
                            call UnitDamageTarget(u,u,8,true,false,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                        endif
                    endif
                endif
            endif
        endif
        endif
    else
        if udg_GhoulDMGdeal then
            set udg_GhoulDMGdeal=false
            call SetUnitState(u,UNIT_STATE_LIFE,GetUnitState(u,UNIT_STATE_LIFE)+GetEventDamage())
        endif
    endif

    if GetEventDamage()>0 then
        set t=GetTriggerUnit()
        set x=GetUnitX(t)
        set y=GetUnitY(t)
        set u=GetEventDamageSource()
        set a = GetUnitTypeId(t)
        //call DisplayTextToPlayer(Player(0),0,0,"!1")
        if GetUnitAbilityLevel(t,'S00T')>0 then//Паразит нежити для хп
            call AddParasiteHP(t,GetEventDamage())
        endif
        //call DisplayTextToPlayer(Player(0),0,0,"!2")
        if GetUnitAbilityLevel(u,'S00E')>0 then
            call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)-0.15*GetEventDamage())
        endif
        if GetUnitTypeId(u)=='n01A' and GetUnitTypeId(t)=='n01A' then
            call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)-GetEventDamage())
        endif

        set hp=(GetUnitState(t,UNIT_STATE_LIFE)-GetEventDamage())/GetUnitState(t,UNIT_STATE_MAX_LIFE)

        if GetUnitAbilityLevel(t,'S00J')==1 and u!=null and S00Jresisting then
            if GetUnitAbilityLevel(u,'A08Z')==0 and not(IsUnitType(u,UNIT_TYPE_STRUCTURE)) then
                set x = GetUnitX(t)-GetUnitX(u)
                set y = GetUnitY(t)-GetUnitY(u)
                set x = SquareRoot((x*x)+(y*y))-2*(GetUnitPointValue(u)+GetUnitPointValue(t))
                if x>180 then
                    if x>300 then
                        //call DisplayTextToPlayer(Player(0),0,0,"max heal "+R2S(0.4*GetEventDamage()))
                        call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+0.40*GetEventDamage())
                    else
                        //call DisplayTextToPlayer(Player(0),0,0,"heal "+R2S((x-195)/325*GetEventDamage()))
                        call SetUnitState(t,UNIT_STATE_LIFE,GetUnitState(t,UNIT_STATE_LIFE)+(x-180)/300*GetEventDamage())
                    endif
                endif
                set x=GetUnitX(t)
                set y=GetUnitY(t)
            endif
        endif
        if (a=='u000' or a=='u002') and GetUnitState(t,UNIT_STATE_MANA)>=70 and hp<=0.4 and GetUnitAbilityLevel(t,'B01I')==0 and GetUnitAbilityLevel(t,'BNdo')==0 then
            call UnitAddAbility(t,'A009')
            set it = CreateItem('I00B',0,0)
            call SetUnitState(t,UNIT_STATE_MANA,0)
            call GroupAddUnit(udg_GolemiPloti,t)
            if GetUnitAbilityLevel(t,'A0DU')==0 then
                call UnitAddAbility(t,'AInv')
                call UnitAddItem(t,it)
                call UnitRemoveAbility(t,'AInv')
            else
                call UnitAddItem(t,it)
            endif
            call RemoveItem(it)
            set it = null
        endif
        if GetUnitAbilityLevel(t,'A0AP')==1 and hp<=0.35 then
            call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Items\\AIil\\AIilTarget.mdl",x,y))
	        call UnitAddAbility(t,'A0AU')
	        call UnitRemoveAbility(t,'A0AP')
		    set i = 1
		    set a = 0
		    loop
		        exitwhen i>udg_ElfUnseenNum
		        if udg_ElfUnseenUnit[i]==t then
	            	set udg_ElfUnseenTime[i]=udg_ElfUnseenTime[i]+30
	        		set i = udg_ElfUnseenNum
	        		set a = 1
		        endif
		        set i=i+1
		    endloop
		    if a==0 then
		        set udg_ElfUnseenNum=udg_ElfUnseenNum+1
		        set udg_ElfUnseenUnit[udg_ElfUnseenNum]=t
		        set udg_ElfUnseenTime[udg_ElfUnseenNum]=30
		    endif
        endif
        if (GetUnitAbilityLevel(u,'S00G')==1 or GetUnitAbilityLevel(u,'S00T')>0 or GetUnitAbilityLevel(u,'A0CY')==1) and GetUnitAbilityLevel(t,'A0BQ')==0 and S00Jresisting then
            if GetUnitAbilityLevel(u,'A0CY')==1 then
                set i = 1
                loop
                    exitwhen i>udg_DummyWaveNum
                    if udg_DummyWaveDd[i]==u then
                        if GetUnitAbilityLevel(udg_DummyWaveRu[i],'S00G')==1 then//Нож суккубы для дамми
                            set udg_GhoulDMGdeal=true
                            call UnitDamageTarget(t,udg_DummyWaveRu[i],GetEventDamage()*0.33,true,false,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                            set udg_GhoulDMGdeal=false
                        endif
                        if GetUnitAbilityLevel(udg_DummyWaveRu[i],'S00T')>0 then//Паразит нежити для дамми
                        endif
                        set i = udg_DummyWaveNum
                    endif
                    set i=i+1
                endloop
            else
                if GetUnitAbilityLevel(u,'S00G')>0 then//Нож суккубы для оригинала
                    set udg_GhoulDMGdeal=true
                    call UnitDamageTarget(t,u,GetEventDamage()*0.33,true,false,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                    set udg_GhoulDMGdeal=false
                endif
                if GetUnitAbilityLevel(u,'S00T')>0 then//Паразит нежити для оригинала
                    call AddParasiteDmg(u,GetEventDamage())
                endif
            endif
        endif
	        
    endif
    call GroupClear(g)
    call DestroyGroup(g)
    set g=null
    call GroupClear(gg)
    call DestroyGroup(gg)
    set gg=null
    set u = null
    set t = null
endfunction

//===========================================================================
function InitTrig_Dmg_taken takes nothing returns nothing
    set gg_trg_Dmg_taken = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Dmg_taken, function Trig_Dmg_taken_Actions )
endfunction

//===========================================================================
// Trigger: EntUp
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_EntUp_Conditions takes nothing returns boolean
    return GetUnitAbilityLevel(GetTriggerUnit(),'A07F')>0
endfunction

function Trig_EntUp_Actions takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetUnitAbilityLevel(u,'A06E')
    call SetUnitAbilityLevel(u,'A03I',i)
    call SetUnitAbilityLevel(u,'A036',i)
    call SetUnitAbilityLevel(u,'A038',i)
    call SetUnitAbilityLevel(u,'A037',i)
    call SetUnitAbilityLevel(u,'A03H',i)
    call SetUnitAbilityLevel(u,'A03F',i)
    call SetUnitAbilityLevel(u,'A07N',i)
    set u = null
endfunction

//===========================================================================
function InitTrig_EntUp takes nothing returns nothing
    set gg_trg_EntUp = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(0),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(1),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(2),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(3),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(4),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_EntUp,Player(5),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerAddCondition( gg_trg_EntUp, Condition( function Trig_EntUp_Conditions ) )
    call TriggerAddAction( gg_trg_EntUp, function Trig_EntUp_Actions )
endfunction
//===========================================================================
// Trigger: ElfUp
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_ElfUp_Conditions takes nothing returns boolean
    return false//GetUnitAbilityLevel(GetTriggerUnit(),'A07E')>0
endfunction

function Trig_ElfUp_Actions takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer i = GetUnitAbilityLevel(u,'A07G')
    call SetUnitAbilityLevel(u,'A03B',i)
    call SetUnitAbilityLevel(u,'A032',i)
    call SetUnitAbilityLevel(u,'A03A',i)
    call SetUnitAbilityLevel(u,'A03F',i)
    call SetUnitAbilityLevel(u,'A039',i)
    call SetUnitAbilityLevel(u,'A03C',i)
    call SetUnitAbilityLevel(u,'A03D',i)
    call SetUnitAbilityLevel(u,'A02Z',i)
    call SetUnitAbilityLevel(u,'A035',i)
    call SetUnitAbilityLevel(u,'A03B',i)
    call SetUnitAbilityLevel(u,'A030',i)
    call SetUnitAbilityLevel(u,'A07B',i)
    call SetUnitAbilityLevel(u,'A031',i)
    //call SetUnitAbilityLevel(u,'A033',i)
    call SetUnitAbilityLevel(u,'A034',i)
    call SetUnitAbilityLevel(u,'A03E',i)
    call SetUnitAbilityLevel(u,'A03G',i)
    set u = null
endfunction

//===========================================================================
function InitTrig_ElfUp takes nothing returns nothing
    set gg_trg_ElfUp = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(0),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(1),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(2),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(3),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(4),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_ElfUp,Player(5),EVENT_PLAYER_UNIT_UPGRADE_FINISH,null)
    call TriggerAddCondition( gg_trg_ElfUp, Condition( function Trig_ElfUp_Conditions ) )
    call TriggerAddAction( gg_trg_ElfUp, function Trig_ElfUp_Actions )
endfunction
//===========================================================================
// Trigger: DummyWaveCaster
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DummyWaveCaster_Actions takes nothing returns nothing
    local integer a = 1
    loop
        exitwhen a>udg_DummyWaveNum
        if GetUnitState(udg_DummyWaveDd[a],UNIT_STATE_LIFE)==0 then
            set udg_DummyWaveDd[a]=udg_DummyWaveDd[udg_DummyWaveNum]
            set udg_DummyWaveRu[a]=udg_DummyWaveRu[udg_DummyWaveNum]
            set udg_DummyWaveNum=udg_DummyWaveNum-1
        else
            set a=a+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_DummyWaveCaster takes nothing returns nothing
    set gg_trg_DummyWaveCaster = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DummyWaveCaster, 0.1, true)
    call TriggerAddAction( gg_trg_DummyWaveCaster, function Trig_DummyWaveCaster_Actions )
endfunction

//===========================================================================
// Trigger: TeleportStuff
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_TeleportStuff_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_TeleportStuffNum
        if udg_TeleportStuffTime[i]==0 then
            call ShowUnit(udg_TeleportStuffUnit[i],true)
            call PauseUnit(udg_TeleportStuffUnit[i],false)
            call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitX(udg_TeleportStuffUnit[i]),GetUnitY(udg_TeleportStuffUnit[i])))
            call DestroyEffect(udg_TeleportStuffEffect[i])
            set udg_TeleportStuffEffect[i]=udg_TeleportStuffEffect[udg_TeleportStuffNum]
            set udg_TeleportStuffTime[i]=udg_TeleportStuffTime[udg_TeleportStuffNum]
            set udg_TeleportStuffUnit[i]=udg_TeleportStuffUnit[udg_TeleportStuffNum]
            set udg_TeleportStuffNum=udg_TeleportStuffNum-1
        else
            set udg_TeleportStuffTime[i]=udg_TeleportStuffTime[i]-1
            set i=i+1
        endif
    endloop
    set i = 1
    loop
        exitwhen i>udg_TeleportSaveNum
        if udg_TeleportSaveTime[i]==0 then
            call UnitRemoveAbility(udg_TeleportSaveUnit[i],'S004')
            call UnitRemoveAbility(udg_TeleportSaveUnit[i],'B017')
            set udg_TeleportSaveTime[i]=udg_TeleportSaveTime[udg_TeleportSaveNum]
            set udg_TeleportSaveUnit[i]=udg_TeleportSaveUnit[udg_TeleportSaveNum]
            set udg_TeleportSaveNum=udg_TeleportSaveNum-1
        else
            set udg_TeleportSaveTime[i]=udg_TeleportSaveTime[i]-1
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_TeleportStuff takes nothing returns nothing
    set gg_trg_TeleportStuff = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_TeleportStuff,0.1,true)
    call TriggerAddAction( gg_trg_TeleportStuff, function Trig_TeleportStuff_Actions )
endfunction
//===========================================================================
// Trigger: RockSpell
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_RockSpell_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_RockSpellNum
        //call DisplayTextToPlayer(PlayerSlot(0),0,0,I2S(i))
        if udg_RockSpellTime[i]==0 then
            call UnitRemoveAbility(udg_RockSpellUnit[i],'A0FF')
            call UnitRemoveAbility(udg_RockSpellUnit[i],'A0FG')
            call UnitRemoveAbility(udg_RockSpellUnit[i],'B02N')
            set udg_RockSpellTime[i]=udg_RockSpellTime[udg_RockSpellNum]
            set udg_RockSpellUnit[i]=udg_RockSpellUnit[udg_RockSpellNum]
            set udg_RockSpellNum=udg_RockSpellNum-1
        else
            set udg_RockSpellTime[i]=udg_RockSpellTime[i]-1
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_RockSpell takes nothing returns nothing
    set gg_trg_RockSpell = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_RockSpell,0.1,true)
    call TriggerAddAction( gg_trg_RockSpell, function Trig_RockSpell_Actions )
endfunction
//===========================================================================
// Trigger: UndeadSpellMana
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_UndeadSpellMana_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_UndeadSpellManaCount
        //call DisplayTextToPlayer(PlayerSlot(0),0,0,I2S(i))
        //if GetUnitState(udg_UndeadSpellManaUnit[i],UNIT_STATE_LIFE)==0 then
        if udg_UndeadSpellManaUnit[i]==null then
            //call UnitRemoveAbility(udg_RockSpellUnit[i],'A0IU')
            //call UnitRemoveAbility(udg_RockSpellUnit[i],'S00T')
            set udg_UndeadSpellManaUnit[i] = udg_UndeadSpellManaUnit[udg_UndeadSpellManaCount]
            set udg_UndeadSpellManaHealth[i]=udg_UndeadSpellManaHealth[udg_UndeadSpellManaCount]
            set udg_UndeadSpellManaDmg[i] =  udg_UndeadSpellManaDmg[udg_UndeadSpellManaCount]
            set udg_UndeadSpellManaCount  =  udg_UndeadSpellManaCount-1
        else
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_UndeadSpellMana takes nothing returns nothing
    set gg_trg_UndeadSpellMana = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_UndeadSpellMana,0.6,true)
    call TriggerAddAction( gg_trg_UndeadSpellMana, function Trig_UndeadSpellMana_Actions )
endfunction
//===========================================================================
// Trigger: EssOfBetr
//===========================================================================
//TESH.scrollpos=1
//TESH.alwaysfold=0
function Trig_EssOfBetr_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_EssOfBetrNum
        if udg_EssOfBetrTime[i]==0 then
            call UnitRemoveAbility(udg_EssOfBetrUnit[i],'A0F9')
            call UnitRemoveAbility(udg_EssOfBetrUnit[i],'A0FA')
            call UnitRemoveAbility(udg_EssOfBetrUnit[i],'A0FB')
            call UnitRemoveAbility(udg_EssOfBetrUnit[i],'B02M')
            set udg_EssOfBetrTime[i]=udg_EssOfBetrTime[udg_EssOfBetrNum]
            set udg_EssOfBetrUnit[i]=udg_EssOfBetrUnit[udg_EssOfBetrNum]
            set udg_EssOfBetrNum=udg_EssOfBetrNum-1
        else
            set udg_EssOfBetrTime[i]=udg_EssOfBetrTime[i]-1
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_EssOfBetr takes nothing returns nothing
    set gg_trg_EssOfBetr = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_EssOfBetr,0.1,true)
    call TriggerAddAction( gg_trg_EssOfBetr, function Trig_EssOfBetr_Actions )
endfunction
//===========================================================================
// Trigger: DemonSlow
//===========================================================================
//TESH.scrollpos=1
//TESH.alwaysfold=0
function Trig_DemonSlow_Actions takes nothing returns nothing
    local integer i = 1
    loop
        exitwhen i>udg_DemonSlowNum
        if udg_DemonSlowTime[i]==0 or GetUnitState(udg_DemonSlowUnit[i],UNIT_STATE_LIFE)==0 then
            call UnitRemoveAbility(udg_DemonSlowUnit[i],'S00I')
            call UnitRemoveAbility(udg_DemonSlowUnit[i],'B023')
            call UnitRemoveAbility(udg_DemonSlowUnit[i],'B025')
            set udg_DemonSlowTime[i]=udg_DemonSlowTime[udg_DemonSlowNum]
            set udg_DemonSlowUnit[i]=udg_DemonSlowUnit[udg_DemonSlowNum]
            set udg_DemonSlowNum=udg_DemonSlowNum-1
        else
            set udg_DemonSlowTime[i]=udg_DemonSlowTime[i]-1
            call SetUnitState(udg_DemonSlowUnit[i],UNIT_STATE_LIFE,GetUnitState(udg_DemonSlowUnit[i],UNIT_STATE_LIFE)+0.3*GetUnitAbilityLevel(udg_DemonSlowUnit[i],'S00I'))
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_DemonSlow takes nothing returns nothing
    set gg_trg_DemonSlow = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DemonSlow,0.1,true)
    call TriggerAddAction( gg_trg_DemonSlow, function Trig_DemonSlow_Actions )
endfunction
//===========================================================================
// Trigger: DemonSpellBc
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_DemonSpellBc_Actions takes nothing returns nothing
    local real a
    local integer i = 1
    loop
        exitwhen i>udg_DemonSpellBcNum
        if udg_DemonSpellBcTime[i]==0 or GetUnitState(udg_DemonSpellBcUnit[i],UNIT_STATE_LIFE)==0 then
            //call UnitRemoveAbility(udg_DemonSpellBcUnit[i],'S00N')
            //call UnitRemoveAbility(udg_DemonSpellBcUnit[i],'B025')
            call UnitRemoveAbility(udg_DemonSpellBcUnit[i],'A0G6')
            set udg_DemonSpellBcTime[i]=udg_DemonSpellBcTime[udg_DemonSpellBcNum]
            set udg_DemonSpellBcUnit[i]=udg_DemonSpellBcUnit[udg_DemonSpellBcNum]
            set udg_DemonSpellBcNum=udg_DemonSpellBcNum-1
        else
            set a = 0.0005*(1+GetUnitAbilityLevel(udg_DemonSpellBcUnit[i],'S00N'))*GetUnitState(udg_DemonSpellBcUnit[i],UNIT_STATE_MAX_LIFE)
            call SetUnitState(udg_DemonSpellBcUnit[i],UNIT_STATE_LIFE,GetUnitState(udg_DemonSpellBcUnit[i],UNIT_STATE_LIFE)-a)
            set udg_DemonSpellBcTime[i]=udg_DemonSpellBcTime[i]-1
            set i=i+1
        endif
    endloop
endfunction

//===========================================================================
function InitTrig_DemonSpellBc takes nothing returns nothing
    set gg_trg_DemonSpellBc = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_DemonSpellBc,0.1,true)
    call TriggerAddAction( gg_trg_DemonSpellBc, function Trig_DemonSpellBc_Actions )
endfunction
//===========================================================================
// Trigger: KodoUpgrd
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_KodoUpgrd_Conditions takes nothing returns boolean
    return GetResearched() == 'R10Y' or GetResearched() == 'R004'
endfunction

function Trig_KodoUpgrd_Actions takes nothing returns nothing
    local integer id = GetResearched()
    local integer i = GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))
    if i<3 then
        call SetPlayerTechResearched(PlayerSlot(i*2+6),'R10Y',GetPlayerTechCount(PlayerSlot(i*2+6),'R10Y',true)+1)
    else
        call SetPlayerTechResearched(PlayerSlot(i*2+1),'R10Y',GetPlayerTechCount(PlayerSlot(i*2+1),'R10Y',true)+1)
    endif
endfunction

//===========================================================================
function InitTrig_KodoUpgrd takes nothing returns nothing
    set gg_trg_KodoUpgrd = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_KodoUpgrd, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_KodoUpgrd, Condition( function Trig_KodoUpgrd_Conditions ) )
    call TriggerAddAction( gg_trg_KodoUpgrd, function Trig_KodoUpgrd_Actions )
endfunction

//===========================================================================
// Trigger: KodoUpgrdDemon
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_KodoUpgrdDemon_Conditions takes nothing returns boolean
    return GetResearched() == 'R105' or GetResearched() == 'R00D'
endfunction

function Trig_KodoUpgrdDemon_Actions takes nothing returns nothing
    local integer id = GetResearched()
    local integer i = GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))
    if i<3 then
        call SetPlayerTechResearched(PlayerSlot(i*2+6),'R00M',GetPlayerTechCount(PlayerSlot(i*2+6),'R00M',true)+1)
    else
        call SetPlayerTechResearched(PlayerSlot(i*2+1),'R00M',GetPlayerTechCount(PlayerSlot(i*2+1),'R00M',true)+1)
    endif
endfunction

//===========================================================================
function InitTrig_KodoUpgrdDemon takes nothing returns nothing
    set gg_trg_KodoUpgrdDemon = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_KodoUpgrdDemon, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_KodoUpgrdDemon, Condition( function Trig_KodoUpgrdDemon_Conditions ) )
    call TriggerAddAction( gg_trg_KodoUpgrdDemon, function Trig_KodoUpgrdDemon_Actions )
endfunction

//===========================================================================
// Trigger: SpellbookUpgrd
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_SpellbookUpgrd_Conditions takes nothing returns boolean
    return GetResearched() == 'R102' or GetResearched() == 'R007'
endfunction

function Trig_SpellbookUpgrd_Actions takes nothing returns nothing
    call SpellbookUpgrdInMain(GetPlayerSlotId(GetOwningPlayer(GetTriggerUnit()))+1)
endfunction

//===========================================================================
function InitTrig_SpellbookUpgrd takes nothing returns nothing
    set gg_trg_SpellbookUpgrd = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_SpellbookUpgrd, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_SpellbookUpgrd, Condition( function Trig_SpellbookUpgrd_Conditions ) )
    call TriggerAddAction( gg_trg_SpellbookUpgrd, function Trig_SpellbookUpgrd_Actions )
endfunction

//===========================================================================
// Trigger: GoblZep
//===========================================================================
//TESH.scrollpos=21
//TESH.alwaysfold=0
function Trig_GoblZep_Actions takes nothing returns nothing
    local integer i = 1
    //local integer a
    local unit u
    local group g
    local real x
    local real y
    loop
        exitwhen i>udg_GoblZepNum
        
        if udg_GoblZepTime[i]>0 then
            set udg_GoblZepTime[i]=udg_GoblZepTime[i]-1
        else
        
            //set a = GetPlayerSlotId(GetOwningPlayer(udg_GoblZepUnit[i]))
            //set a = a/2-2+3*(a-a/2*2)
            //if not(udg_StartSpellsWorkBool[a]) then
                set x = GetUnitX(udg_GoblZepUnit[i])
                set y = GetUnitY(udg_GoblZepUnit[i])
                set u = FirstOfGroup(udg_GoblZepGroup[i])
                loop
                    exitwhen u==null
                    call PauseUnit(u,false)
                    call ShowUnit(u,true)
                    call SetUnitPosition(u,x,y)
                    call GroupRemoveUnit(udg_GoblZepGroup[i],u)
                    set u = FirstOfGroup(udg_GoblZepGroup[i])
                endloop
                call DestroyGroup(udg_GoblZepGroup[i])
                
                set g = CreateGroup()
                call GroupEnumUnitsInRange(g,x,y,510,null)
                set u = FirstOfGroup(g)
                loop
                    exitwhen u==null
                    if GetUnitState(u,UNIT_STATE_LIFE)>0 and IsUnitEnemy(u,GetOwningPlayer(udg_GoblZepUnit[i])) and SquareRoot((GetUnitX(u)-x)*(GetUnitX(u)-x)+(GetUnitY(u)-y)*(GetUnitY(u)-y))-2*GetUnitPointValue(u)<400 then
                        call UnitDamageTarget(udg_GoblZepUnit[i],u,5*GetUnitAbilityLevel(udg_GoblZepUnit[i],'A0G0'),true,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
                    endif
                    call GroupRemoveUnit(g,u)
                    set u=FirstOfGroup(g)
                endloop
                call DestroyGroup(g)
                set g=null
                call KillUnit(udg_GoblZepUnit[i])
                
                set udg_GoblZepUnit[i] = udg_GoblZepUnit[udg_GoblZepNum]
                set udg_GoblZepTime[i] = udg_GoblZepTime[udg_GoblZepNum]
                set udg_GoblZepGroup[i] = udg_GoblZepGroup[udg_GoblZepNum]
                set udg_GoblZepNum = udg_GoblZepNum-1
            //endif
        endif
        
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_GoblZep takes nothing returns nothing
    set gg_trg_GoblZep = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_GoblZep, 0.1, true)
    call TriggerAddAction( gg_trg_GoblZep, function Trig_GoblZep_Actions )
endfunction

//===========================================================================
// Trigger: PassChose
//===========================================================================
//TESH.scrollpos=2
//TESH.alwaysfold=0
function Trig_PassChose_Conditions takes nothing returns boolean
    //return GetSpellAbilityId()>='A0C0' and GetSpellAbilityId()<='A0CH'
    return GetSpellAbilityId()>='A0H0' and GetSpellAbilityId()<='A0HH'
endfunction

function Trig_PassChose_FG_2 takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = GetUnitAbilityLevel(u,'A0D0')
    call UnitAddAbility(u,'A0D1')
    call UnitAddAbility(u,'A0D2')
    call SetUnitAbilityLevel(u,'A0D1',i)
    call SetUnitAbilityLevel(u,'A0D2',i)
    if i<5 then
        call UnitAddAbility(u,'A0D3')
        call SetUnitAbilityLevel(u,'A0D3',i)
    else
        call UnitAddAbility(u,'A0D4')
        call SetUnitAbilityLevel(u,'A0D4',i-4)
    endif
    set u = null
endfunction

function Trig_PassChose_FG_10 takes nothing returns nothing
    local unit u = GetEnumUnit()
    local integer i = GetUnitAbilityLevel(u,'A06E')
    if i>0 then
        call SetUnitAbilityLevel(u,'A06L',i)
        call SetUnitAbilityLevel(u,'A06H',i)
        call SetUnitAbilityLevel(u,'A01S',i)
        call SetUnitAbilityLevel(u,'A06M',i)
        call SetUnitAbilityLevel(u,'A06J',i)
        call SetUnitAbilityLevel(u,'A09P',i)
        call SetUnitAbilityLevel(u,'A06G',i)
        call SetUnitAbilityLevel(u,'A06F',i)
        call SetUnitAbilityLevel(u,'A06C',i)
        call SetUnitAbilityLevel(u,'A06D',i)
        call SetUnitAbilityLevel(u,'A06I',i)
        call SetUnitAbilityLevel(u,'A06K',i)
        call SetUnitAbilityLevel(u,'A01T',i)
        call SetUnitAbilityLevel(u,'A06A',i)
        call SetUnitAbilityLevel(u,'A06B',i)
        call SetUnitAbilityLevel(u,'A01Q',i)
        call UnitRemoveAbility(u,'A06E')
    else
        set i = GetUnitAbilityLevel(u,'A07G')
        call UnitAddAbility(u,'A01H')
        call UnitAddAbility(u,'A04S')
        call SetUnitAbilityLevel(u,'A01H',i)
        call SetUnitAbilityLevel(u,'A04S',i)
        call UnitRemoveAbility(u,'A07G')
    endif
    set u = null
endfunction

function Trig_PassChose_FG_11 takes nothing returns nothing
    call UnitAddAbility(GetEnumUnit(),'A0AP')
endfunction

function Trig_PassChose_FG_16 takes nothing returns nothing
    call UnitAddAbility(GetEnumUnit(),'A0B2')
endfunction

function Trig_PassChose_Actions takes nothing returns nothing
    local unit u = GetSpellAbilityUnit()
    local unit t
    local unit caster
    local location l
    local player pl = GetOwningPlayer(u)
    local integer pn = GetPlayerSlotId(pl)+1
    local integer id = GetSpellAbilityId()
    local integer i = id-'A0H0'+1// 'A0C0'
    local integer n
    local integer a
    local integer extraActions = 0
    
    local boolean extra = false

    if i>10 then
	    set i=i-7
    endif
    //if (i>=4 and i<=15) and ((udg_PassChosenByPlayer[pn]>=4 and udg_PassChosenByPlayer[pn]<=15) or (udg_PassChosenByPlayer[pn+6]>=4 and udg_PassChosenByPlayer[pn+6]<=15)) then
    //    set extra = true
    //endif
    if not((i<=3 and udg_PassChosenByPlayer[pn]<=3) or (i>=16 and udg_PassChosenByPlayer[pn]>=16)) and udg_PassChosenByPlayer[pn]>0 then
        set extra = true
    endif
    if udg_PassChosenByPlayer[pn]==0 then
        set udg_PassChosenByPlayer[pn]=i
    elseif udg_PassChosenByPlayer[pn+6]==0 then
        set udg_PassChosenByPlayer[pn+6]=i
    else
        set udg_PassChosenByPlayer[pn+12]=i
    endif
    set caster = udg_ThrouneCaster[pn]

    call SetPlayerAbilityAvailable(pl,id,false)
    call UnitAddAbility(u,id-1280)
    if NumPassChosenByPlayer(pn)>=udg_ChoosingModWorkersNum then
        call SetPlayerAbilityAvailable(pl,'A0HI',false)
        call UnitRemoveAbility(u,'A0HI'+udg_PlCurrPassesForRace[pn])
        call UnitRemoveAbility(u,'A0HI')
    endif
    
    if i==10 then
        if extra then
            call UnitAddAbility(caster,'A0GS')
            call SetPlayerTechMaxAllowed(pl,'R00A',4)
        else
            call UnitAddAbility(caster,'A01W')
            call SetPlayerTechMaxAllowed(pl,'R10H',4)
        endif
    	call SetPlayerAbilityAvailable(pl,'A06E',true)
    	call SetPlayerAbilityAvailable(pl,'A07G',true)
        if udg_WaveGoing then
            call ForGroup(udg_PlayerWarriorsGroup[pn], function Trig_PassChose_FG_10 )
            call ForGroup(udg_PlayerCreepsGroup[pn+3-6*(pn/4)], function Trig_PassChose_FG_10 )
        endif
    else
        if i==4 then
            if extra then
                call UnitAddAbility(caster,'A0GJ')
                call SetPlayerTechMaxAllowed(pl,'R000',4)
            else
                call UnitAddAbility(caster,'A05O')
                call SetPlayerTechMaxAllowed(pl,'R10P',4)
            endif
        else
            if i==2 then
                if extra then
                    call UnitAddAbility(caster,'A0HP')
                    call SetPlayerTechMaxAllowed(pl,'R00C',4)
                else
                    call UnitAddAbility(caster,'A069')
                    call SetPlayerTechMaxAllowed(pl,'R001',4)
                endif
                call SetPlayerAbilityAvailable(pl,'A0D0',true)
                if udg_WaveGoing then
                    call ForGroup(udg_PlayerWarriorsGroup[pn], function Trig_PassChose_FG_2 )
                    call ForGroup(udg_PlayerCreepsGroup[pn+3-6*(pn/4)], function Trig_PassChose_FG_2 )
                endif
            else
                if i==13 then
                    if extra then
                        call UnitAddAbility(caster,'A0GV')
                    else
                        call UnitAddAbility(caster,'A09K')
                    endif
                else
                    if i==14 then
                        call SetPlayerAbilityAvailable(pl,'A0B3',true)
                        call SetPlayerAbilityAvailable(pl,'A0B4',true)
                        if extra then
                            call UnitAddAbility(caster,'A0GW')
                            call SetPlayerTechMaxAllowed(pl,'R00B',4)
                        else
                            call UnitAddAbility(caster,'A025')
                            call SetPlayerTechMaxAllowed(pl,'R10S',4)
                        endif
                    else
                        if i==11 then
                            call SetPlayerAbilityAvailable(pl,'A0GC',true)
                            call SetPlayerAbilityAvailable(pl,'A0GD',true)
                            if extra then
                                call UnitAddAbility(caster,'A0GT')
                                call SetPlayerTechMaxAllowed(pl,'R008',4)
                            else
                                call UnitAddAbility(caster,'A043')
                                call SetPlayerTechMaxAllowed(pl,'R10X',4)
                            endif
                            if udg_WaveGoing then
                                call ForGroup(udg_PlayerWarriorsGroup[pn], function Trig_PassChose_FG_11 )
                                call ForGroup(udg_PlayerCreepsGroup[pn+3-6*(pn/4)], function Trig_PassChose_FG_11 )
                            endif
                        else
                            if i==8 then
                                if extra then
                                    call UnitAddAbility(caster,'A0GN')
                                    call SetPlayerTechMaxAllowed(pl,'R006',4)
                                else
                                    call UnitAddAbility(caster,'A066')
                                    call SetPlayerTechMaxAllowed(pl,'R10L',4)
                                endif
                                if udg_WaveGoing then
                                
                                    if udg_Wave==11 then
                                        if pn<4 then
                                            set l = Location(0,-7882)
                                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                            call UnitAddAbility(u,'A071')
                                            call UnitAddAbility(u,'A08V')
                                            call SetUnitAbilityLevel(u,'A071',2)
                                            call SetUnitAbilityLevel(u,'A08V',2)
                                            call RemoveLocation(l)
                                            set l = Location(0,-7882)
                                            set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                            call UnitAddAbility(u,'A076')
                                            call SetUnitAbilityLevel(u,'A076',2)
                                            call RemoveLocation(l)
                                        else
                                            set l = Location(0,-7882)
                                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                            call UnitAddAbility(u,'A071')
                                            call UnitAddAbility(u,'A08V')
                                            call SetUnitAbilityLevel(u,'A071',2)
                                            call SetUnitAbilityLevel(u,'A08V',2)
                                            call RemoveLocation(l)
                                            set l = Location(0,-7882)
                                            set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                            call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                            call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                            call UnitAddAbility(u,'A076')
                                            call SetUnitAbilityLevel(u,'A076',2)
                                            call RemoveLocation(l)
                                        endif
                                    else
                                        if udg_ModNumber==0 then
                                            if pn<4 then
                                                set l = Location(8192,13244-(7164*I2R(pn)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                call UnitAddAbility(u,'A071')
                                                call UnitAddAbility(u,'A08V')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                                set l = Location(-8192,13244-(7164*I2R(pn)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                call UnitAddAbility(u,'A071')
                                                call UnitAddAbility(u,'A08V')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)

                                                set l = Location(8192,13244-(7164*I2R(pn)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                call UnitAddAbility(u,'A076')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                                set l = Location(-8192,13244-(7164*I2R(pn)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                call UnitAddAbility(u,'A076')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                            else
                                                set l = Location(-8192,13244-(7164*I2R(pn-3)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                call UnitAddAbility(u,'A071')
                                                call UnitAddAbility(u,'A08V')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                                set l = Location(8192,13244-(7164*I2R(pn-3)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                call UnitAddAbility(u,'A071')
                                                call UnitAddAbility(u,'A08V')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)

                                                set l = Location(-8192,13244-(7164*I2R(pn-3)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                call UnitAddAbility(u,'A076')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                                set l = Location(8192,13244-(7164*I2R(pn-3)))
                                                set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                call UnitAddAbility(u,'A076')
                                                call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                call RemoveLocation(l)
                                            endif
                                        else
                                            if udg_ModNumber==1 then
                                                if pn<4 then
                                                    set l = Location(2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A071')
                                                    call UnitAddAbility(u,'A08V')
                                                    call SetUnitAbilityLevel(u,'A071',2)
                                                    call SetUnitAbilityLevel(u,'A08V',2)
                                                    call RemoveLocation(l)
                                                    set l = Location(-2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A071')
                                                    call UnitAddAbility(u,'A08V')
                                                    call SetUnitAbilityLevel(u,'A071',2)
                                                    call SetUnitAbilityLevel(u,'A08V',2)
                                                    call RemoveLocation(l)

                                                    set l = Location(2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A076')
                                                    call SetUnitAbilityLevel(u,'A076',2)
                                                    call RemoveLocation(l)
                                                    set l = Location(-2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A076')
                                                    call SetUnitAbilityLevel(u,'A076',2)
                                                    call RemoveLocation(l)
                                                else
                                                    set l = Location(-2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A071')
                                                    call UnitAddAbility(u,'A08V')
                                                    call SetUnitAbilityLevel(u,'A071',2)
                                                    call SetUnitAbilityLevel(u,'A08V',2)
                                                    call RemoveLocation(l)
                                                    set l = Location(2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A071')
                                                    call UnitAddAbility(u,'A08V')
                                                    call SetUnitAbilityLevel(u,'A071',2)
                                                    call SetUnitAbilityLevel(u,'A08V',2)
                                                    call RemoveLocation(l)

                                                    set l = Location(-2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A076')
                                                    call SetUnitAbilityLevel(u,'A076',2)
                                                    call RemoveLocation(l)
                                                    set l = Location(2496,1840)
                                                    set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                    call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                    call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                    call UnitAddAbility(u,'A076')
                                                    call SetUnitAbilityLevel(u,'A076',2)
                                                    call RemoveLocation(l)
                                                endif
                                            else
                                                if udg_ModNumber==2 then
                                                    if pn<4 then
                                                        set l = Location(0,-7882)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                        call UnitAddAbility(u,'A071')
                                                        call UnitAddAbility(u,'A08V')
                                                        call SetUnitAbilityLevel(u,'A071',2)
                                                        call SetUnitAbilityLevel(u,'A08V',2)
                                                        call RemoveLocation(l)

                                                        set l = Location(0,-7882)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                        call UnitAddAbility(u,'A076')
                                                        call SetUnitAbilityLevel(u,'A076',2)
                                                        call RemoveLocation(l)
                                                    else
                                                        set l = Location(0,-7882)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                        call UnitAddAbility(u,'A071')
                                                        call UnitAddAbility(u,'A08V')
                                                        call SetUnitAbilityLevel(u,'A071',2)
                                                        call SetUnitAbilityLevel(u,'A08V',2)
                                                        call RemoveLocation(l)

                                                        set l = Location(0,-7882)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 1400, true)
                                                        call UnitAddAbility(u,'A076')
                                                        call SetUnitAbilityLevel(u,'A076',2)
                                                        call RemoveLocation(l)
                                                    endif
                                                else //udg_ModNumber==3
                                                    if pn<4 then
                                                        set l = Location(18176-(9088*I2R(pn)),-16704)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+4),'e00G',l,0)
                                                        call UnitAddAbility(u,'A071')
                                                        call UnitAddAbility(u,'A08V')
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                        call RemoveLocation(l)

                                                        set l = Location(18176-(9088*I2R(pn)),-16704)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn+5),'e00G',l,0)
                                                        call UnitAddAbility(u,'A076')
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                        call RemoveLocation(l)
                                                    else
                                                        set l = Location(18176-(9088*I2R(pn-3)),-16704)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-1),'e00G',l,0)
                                                        call UnitAddAbility(u,'A071')
                                                        call UnitAddAbility(u,'A08V')
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                        call RemoveLocation(l)
                                                        
                                                        set l = Location(18176-(9088*I2R(pn-3)),-16704)
                                                        set u = CreateUnitAtLoc(PlayerSlot(2*pn-2),'e00G',l,0)
                                                        call UnitAddAbility(u,'A076')
                                                        call GroupAddUnit(udg_CorruptedEarthDummy,u)
                                                        call SetBlightLoc(GetOwningPlayer(u), l, 900, true)
                                                        call RemoveLocation(l)
                                                    endif
                                                    
                                                endif
                                            endif
                                        endif
                                    endif
                                    set u = GetTriggerUnit()
                                    set l = null
                                endif
                            else
        			        	if i==5 then
                                    if extra then
                                        call UnitAddAbility(caster,'A0GK')
                                        call SetPlayerTechMaxAllowed(pl,'R004',4)
                                    else
                                        call UnitAddAbility(caster,'A05Y')
                                        call SetPlayerTechMaxAllowed(pl,'R10Y',4)
                                    endif
                                    set extraActions = 5
                                    
					            else
                                    if i==16 then
                                        if extra then
                                            call UnitAddAbility(caster,'A0HQ')
                                            call SetPlayerTechMaxAllowed(pl,'R00D',4)
                                        else
                                            call UnitAddAbility(caster,'A0CZ')
                                            call SetPlayerTechMaxAllowed(pl,'R105',4)
                                        endif
                                        if udg_WaveGoing then
				                            call ForGroup(udg_PlayerWarriorsGroup[pn], function Trig_PassChose_FG_16 )
				                            call ForGroup(udg_PlayerCreepsGroup[pn+3-6*(pn/4)], function Trig_PassChose_FG_16 )
                                        endif
                                    else
                                        if i==17 then
                                            set udg_DemonPass17CreateUnit[pn]=91
                                            if extra then
                                                call UnitAddAbility(caster,'A0HQ')
                                                call SetPlayerTechMaxAllowed(pl,'R00D',4)
                                            else
                                                call UnitAddAbility(caster,'A0CZ')
                                                call SetPlayerTechMaxAllowed(pl,'R105',4)
                                            endif
                                            call UnitAddAbility(caster,'A0CT')
                                            if udg_WaveGoing then
                                                call SetPlayerAbilityAvailable(PlayerSlot(pn-1),'A0CT',false)
                                            //else
                                            //    call SetPlayerAbilityAvailable(PlayerSlot(pn-1),'A0CZ',false)
                                            endif
                                        else
                                            if i==15 then
                                                if extra then
                                                    call UnitAddAbility(caster,'A0GX')
                                                else
                                                    call UnitAddAbility(caster,'A0FC')
                                                endif
                                                call SetPlayerTechMaxAllowed(pl,udg_CreepTower[111],1)
                                            else
                                                if i==12 then
    				                                if pn<4 then
					                                    call SetPlayerTechResearched(PlayerSlot(pn*2+4),'R322',1)
    				                                else
					                                    call SetPlayerTechResearched(PlayerSlot(pn*2-1),'R322',1)
    				                                endif
                                                    if extra then
                                                        call UnitAddAbility(caster,'A0GU')
                                                        call SetPlayerTechMaxAllowed(pl,'R009',4)
                                                    else
                                                        call UnitAddAbility(caster,'A0DO')
                                                        call SetPlayerTechMaxAllowed(pl,'R103',4)
                                                    endif
                                                    call SetPlayerTechMaxAllowed(pl,udg_CreepTower[114],999)
                                                else
                                                    if i==9 then
                                                        set udg_ThrouneWorker[pn]=u
                                                        if extra then
                                                            call SetPlayerTechMaxAllowed(pl,'R007',4)
                                                            call UnitAddAbility(caster,'A0GO')
                                                        else
                                                            call SetPlayerTechMaxAllowed(pl,'R102',4)
                                                            call UnitAddAbility(caster,'A0DQ')
                                                        endif
                                                        call SetPlayerAbilityAvailable(pl,'A0DR',true)
                                                        call SetPlayerAbilityAvailable(pl,'A0DP',true)
                                                        call SetPlayerTechResearched(pl,'Rhpm',1)
                                                        if pn<4 then
                                                            call SetPlayerTechResearched(PlayerSlot(pn*2+4),'Rhpm',1)
                                                        else
                                                            call SetPlayerTechResearched(PlayerSlot(pn*2-1),'Rhpm',1)
                                                        endif
                                                        //if udg_WaveGoingForPlayer[pn] then
                                                            //loop
                                                                //exitwhen not(udg_WaveGoingForPlayer[pn])
                                                                //call TriggerSleepAction(2)
                                                            //endloop
                                                            //set i = udg_Wave/2
                                                        //else
                                                            set i = (udg_Wave+1)/2
                                                        //endif
                                                        loop
                                                            exitwhen i<1
                                                            call UnitAddItem(udg_ThrouneWorker[pn],CreateItem(udg_UndeadItemsPassAll[20+GetRandomInt(1,udg_UndeadItemsPassLvlItNums[3])],GetUnitX(udg_ThrouneWorker[pn]),GetUnitY(udg_ThrouneWorker[pn])))
                                                            set i=i-1
                                                        endloop
                                                        if udg_WaveGoingForPlayer[pn] then
                                                            call ForGroup(udg_ThrouneWorkersGroup[pn],function SetItemDropNoWorkers)
                                                        endif
                                                    else
                                                        if i==7 then
                                                            if extra then
                                                                call UnitAddAbility(caster,'A0GM')
                                                                call SetPlayerTechMaxAllowed(pl,'R005',4)
                                                            else
                                                                call UnitAddAbility(caster,'A0GH')
                                                                call SetPlayerTechMaxAllowed(pl,'R110',4)
                                                            endif
                                                        else
                                                            if i==3 then
                                                                if extra then
                                                                    call UnitAddAbility(caster,'A0HP')
                                                                    call SetPlayerTechMaxAllowed(pl,'R00C',4)
                                                                else
                                                                    call UnitAddAbility(caster,'A069')
                                                                    call SetPlayerTechMaxAllowed(pl,'R001',4)
                                                                endif
                                                                call SetPlayerTechMaxAllowed(pl,udg_CreepTower[112],999)
                                                                call SetPlayerTechMaxAllowed(pl,udg_CreepTower[113],999)
                                                            else
                                                                if i==6 then
                                                                    call SetPlayerTechMaxAllowed(pl,udg_CreepTower[115],999)
                                                                    call SetPlayerTechMaxAllowed(pl,udg_CreepTower[116],999)
                                                                    if extra then
                                                                        call UnitAddAbility(caster,'A0GL')
                                                                        call SetPlayerTechMaxAllowed(pl,'R003',4)
                                                                    else
                                                                        call UnitAddAbility(caster,'A0FY')
                                                                        call SetPlayerTechMaxAllowed(pl,'R101',4)
                                                                    endif
                                                                    call SetPlayerState(pl,PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(pl,PLAYER_STATE_RESOURCE_GOLD)+20)
                                                                    set i = 1
                                                                    loop
                                                                        exitwhen i>=udg_Wave
                                                                        call SetPlayerState(pl,PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(pl,PLAYER_STATE_RESOURCE_GOLD)+15+i*5)
                                                                        set i=i+1
                                                                    endloop
                                                                else
                                                                    if i==18 then
                                                                        if extra then
                                                                            call UnitAddAbility(caster,'A0HQ')
                                                                            call SetPlayerTechMaxAllowed(pl,'R00D',4)
                                                                        else
                                                                            call UnitAddAbility(caster,'A0CZ')
                                                                            call SetPlayerTechMaxAllowed(pl,'R105',4)
                                                                        endif
                                                                        call SetPlayerState(pl,PLAYER_STATE_RESOURCE_LUMBER,0)
                                                                        call SetPlayerTechMaxAllowed(pl,udg_CreepTower[117],999)
                                                                        call UnitAddAbility(caster,'A0G1')
                                                                        call UnitAddAbility(caster,'A0G4')
                                                                        call UnitAddAbility(caster,'A0G5')
                                                                        call UnitAddAbility(caster,'A0G3')
                                                                        call ShowUnit(udg_ThrouneUpgr[pn],false)
                                                                    else
                                                                        if i==1 then
                                                                            if extra then
                                                                                call UnitAddAbility(caster,'A0HP')
                                                                                call SetPlayerTechMaxAllowed(pl,'R00C',4)
                                                                            else
                                                                                call UnitAddAbility(caster,'A069')
                                                                                call SetPlayerTechMaxAllowed(pl,'R001',4)
                                                                            endif
                                                                        endif
                                                                    endif
                                                                endif
                                                            endif
                                                        endif
                                                    endif
                                                endif
                                            endif
                                        endif
                                    endif
                                endif
			                endif
			            endif
		            endif
		        endif
	        endif
	    endif
    endif
    set a = GetPlayerSlotId(GetOwningPlayer(GetSpellAbilityUnit()))+1
    if IsPassChosenByPlayer(a,18) then
        if GetPlayerTechCount(PlayerSlot(a*2+4-a/4*5),'R00M',true)<3 then
            call SetPlayerTechResearched(PlayerSlot(a*2+4-a/4*5),'R00M',IMinBJ(udg_Wave/2,3))
        endif
        if IsPassChosenByPlayer(a,5) and GetPlayerTechCount(PlayerSlot(a*2+4-a/4*5),'R10Y',true)<5 then
            call SetPlayerTechResearched(PlayerSlot(a*2+4-a/4*5),'R10Y',IMinBJ(udg_Wave,5))
        endif
        set i = 1
        loop
            exitwhen i>udg_AllSpellsCount
            if GetUnitAbilityLevel(udg_ThrouneCaster[a],udg_AllSpellsSpell[i])>0 then
                set u = udg_ThrouneCaster[a]
            elseif GetUnitAbilityLevel(udg_ThrouneExtra[a],udg_AllSpellsSpell[i])>0 then
                set u = udg_ThrouneExtra[a]
            else
                set u = null
            endif
            if u!=null then
                if udg_Wave<=5 then
                    if udg_AllSpellsLevel[i]==5 then
                        call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],udg_Wave+1)
                    elseif udg_AllSpellsLevel[i]==3 then
                        call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],udg_Wave/2+1)
                    endif
                else
                    if udg_Wave<8 then
                        if udg_AllSpellsLevel[i]==5 then
                            call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],6)
                        elseif udg_AllSpellsLevel[i]==3 then
                            call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],3)
                        endif
                    else
                        if udg_AllSpellsLevel[i]==5 then
                            call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],7)
                        elseif udg_AllSpellsLevel[i]==3 then
                            call SetUnitAbilityLevel(u,udg_AllSpellsSpell[i],4)
                        endif
                    endif
                endif
            endif
            set i=i+1
        endloop
        if IsPassChosenByPlayer(a,9) then
            set i=1
            loop
                if udg_Wave>=2 then
                    if udg_Wave>=4 then
                        if udg_Wave>=8 then
                            exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0AI')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GR')+i/11>0
                        else
                            exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0G8')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GQ')+i/11>0
                        endif
                    else
                        exitwhen GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0G7')+GetUnitAbilityLevel(udg_ThrouneCaster[a],'A0GP')+i/11>0
                    endif
                else
                    exitwhen true
                endif
                call SpellbookUpgrdInMain(a)
                set i=i+1
            endloop
        endif
    endif
    
    if extraActions==5 then
                                    
        if not(udg_WaveGoingForPlayer[pn]) and udg_WaveGoing then
                                    
            if udg_Wave<9 then
                if udg_Wave<5 then
                    set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
                else
                    set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
                    set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
                endif
            else
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
            endif
        
        else
                                    
            if udg_Wave<10 then
                if udg_Wave<6 then
                    if udg_Wave<2 then
                        //ПУСТАЯ СТРОКА
                    else
                        loop
                            exitwhen not(udg_WaveGoingForPlayer[pn])
                            call TriggerSleepAction(2)
                        endloop
                        set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                        call Trig_StartConstr_ActionsDo(u)
                        call Trig_EndConstr_ActionsDo(u)
                    endif
                else
                    loop
                        exitwhen not(udg_WaveGoingForPlayer[pn])
                        call TriggerSleepAction(2)
                    endloop
                    set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
                    set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                    call Trig_StartConstr_ActionsDo(u)
                    call Trig_EndConstr_ActionsDo(u)
                endif
            else
                loop
                    exitwhen not(udg_WaveGoingForPlayer[pn])
                    call TriggerSleepAction(2)
                endloop
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
                set u = CreateUnit(PlayerSlot(pn-1),'h00C',GetUnitX(udg_Throune[pn]),GetUnitY(udg_Throune[pn]), 270)
                call Trig_StartConstr_ActionsDo(u)
                call Trig_EndConstr_ActionsDo(u)
            endif
                                    
        endif
    endif                                
    
    set pl = null
    set u = null
endfunction

//===========================================================================
function InitTrig_PassChose takes nothing returns nothing
    set gg_trg_PassChose = CreateTrigger(  )
    //call TriggerRegisterAnyUnitEventBJ( gg_trg_PassChose, EVENT_PLAYER_HERO_SKILL )
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(1), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(2), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(3), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(4), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChose, Player(5), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerAddCondition( gg_trg_PassChose, Condition( function Trig_PassChose_Conditions ) )
    call TriggerAddAction( gg_trg_PassChose, function Trig_PassChose_Actions )
endfunction

//===========================================================================
// Trigger: PassChoseRe
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_PassChoseRe_Conditions takes nothing returns boolean
    return GetSpellAbilityId()=='A0GZ'
endfunction

function Trig_PassChoseRe_Actions takes nothing returns nothing
    local unit u = GetSpellAbilityUnit()
    local player pl = GetOwningPlayer(u)
    local integer pn = GetPlayerSlotId(pl)+1
    local integer i = 1
    
    call UnitRemoveAbility(u,'A0HI'+udg_PlCurrPassesForRace[pn])
    set udg_PlCurrPassesForRace[pn]=udg_PlCurrPassesForRace[pn]+1-udg_PlCurrPassesForRace[pn]/6*6
    call UnitAddAbility(u,'A0HI'+udg_PlCurrPassesForRace[pn])
    call UnitRemoveAbility(u,'A0HI')
    call UnitAddAbility(u,'A0HI')
    
    /*call SetUnitAbilityLevel(u,'A0GZ',0)
    call UnitModifySkillPoints(u,1)
    loop
        exitwhen i>18
        if GetUnitAbilityLevel(u,'A0C0'+i-1+i/11*7)==0 then// 'A0CA' - 'A0C9' = 8 btw :)
            call SetPlayerAbilityAvailable(pl,'A0C0'+i-1+i/11*7,false)
        endif
        set i=i+1
    endloop
    set i = udg_PlCurrPassesForRace[pn]*3-2
    loop
        exitwhen i>udg_PlCurrPassesForRace[pn]*3
        if GetUnitAbilityLevel(u,'A0C0'+i-1+i/11*7)==0 then// 'A0CA' - 'A0C9' = 8 btw :)
            call SetPlayerAbilityAvailable(pl,'A0C0'+i-1+i/11*7,true)
        endif
        set i=i+1
    endloop*/
    
    set u = null
endfunction

//===========================================================================
function InitTrig_PassChoseRe takes nothing returns nothing
    set gg_trg_PassChoseRe = CreateTrigger(  )
    //call TriggerRegisterAnyUnitEventBJ( gg_trg_PassChoseRe, EVENT_PLAYER_HERO_SKILL )
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(0), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(1), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(2), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(3), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(4), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerRegisterPlayerUnitEvent(gg_trg_PassChoseRe, Player(5), EVENT_PLAYER_UNIT_SPELL_EFFECT, null)
    call TriggerAddCondition( gg_trg_PassChoseRe, Condition( function Trig_PassChoseRe_Conditions ) )
    call TriggerAddAction( gg_trg_PassChoseRe, function Trig_PassChoseRe_Actions )
endfunction

//===========================================================================
// Trigger: TipsAndTricks
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_TipsAndTricks_Actions takes nothing returns nothing
    local integer i=1
    local integer n=GetRandomInt(1,udg_TipsAndTricksNum)
    loop
        exitwhen i>6
        if udg_TipsAndTricksPlBool[i] and GetPlayerSlotState(PlayerSlot(i-1)) == PLAYER_SLOT_STATE_PLAYING then
            call DisplayTimedTextToPlayer(PlayerSlot(i-1),0,0,7,"|cffffcc00"+udg_TipsAndTricks[n]+"|r")
        endif
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_TipsAndTricks takes nothing returns nothing
    set gg_trg_TipsAndTricks = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_TipsAndTricks,120,true)
    call TriggerAddAction( gg_trg_TipsAndTricks, function Trig_TipsAndTricks_Actions )
endfunction

//===========================================================================
// Trigger: TipsOff
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_TipsOff_Actions takes nothing returns nothing
    call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Подсказки выключены|r")
    set udg_TipsAndTricksPlBool[GetPlayerSlotId(GetTriggerPlayer())+1]=false
endfunction

//===========================================================================
function InitTrig_TipsOff takes nothing returns nothing
    set gg_trg_TipsOff = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(0), "-tipsoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(1), "-tipsoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(2), "-tipsoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(3), "-tipsoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(4), "-tipsoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOff, Player(5), "-tipsoff", true )
    call TriggerAddAction( gg_trg_TipsOff, function Trig_TipsOff_Actions )
endfunction

//===========================================================================
// Trigger: TipsOn
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_TipsOn_Actions takes nothing returns nothing
    call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Подсказки включены|r")
    set udg_TipsAndTricksPlBool[GetPlayerSlotId(GetTriggerPlayer())+1]=true
endfunction

//===========================================================================
function InitTrig_TipsOn takes nothing returns nothing
    set gg_trg_TipsOn = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(0), "-tipson", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(1), "-tipson", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(2), "-tipson", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(3), "-tipson", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(4), "-tipson", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TipsOn, Player(5), "-tipson", true )
    call TriggerAddAction( gg_trg_TipsOn, function Trig_TipsOn_Actions )
endfunction

//===========================================================================
// Trigger: TimeOff
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_TimeOff_Actions takes nothing returns nothing
    local integer i = 0
    local boolean b = false
    if not(udg_TimerOffed) then
        loop
            exitwhen i>5
            if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING then
                if GetTriggerPlayer()==PlayerSlot(i) then
                    call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил таймер|r")
                    set udg_TimerOffed=true
                    if not(udg_WaveGoing) then
                        call PauseTimer(udg_TimerWave)
                    endif
                    set b = true
                endif
                set i=5
            endif
            set i=i+1
        endloop
        if not(b) then
            call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
        endif
    else
        call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Таймер уже отключен|r")
    endif
endfunction

//===========================================================================
function InitTrig_TimeOff takes nothing returns nothing
    set gg_trg_TimeOff = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(0), "-timeoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(1), "-timeoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(2), "-timeoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(3), "-timeoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(4), "-timeoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOff, Player(5), "-timeoff", true )
    call TriggerAddAction( gg_trg_TimeOff, function Trig_TimeOff_Actions )
endfunction

//===========================================================================
// Trigger: TimeOn
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_TimeOn_Actions takes nothing returns nothing
    local integer i = 0
    local boolean b = false
    if udg_TimerOffed then
        loop
            exitwhen i>5
            if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING then
                if GetTriggerPlayer()==PlayerSlot(i) then
                    call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил таймер|r")
                    set udg_TimerOffed=false
                    if not(udg_WaveGoing) then
                        call ResumeTimer(udg_TimerWave)
                    endif
                    set b = true
                endif
                set i=5
            endif
            set i=i+1
        endloop
        if not(b) then
            call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
        endif
    else
        call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Таймер уже включен|r")
    endif
endfunction

//===========================================================================
function InitTrig_TimeOn takes nothing returns nothing
    set gg_trg_TimeOn = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(0), "-timeon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(1), "-timeon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(2), "-timeon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(3), "-timeon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(4), "-timeon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TimeOn, Player(5), "-timeon", true )
    call TriggerAddAction( gg_trg_TimeOn, function Trig_TimeOn_Actions )
endfunction

//===========================================================================
// Trigger: DmgOff
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_DmgOff_Actions takes nothing returns nothing
    local integer i = 0
    local boolean b = false
    if not(udg_DmgOffed) then
        loop
            exitwhen i>5
            if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING then
                if GetTriggerPlayer()==PlayerSlot(i) then
                    call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" отключил урон при затянувшемся раунде|r")
                    set udg_DmgOffed=true
                    set b = true
                endif
                set i=5
            endif
            set i=i+1
        endloop
        if not(b) then
            call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
        endif
    else
        call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Урон при затянувшемся раунде уже отключен|r")
    endif
endfunction

//===========================================================================
function InitTrig_DmgOff takes nothing returns nothing
    set gg_trg_DmgOff = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(0), "-dmgoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(1), "-dmgoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(2), "-dmgoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(3), "-dmgoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(4), "-dmgoff", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOff, Player(5), "-dmgoff", true )
    call TriggerAddAction( gg_trg_DmgOff, function Trig_DmgOff_Actions )
endfunction

//===========================================================================
// Trigger: DmgOn
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_DmgOn_Actions takes nothing returns nothing
    local integer i = 0
    local boolean b = false
    if udg_DmgOffed then
        loop
            exitwhen i>5
            if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING then
                if GetTriggerPlayer()==PlayerSlot(i) then
                    call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,5,"|cffffcc00Игрок "+GetPlayerName(PlayerSlot(i))+" включил урон при затянувшемся раунде|r")
                    set udg_DmgOffed=false
                    set b = true
                endif
                set i=5
            endif
            set i=i+1
        endloop
        if not(b) then
            call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
        endif
    else
        call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Урон при затянувшемся раунде уже включен|r")
    endif
endfunction

//===========================================================================
function InitTrig_DmgOn takes nothing returns nothing
    set gg_trg_DmgOn = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(0), "-dmgon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(1), "-dmgon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(2), "-dmgon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(3), "-dmgon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(4), "-dmgon", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_DmgOn, Player(5), "-dmgon", true )
    call TriggerAddAction( gg_trg_DmgOn, function Trig_DmgOn_Actions )
endfunction

//===========================================================================
// Trigger: Clear
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_Clear_Actions takes nothing returns nothing
    if GetLocalPlayer()==GetTriggerPlayer() then
        call ClearTextMessages()
    endif
endfunction

//===========================================================================
function InitTrig_Clear takes nothing returns nothing
    set gg_trg_Clear = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(0), "-clear", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(1), "-clear", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(2), "-clear", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(3), "-clear", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(4), "-clear", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Clear, Player(5), "-clear", true )
    call TriggerAddAction( gg_trg_Clear, function Trig_Clear_Actions )
endfunction

//===========================================================================
// Trigger: Tip
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_Tip_Actions takes nothing returns nothing
    local integer i = GetRandomInt(1,udg_TipsAndTricksNum)
    call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,7,"|cffffcc00"+udg_TipsAndTricks[i]+"|r")
endfunction

//===========================================================================
function InitTrig_Tip takes nothing returns nothing
    set gg_trg_Tip = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(0), "-tip", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(1), "-tip", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(2), "-tip", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(3), "-tip", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(4), "-tip", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Tip, Player(5), "-tip", true )
    call TriggerAddAction( gg_trg_Tip, function Trig_Tip_Actions )
endfunction

//===========================================================================
// Trigger: Check
//===========================================================================
//TESH.scrollpos=1
//TESH.alwaysfold=0
function Trig_Check_FG takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitState(u,UNIT_STATE_LIFE)==0 then
        call GroupRemoveUnit(udg_PlayerWarriorsGroup[udg_IntegerX],u)
        call GroupRemoveUnit(udg_PlayerCreepsGroup[udg_IntegerX],u)
    endif
    set u = null
endfunction

function Trig_Check_Actions takes nothing returns nothing
    local integer i = 0
    local unit u
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING and GetTriggerPlayer()==PlayerSlot(i) then
            set i = 1
            loop
                exitwhen i>6 or not(udg_WaveGoing)
                if udg_WaveGoingForPlayer[i] then
                    set u = CreateUnit(Player(i*2+4-5*(i/4)),'hrif',0,0,0)
                    call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                    
                    set udg_IntegerX = i
                    call ForGroup(udg_PlayerWarriorsGroup[i],function Trig_Check_FG)
                    
                    call KillUnit(u)
                    call RemoveUnit(u)
                    if udg_ModNumber<2 and udg_WaveGoingForPlayer[i] then
                        set u = CreateUnit(Player(i*2+5-7*(i/4)),'hrif',0,0,0)
                        call GroupAddUnit(udg_PlayerWarriorsGroup[i],u)
                        call KillUnit(u)
                        call RemoveUnit(u)
                    endif
                endif
                set i=i+1
            endloop
            set u = null
            return
        endif
        set i=i+1
    endloop
    call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
    set u = null
endfunction


//===========================================================================
function InitTrig_Check takes nothing returns nothing
    set gg_trg_Check = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(0), "-check", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(1), "-check", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(2), "-check", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(3), "-check", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(4), "-check", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Check, Player(5), "-check", true )
    call TriggerAddAction( gg_trg_Check, function Trig_Check_Actions )
endfunction

//===========================================================================
// Trigger: TestVersion
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_TestVersion_Actions takes nothing returns nothing
    local integer i = 0
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i))==PLAYER_SLOT_STATE_PLAYING and GetTriggerPlayer()==PlayerSlot(i) then
            return
        endif
        set i=i+1
    endloop
    call DisplayTimedTextToPlayer(GetTriggerPlayer(),0,0,5,"|cffffcc00Эту команду должен вводить 1-ый игрок|r")
endfunction

//===========================================================================
function InitTrig_TestVersion takes nothing returns nothing
    set gg_trg_TestVersion = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(0), "-test", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(1), "-test", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(2), "-test", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(3), "-test", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(4), "-test", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_TestVersion, Player(5), "-test", true )
    call TriggerAddAction( gg_trg_TestVersion, function Trig_TestVersion_Actions )
endfunction

//===========================================================================
// Trigger: Sur
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0

function Trig_Sur_CheckMargol takes nothing returns nothing
    if GetUnitAbilityLevel(GetEnumUnit(),'A088')==1 then
	set udg_BooleanX = true
    endif
endfunction

function Trig_Sur_FG_NO takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'A023')==1 and GetUnitState(u,UNIT_STATE_LIFE)>0 then
	call SetUnitAbilityLevel(u,'A023',2)
    endif
    call KillUnit(u)
    set u = null
endfunction

function Trig_Sur_FG_YES takes nothing returns nothing
    local unit u = GetEnumUnit()
    if GetUnitAbilityLevel(u,'A023')==1 then
	call UnitAddAbility(u,'A023')
	call UnitRemoveAbility(u,'A023')
        call SetPlayerState(PlayerSlot(udg_IntegerX),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(udg_IntegerX),PLAYER_STATE_RESOURCE_GOLD)+5)
    	call KillUnit(u)
    else
        if GetUnitTypeId(u)!='n00T' then
            call SetPlayerState(PlayerSlot(udg_IntegerX),PLAYER_STATE_RESOURCE_GOLD,GetPlayerState(PlayerSlot(udg_IntegerX),PLAYER_STATE_RESOURCE_GOLD)+5)
	endif
    	call KillUnit(u)
    endif
    set u = null
endfunction

function Trig_Sur_Actions takes nothing returns nothing
    local group g = udg_PlayerWarriorsGroup[GetPlayerSlotId(GetTriggerPlayer())+1]
    local boolean b = false
    if udg_ModNumber>=2 then
        set udg_BooleanX = false
        call ForGroup(udg_PlayerWarriorsGroup[4-6*(GetPlayerSlotId(GetTriggerPlayer())/3)+GetPlayerSlotId(GetTriggerPlayer())],function Trig_Sur_CheckMargol)
        set b = udg_BooleanX
        if b then
        	loop
	        exitwhen FirstOfGroup(g)==null
	        set udg_IntegerX = GetPlayerSlotId(GetTriggerPlayer())
	        set udg_IntegerX = 3-6*(udg_IntegerX/3)+udg_IntegerX
        	    call ForGroup(g,function Trig_Sur_FG_YES)
        	    call TriggerSleepAction(0)
        	endloop
        else
            loop
    	        exitwhen FirstOfGroup(g)==null
       	        call ForGroup(g,function Trig_Sur_FG_NO)
    	        call TriggerSleepAction(0)
    	    endloop
        endif
    else
        loop
    	    exitwhen FirstOfGroup(g)==null
       	    call ForGroup(g,function Trig_Sur_FG_NO)
    	    call TriggerSleepAction(0)
    	endloop
    endif
    set g = null
endfunction

//===========================================================================
function InitTrig_Sur takes nothing returns nothing
    set gg_trg_Sur = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(0), "-sur", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(1), "-sur", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(2), "-sur", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(3), "-sur", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(4), "-sur", true )
    call TriggerRegisterPlayerChatEvent( gg_trg_Sur, Player(5), "-sur", true )
    call TriggerAddAction( gg_trg_Sur, function Trig_Sur_Actions )
endfunction
//===========================================================================
// Trigger: Supply
//===========================================================================
function Trig_Supply_Actions takes nothing returns nothing
    local integer i = 0
    if udg_ModNumber==0 or udg_ModNumber==3 then
        loop
            exitwhen i>5
	    if GetPlayerSlotState(PlayerSlot(i)) != PLAYER_SLOT_STATE_PLAYING and udg_Lives[i+1]>0 then

		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))

	    endif
            set i=i+1
        endloop
    else
        if udg_ModNumber==1 then

        loop
            exitwhen i>5
	    if GetPlayerSlotState(PlayerSlot(i)) != PLAYER_SLOT_STATE_PLAYING and udg_BooleanPlayForTA[i+1] then

		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))

	    endif
            set i=i+1
        endloop

        else

        loop
            exitwhen i>5
	    if GetPlayerSlotState(PlayerSlot(i)) != PLAYER_SLOT_STATE_PLAYING and udg_BooleanPlay[i+1] then

		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+1),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_USED,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_GOLD))
		call SetPlayerState(PlayerSlot(i/3*3+2),PLAYER_STATE_RESOURCE_FOOD_CAP,GetPlayerState(PlayerSlot(i),PLAYER_STATE_RESOURCE_LUMBER))

	    endif
            set i=i+1
        endloop

        endif
    endif
endfunction

//===========================================================================
function InitTrig_Supply takes nothing returns nothing
    set gg_trg_Supply = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_Supply, 1, true)
    call TriggerAddAction( gg_trg_Supply, function Trig_Supply_Actions )
endfunction

//===========================================================================
// Trigger: Init
//
// Инициализация стандартного режима сражения для всех игроков
//===========================================================================
//TESH.scrollpos=432
//TESH.alwaysfold=0
function Trig_Init_Actions takes nothing returns nothing
    local integer a = 0
    local integer p = 0
    local integer array i1
    local integer array i2
    local integer array n
    local unit u
    local boolean b

    call SetFloatGameState(GAME_STATE_TIME_OF_DAY, bj_MELEE_STARTING_TOD)
    call SetPlayerState(Player(0),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(1),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(2),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(3),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(4),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(5),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(6),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(7),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(8),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(9),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(10),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(11),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(12),PLAYER_STATE_GIVES_BOUNTY,0)
    call SetPlayerState(Player(13),PLAYER_STATE_GIVES_BOUNTY,0)
    
    call SetPlayerAllianceStateBJ(Player(6),Player(8),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(6),Player(10),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(8),Player(6),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(8),Player(10),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(10),Player(6),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(10),Player(8),bj_ALLIANCE_ALLIED_VISION)
    
    call SetPlayerAllianceStateBJ(Player(7),Player(9),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(7),Player(11),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(9),Player(7),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(9),Player(11),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(11),Player(7),bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(Player(11),Player(9),bj_ALLIANCE_ALLIED_VISION)
    
    
    call SetPlayerHandicapXP(Player(0),0)
    call SetPlayerHandicapXP(Player(1),0)
    call SetPlayerHandicapXP(Player(2),0)
    call SetPlayerHandicapXP(Player(3),0)
    call SetPlayerHandicapXP(Player(4),0)
    call SetPlayerHandicapXP(Player(5),0)
    
    call DisableTrigger(gg_trg_Supply)
    set udg_PlayerSlotMass[7] = Player(6)
    set udg_PlayerSlotMass[8] = Player(7)
    set udg_PlayerSlotMass[9] = Player(8)
    set udg_PlayerSlotMass[10] = Player(9)
    set udg_PlayerSlotMass[11] = Player(10)
    set udg_PlayerSlotMass[12] = Player(11)
    set udg_PlayerSlotMass[13] = Player(12)
    set udg_PlayerSlotMass[14] = Player(13)
    set udg_PlayerSlotId[7] = 6
    set udg_PlayerSlotId[8] = 7
    set udg_PlayerSlotId[9] = 8
    set udg_PlayerSlotId[10] = 9
    set udg_PlayerSlotId[11] = 10
    set udg_PlayerSlotId[12] = 11
    set udg_PlayerSlotId[13] = 12
    set udg_PlayerSlotId[14] = 13
    set n[1]=0
    set n[2]=0
    set n[3]=0
    set n[4]=0
    loop
        exitwhen a>2
	if GetPlayerSlotState(Player(a)) == PLAYER_SLOT_STATE_PLAYING then
	    set p = p+1
	    set n[1] = n[1]+1
	    set i1[n[1]] = a
	else
	    set i1[3-n[3]] = a
	    set n[3] = n[3]+1
	endif
	if GetPlayerSlotState(Player(a+3)) == PLAYER_SLOT_STATE_PLAYING then
	    set p = p-1
	    set n[2] = n[2]+1
	    set i2[n[2]] = a+3
	else
	    set i2[3-n[4]] = a+3
	    set n[4] = n[4]+1
	endif
	set a=a+1
    endloop
    if n[1]<2 then
	set a=i1[n[1]+1]
	set i1[n[1]+1] = i1[3]
	set i1[3] = a
    endif
    if n[2]<2 then
	set a=i2[n[2]+1]
	set i2[n[2]+1] = i2[3]
	set i2[3] = a
    endif
    if p<-1 then
	set a = i1[n[1]+1]
        set i1[n[1]+1] = i2[n[2]]
        set i2[n[2]] = a
    else
        if p>1 then
	    set a = i2[n[2]+1]
            set i2[n[2]+1] = i1[n[1]]
            set i1[n[1]] = a
	endif
    endif
//call TriggerSleepAction(0)
//call DisplayTextToPlayer(Player(0),0,0,I2S(i1[1]))
//call DisplayTextToPlayer(Player(0),0,0,I2S(i1[2]))
//call DisplayTextToPlayer(Player(0),0,0,I2S(i1[3]))
//call DisplayTextToPlayer(Player(0),0,0,I2S(i2[1]))
//call DisplayTextToPlayer(Player(0),0,0,I2S(i2[2]))
//call DisplayTextToPlayer(Player(0),0,0,I2S(i2[3]))
    set p=1
    loop
	exitwhen p>3
    	set udg_PlayerSlotMass[p] = Player(i1[p])
    	set udg_PlayerSlotId[GetPlayerId(Player(i1[p]))+1] = p-1
	
    	call SetPlayerAllianceStateBJ(Player(6),udg_PlayerSlotMass[p],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(Player(8),udg_PlayerSlotMass[p],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(Player(10),udg_PlayerSlotMass[p],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p],Player(6),bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p],Player(8),bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p],Player(10),bj_ALLIANCE_ALLIED_VISION)

    	set udg_PlayerSlotMass[p+3] = Player(i2[p])
    	set udg_PlayerSlotId[GetPlayerId(Player(i2[p]))+1] = p+2

    	call SetPlayerAllianceStateBJ(Player(7),udg_PlayerSlotMass[p+3],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(Player(9),udg_PlayerSlotMass[p+3],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(Player(11),udg_PlayerSlotMass[p+3],bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p+3],Player(7),bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p+3],Player(9),bj_ALLIANCE_ALLIED_VISION)
    	call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[p+3],Player(11),bj_ALLIANCE_ALLIED_VISION)
	set p=p+1
    endloop

    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[1],udg_PlayerSlotMass[2],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[1],udg_PlayerSlotMass[3],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[2],udg_PlayerSlotMass[1],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[2],udg_PlayerSlotMass[3],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[3],udg_PlayerSlotMass[1],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[3],udg_PlayerSlotMass[2],bj_ALLIANCE_ALLIED_VISION)

    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[4],udg_PlayerSlotMass[5],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[4],udg_PlayerSlotMass[6],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[5],udg_PlayerSlotMass[4],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[5],udg_PlayerSlotMass[6],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[6],udg_PlayerSlotMass[4],bj_ALLIANCE_ALLIED_VISION)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[6],udg_PlayerSlotMass[5],bj_ALLIANCE_ALLIED_VISION)

    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[4],udg_PlayerSlotMass[1],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[4],udg_PlayerSlotMass[2],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[4],udg_PlayerSlotMass[3],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[5],udg_PlayerSlotMass[1],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[5],udg_PlayerSlotMass[2],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[5],udg_PlayerSlotMass[3],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[6],udg_PlayerSlotMass[1],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[6],udg_PlayerSlotMass[2],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[6],udg_PlayerSlotMass[3],bj_ALLIANCE_UNALLIED)

    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[1],udg_PlayerSlotMass[4],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[1],udg_PlayerSlotMass[5],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[1],udg_PlayerSlotMass[6],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[2],udg_PlayerSlotMass[4],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[2],udg_PlayerSlotMass[5],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[2],udg_PlayerSlotMass[6],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[3],udg_PlayerSlotMass[4],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[3],udg_PlayerSlotMass[5],bj_ALLIANCE_UNALLIED)
    call SetPlayerAllianceStateBJ(udg_PlayerSlotMass[3],udg_PlayerSlotMass[6],bj_ALLIANCE_UNALLIED)
    
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(0),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(1),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(2),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(3),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(4),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAllianceStateBJ(Player(15),PlayerSlot(5),bj_ALLIANCE_ALLIED_UNITS)
    call SetPlayerAbilityAvailable(Player(15),'A0B1',false)
    call SetPlayerAbilityAvailable(Player(15),'A0BD',false)

    if bj_isSinglePlayer then
        call SetPlayerAllianceStateBJ(PlayerSlot(3),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
        call SetPlayerAllianceStateBJ(PlayerSlot(0),PlayerSlot(3),bj_ALLIANCE_ALLIED_ADVUNITS)
        //call SetPlayerAllianceStateBJ(PlayerSlot(6),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
        //call SetPlayerAllianceStateBJ(PlayerSlot(4),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
        //call SetPlayerAllianceStateBJ(PlayerSlot(5),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
        //call SetPlayerAllianceStateBJ(PlayerSlot(1),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
    endif


    set a = 0
    loop
        exitwhen a>5
        call SetPlayerAbilityAvailable(PlayerSlot(a),'A04P',false)
        if GetPlayerSlotState(PlayerSlot(a)) == PLAYER_SLOT_STATE_PLAYING or GetPlayerSlotState(PlayerSlot(3-a/3*6+a)) == PLAYER_SLOT_STATE_PLAYING then
            set p = a
            set udg_BooleanPlay[a+1] = true
            call ForceAddPlayer(udg_PlayingPlayers, PlayerSlot(a))
            set udg_PlayersNumber = udg_PlayersNumber+1
            set udg_PlayerInPlaying[udg_PlayersNumber]=PlayerSlot(a)
            set udg_Lives[a+1] = 6
            call SetPlayerState(PlayerSlot(a), PLAYER_STATE_RESOURCE_HERO_TOKENS, 0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'h010',1)//Серафим
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'h01C',1)//Вождь
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'u00W',1)//РыцарьСмерти
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'e00Y',1)//РыжийДревень
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'e01Q',1)//МорскойГигант
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'u014',1)//Инфернал
            
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0GZ',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HI',true)// Пассивки
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HJ',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HK',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HL',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HM',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HN',false)
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HO',false)
            
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0A5',false) // Не готов
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A01U',false) // Для книги перемещения
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A05M',false) // Для книги перемещения
            
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0D0',false) // Хуман молодость
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A054',false) // Книга с яростью орков
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0DP',false) // Пассивка андеда на предметы
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0DR',false) // Пассивка андеда на предметы
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A06E',false) // Эльф стаки
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A07G',false) // Эльф стаки
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0GC',false) // Эльф инвиз
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0GD',false) // Эльф инвиз
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0GE',false) // Эльф инвиз
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0B3',false) // Скилл от каннибализма
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0B4',false) // Скилл от каннибализма
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HW',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HX',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HY',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0HZ',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0IA',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0IB',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0IC',false) // Скилл от героя наг
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0ID',false) // Скилл от героя наг

	    if not(GetPlayerSlotState(PlayerSlot(a)) == PLAYER_SLOT_STATE_PLAYING) then
		//call SetPlayerName(PlayerSlot(a),"Игрок "+I2S(GetPlayerSlotId(PlayerSlot(a))))
		    call EnableTrigger(gg_trg_Supply)
	        set udg_WaveTimeMultiplier = 1.3
            	call SetPlayerAbilityAvailable(PlayerSlot(a),'A0B8',false)
            	call SetPlayerAbilityAvailable(PlayerSlot(a),'A0B9',false)
            	call SetPlayerAbilityAvailable(PlayerSlot(a),'A0BA',false)
            	call SetPlayerAbilityAvailable(PlayerSlot(a),'A0BB',false)
	        if a<3 then
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(0),bj_ALLIANCE_ALLIED_ADVUNITS)
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(1),bj_ALLIANCE_ALLIED_ADVUNITS)
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(2),bj_ALLIANCE_ALLIED_ADVUNITS)
	        else
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(3),bj_ALLIANCE_ALLIED_ADVUNITS)
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(4),bj_ALLIANCE_ALLIED_ADVUNITS)
    		    call SetPlayerAllianceStateBJ(PlayerSlot(a),PlayerSlot(5),bj_ALLIANCE_ALLIED_ADVUNITS)
	        endif
	    else
            call SetPlayerAbilityAvailable(PlayerSlot(a),'A0AF',false) //Показать ресурсы
	    endif

            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R002',0) //Ком арены
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10D',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10F',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R107',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R109',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10A',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10C',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10E',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R108',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10G',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R001',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R106',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10B',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10H',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10I',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10J',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10K',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10O',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10P',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10Q',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10L',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10M',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10N',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10R',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R107',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10S',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10T',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10U',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10V',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10W',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10X',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10Y',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R10Z',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R102',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R103',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R104',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R105',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R101',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R100',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R110',0)
            
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R000',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R003',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R004',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R005',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R006',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R007',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R008',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R009',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R00A',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R00B',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R00C',0)
            call SetPlayerTechMaxAllowed(PlayerSlot(a),'R00D',0)
        else
            set udg_BooleanPlay[a+1] = false
            set udg_Lives[a+1] = 0
            call SetPlayerName(PlayerSlot(a),"<Пусто>")
        endif
        set a=a+1
    endloop
    call SetPlayerAbilityAvailable(Player(15),'A0DR',false) 
    call SetPlayerAbilityAvailable(Player(15),'A0DP',false) 
    call SetPlayerName(PlayerSlot(6), "Правые")
    call SetPlayerName(PlayerSlot(8), "Правые")
    call SetPlayerName(PlayerSlot(10), "Правые")
    call SetPlayerName(PlayerSlot(7), "Левые")
    call SetPlayerName(PlayerSlot(9), "Левые")
    call SetPlayerName(PlayerSlot(11), "Левые")
    set udg_PlayerColor[1] = GetPlayerColor(PlayerSlot(0))
    set udg_PlayerColor[2] = GetPlayerColor(PlayerSlot(1))
    set udg_PlayerColor[3] = GetPlayerColor(PlayerSlot(2))
    set udg_PlayerColor[4] = GetPlayerColor(PlayerSlot(3))
    set udg_PlayerColor[5] = GetPlayerColor(PlayerSlot(4))
    set udg_PlayerColor[6] = GetPlayerColor(PlayerSlot(5))
    call SetPlayerColor(PlayerSlot(6), udg_PlayerColor[1])
    call SetPlayerColor(PlayerSlot(8), udg_PlayerColor[2])
    call SetPlayerColor(PlayerSlot(10), udg_PlayerColor[3])
    call SetPlayerColor(PlayerSlot(7), udg_PlayerColor[4])
    call SetPlayerColor(PlayerSlot(9), udg_PlayerColor[5])
    call SetPlayerColor(PlayerSlot(11), udg_PlayerColor[6])
    call SetPlayerName(Player(15),"Все юниты")
    
    //call FogEnable(false)
    //call FogMaskEnable(false)
    set u = CreateUnit(PlayerSlot(0),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(1),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(2),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(3),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(4),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(5),'e01A',0,0,0)
    call GroupAddUnit(udg_WAUG,u)
    set u = CreateUnit(PlayerSlot(12),'e019',0,0,0)
    call UnitAddAbility(u,'A05H')
    call UnitAddAbility(u,'A05K')
    call UnitAddAbility(u,'A05P')
    call UnitAddAbility(u,'A05O')
    call UnitAddAbility(u,'A04Q')
    call UnitAddAbility(u,'A04U')
    call UnitAddAbility(u,'A058')
    call UnitAddAbility(u,'A059')
    call UnitAddAbility(u,'A01Q')
    call UnitAddAbility(u,'A01S')
    call UnitAddAbility(u,'A01T')
    call UnitAddAbility(u,'A06A')
    call UnitAddAbility(u,'A06B')
    call UnitAddAbility(u,'A06C')
    call UnitAddAbility(u,'A06D')
    call UnitAddAbility(u,'A06F')
    call UnitAddAbility(u,'A06G')
    call UnitAddAbility(u,'A06H')
    call UnitAddAbility(u,'A06I')
    call UnitAddAbility(u,'A06J')
    call UnitAddAbility(u,'A06K')
    call UnitAddAbility(u,'A06M')
    call UnitAddAbility(u,'A06L')
    call UnitAddAbility(u,'A036')
    call UnitAddAbility(u,'A06M')
    call UnitAddAbility(u,'A06L')
    call UnitAddAbility(u,'A03I')
    call UnitAddAbility(u,'A06X')
    call UnitAddAbility(u,'A00X')
    call UnitAddAbility(u,'A03F')
    call UnitAddAbility(u,'A07G')
    call UnitAddAbility(u,'A07N')
    call UnitAddAbility(u,'A07M')
    call UnitAddAbility(u,'A08T')
    call UnitAddAbility(u,'A08H')
    call UnitAddAbility(u,'A092')
    call UnitAddAbility(u,'A093')
    call UnitAddAbility(u,'A085')
    call UnitAddAbility(u,'A09U')
    call UnitAddAbility(u,'A0AG')
    call UnitAddAbility(u,'A008')
    call UnitAddAbility(u,'A00W')
    call UnitAddAbility(u,'A03O')
    call UnitAddAbility(u,'A0B3')
    call UnitAddAbility(u,'A015')
    call UnitAddAbility(u,'A0AD')
    call UnitAddAbility(u,'A008')
    call UnitAddAbility(u,'A03O')
    call UnitAddAbility(u,'A00W')
    call UnitAddAbility(u,'A0B5')
    call UnitAddAbility(u,'A0BH')
    call UnitAddAbility(u,'A01Y')
    call UnitAddAbility(u,'A01K')
    call UnitAddAbility(u,'A0CS')
    call UnitAddAbility(u,'A0CQ')
    call UnitAddAbility(u,'A0D0')
    call UnitAddAbility(u,'A0D1')
    call UnitAddAbility(u,'A0D2')
    call UnitAddAbility(u,'A0D3')
    call UnitAddAbility(u,'A0D4')
    call UnitAddAbility(u,'A052')
    call UnitAddAbility(u,'A0BL')
    call UnitAddAbility(u,'A0DI')
    call UnitAddAbility(u,'A0F8')
    call UnitAddAbility(u,'A0DS')
    call UnitAddAbility(u,'A0FO')
    call UnitAddAbility(u,'A0FP')
    call UnitAddAbility(u,'A0FS')
    call UnitAddAbility(u,'A04O')
    call UnitAddAbility(u,'A0GA')
    call UnitAddAbility(u,'A00H')
    call UnitAddAbility(u,'A0IK')
    call UnitAddAbility(u,'A0GY')
    call UnitAddAbility(u,'A0IT')
    call UnitAddAbility(u,'A0IU')
    call UnitAddAbility(u,'A0IV')
    
    //TroneAbilities
    
    //HUMAN
    call UnitAddAbility(u,'A108')
    call UnitAddAbility(u,'A0AY')
    call UnitAddAbility(u,'A05K')
    call UnitAddAbility(u,'A069')
    call UnitAddAbility(u,'A106')
    
    //ORC
    call UnitAddAbility(u,'A05A')
    call UnitAddAbility(u,'A05C')
    call UnitAddAbility(u,'A109')
    call UnitAddAbility(u,'A05E')
    
    call UnitAddAbility(u,'A05O')
    call UnitAddAbility(u,'A05Y')
    call UnitAddAbility(u,'A0FY')
    
    //UNDEAD
    call UnitAddAbility(u,'A074')
    call UnitAddAbility(u,'A05X')
    call UnitAddAbility(u,'A05D')
    call UnitAddAbility(u,'A01L')
    
    call UnitAddAbility(u,'A066')
    call UnitAddAbility(u,'A0DQ')
    
    //ELF
    call UnitAddAbility(u,'A02E')
    call UnitAddAbility(u,'A05L')
    call UnitAddAbility(u,'A01M')
    call UnitAddAbility(u,'A01Z')
    
    call UnitAddAbility(u,'A01W')
    call UnitAddAbility(u,'A043')
    call UnitAddAbility(u,'A0DO')
    
    //NAGA
    call UnitAddAbility(u,'A09F')
    call UnitAddAbility(u,'A08Q')
    call UnitAddAbility(u,'A107')
    call UnitAddAbility(u,'A09L')
    
    call UnitAddAbility(u,'A09K')
    call UnitAddAbility(u,'A025')
    call UnitAddAbility(u,'A0FC')
    
    //DEMON
    call UnitAddAbility(u,'A0BV')
    call UnitAddAbility(u,'A0B0')
    call UnitAddAbility(u,'A0B6')
    call UnitAddAbility(u,'A01V')
    call UnitAddAbility(u,'A0CZ')
    
    call UnitAddAbility(u,'A0CT')
    call UnitAddAbility(u,'A0G1')
    
    //End
    
    call RemoveDestructable(CreateDestructable('B002',0,0,0,1,1))
    call RemoveDestructable(CreateDestructable('B003',0,0,0,1,1))
    call RemoveDestructable(CreateDestructable('B004',0,0,0,1,1))
    call RemoveDestructable(CreateDestructable('B005',0,0,0,1,1))
    call SetTerrainType(14950,-20950,'Agrd',-1,1,0)
    call SetTerrainType(14950,-20950,'Alvd',-1,1,0)
    call SetTerrainType(14950,-20950,'Avin',-1,1,0)
    call SetTerrainType(14950,-20950,'Zsan',-1,1,0)
    set udg_ColorN[1]=ConvertPlayerColor(0)
    set udg_ColorN[2]=ConvertPlayerColor(1)
    set udg_ColorN[3]=ConvertPlayerColor(2)
    set udg_ColorN[4]=ConvertPlayerColor(3)
    set udg_ColorN[5]=ConvertPlayerColor(4)
    set udg_ColorN[6]=ConvertPlayerColor(5)
    set udg_ColorN[7]=ConvertPlayerColor(6)
    set udg_ColorN[8]=ConvertPlayerColor(7)
    set udg_ColorN[9]=ConvertPlayerColor(8)
    set udg_ColorN[10]=ConvertPlayerColor(9)
    set udg_ColorN[11]=ConvertPlayerColor(10)
    set udg_ColorN[12]=ConvertPlayerColor(11)
    set udg_ColorN[13]=ConvertPlayerColor(12)
    
    
    call Trig_CreepTipes()
    call CreateDemonstrUnits()
    
    call TriggerSleepAction(0)
    call AllSpellsAndLevelsSetAll()
    set a = 0
    loop
	exitwhen a>5
	    if GetPlayerSlotState(PlayerSlot(a)) != PLAYER_SLOT_STATE_PLAYING and udg_BooleanPlay[4-a/3*6+a] then
		set b = false
		set p = 1
		loop
		    exitwhen p>6
		    if udg_PlayerColor[a+1]==udg_PlayerColor[p] and a+1!=p and udg_BooleanPlay[p] then
			set b = true
		    endif
		    set p=p+1
		endloop

		if b then
	            set n[1]=0
	            set b = false
	            loop
		        exitwhen b
		        set n[1]=n[1]+1
	    	        set b = true
	    	        set p = 1
	                loop
		            exitwhen p>6
		            if udg_ColorN[n[1]]==udg_PlayerColor[p] and a+1!=p and udg_BooleanPlay[p] then
	    	                set b = false
		            endif
		            set p=p+1
	                endloop
	            endloop
	            set udg_PlayerColor[a+1]=udg_ColorN[n[1]]
    		    call SetPlayerColor(PlayerSlot(a), udg_PlayerColor[a+1])
    		    call SetPlayerColor(PlayerSlot(6-(a/3*5)+2*a), udg_PlayerColor[a+1])
		endif

		call SetPlayerName(PlayerSlot(a),"Игрок "+I2S(GetPlayerSlotId(PlayerSlot(a))+1))
	    endif
	set a=a+1
    endloop
    call SetMapFlag( MAP_RESOURCE_TRADING_ALLIES_ONLY, true )
    call SuspendTimeOfDay(true)
    call SetCreepCampFilterState( false )
    call SetCameraField(CAMERA_FIELD_FARZ, 9900, 0.5)
    set udg_PlayerSectorPeonsAll[1]=gg_rct_Fight1peons
    set udg_PlayerSectorPeonsAll[2]=gg_rct_Fight2peons
    set udg_PlayerSectorPeonsAll[3]=gg_rct_Fight3peons
    set udg_PlayerSectorPeonsAll[4]=gg_rct_Fight4peons
    set udg_PlayerSectorPeonsAll[5]=gg_rct_Fight5peons
    set udg_PlayerSectorPeonsAll[6]=gg_rct_Fight6peons
    set udg_PlayerSectorPeonsAll[7]=gg_rct_TeamFight1peons
    set udg_PlayerSectorPeonsAll[8]=gg_rct_TeamFight2peons
    set udg_PlayerSectorPeonsAll[9]=gg_rct_DuelsPeons1
    set udg_PlayerSectorPeonsAll[10]=gg_rct_DuelsPeons2
    set udg_PlayerSectorPeonsAll[11]=gg_rct_SoloDuel1peons
    set udg_PlayerSectorPeonsAll[12]=gg_rct_SoloDuel2peons
    set udg_PlayerSectorPeonsAll[13]=gg_rct_SoloDuel3peons
    set udg_PlayerSectorPeonsAll[14]=gg_rct_SoloDuel4peons
    set udg_PlayerSectorPeonsAll[15]=gg_rct_SoloDuel5peons
    set udg_PlayerSectorPeonsAll[16]=gg_rct_SoloDuel6peons
    
    call RemoveUnit(u)
    
    set u = null
endfunction

//===========================================================================
function InitTrig_Init takes nothing returns nothing
    set gg_trg_Init = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init, function Trig_Init_Actions )
endfunction

//===========================================================================
// Trigger: qwests1
//===========================================================================
function Trig_qwests1_Actions takes nothing returns nothing
    call CreateQuestBJ( bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_185", "TRIGSTR_669", "ReplaceableTextures\\CommandButtons\\BTNSentryWard.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_741", "TRIGSTR_1029", "ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp" )
    set udg_ModUnitsQuest = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_ModUnitsQuest, "TRIGSTR_2095" )
    set udg_ModUnitsRItem = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_ModUnitsQuest, "TRIGSTR_2716" )
    set udg_ModUnitsRItem2 = GetLastCreatedQuestItemBJ()
    call CreateQuestBJ( bj_QUESTTYPE_REQ_DISCOVERED, "TRIGSTR_2936", "TRIGSTR_3127", "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_3128", "TRIGSTR_3131", "ReplaceableTextures\\CommandButtons\\BTNCarrionScarabs.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_3132", "TRIGSTR_3227", "ReplaceableTextures\\CommandButtons\\BTNScrollUber.blp" )
    call CreateQuestBJ( bj_QUESTTYPE_OPT_DISCOVERED, "TRIGSTR_3228", "TRIGSTR_3229", "ReplaceableTextures\\CommandButtons\\BTNGreaterRejuvScroll.blp" )
endfunction

//===========================================================================
function InitTrig_qwests1 takes nothing returns nothing
    set gg_trg_qwests1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_qwests1, function Trig_qwests1_Actions )
endfunction

//===========================================================================
// Trigger: qwests2
//
// Инициализация стандартного режима сражения для всех игроков
//===========================================================================
//TESH.scrollpos=9
//TESH.alwaysfold=0
function Trig_qwests2_Actions takes nothing returns nothing
    set udg_TipsAndTricks[1] = "Старайтесь думать на пару шагов вперёд"
    set udg_TipsAndTricks[2] = "Против воинов с большим кол-вом брони хорошо работает магический урон"
    set udg_TipsAndTricks[3] = "Старайтесь балансировать между ДПСом и живучестью"
    set udg_TipsAndTricks[4] = "Чем ближе экран к полю боя, тем больше fps. Менять дальность можно командами чата от -z0 до -z9"
    set udg_TipsAndTricks[5] = "Юниты дальнего боя гораздо надёжнее вносят урон, т.к. дольше живут и не толпятся"
    set udg_TipsAndTricks[6] = "Воинов, которые больше не приносят пользы, можно продать"
    set udg_TipsAndTricks[7] = "Иногда возможность переместить юнитов может принести Вам победу"
    set udg_TipsAndTricks[8] = "Далеко не всегда улучшенный воин выгоднее неулучшенного"
    set udg_TipsAndTricks[9] = "Старайтесь законтрить воинов оппонента"
    set udg_TipsAndTricks[10] = "У каждой стратегии есть свои уязвимые места (но это не точно)"
    set udg_TipsAndTricks[11] = "Чтобы выключить подсказки, введите команду -tipsoff (и -tipson чтобы включить)"
    set udg_TipsAndTricks[12] = "В квестах можно найти много полезной и не очень информации"
    set udg_TipsAndTricks[13] = "Не забывайте использовать и улучшать способности"
    set udg_TipsAndTricks[14] = "Способности можно использовать по всей карте, помогая союзникам"
    set udg_TipsAndTricks[15] = "Координируйтесь с союзниками, это полезно"
    set udg_TipsAndTricks[16] = "Работа над картой всё ещё ведётся (по крайней мере на 19.03.2021)"
    set udg_TipsAndTricks[17] = "Таймер следующей волны можно выключать и включать командами ''-timeoff'' и ''-timeon''"
    set udg_TipsAndTricks[18] = "В одиночном режиме и режиме одиночных арен игроки видят расы друг друга"
    set udg_TipsAndTricks[19] = "Нет смысла выигрывать волну со слишком большим преимуществом, лучше позаботиться о будущем"
    set udg_TipsAndTricks[20] = "Если у Вас есть идеи по развитию карты, можете написать мне через группу в ВК (см. раздел ''задания'')"
    set udg_TipsAndTricks[21] = "Если запустить карту в одиночку, можно поиграть с самим собой, управляя сразу 2-мя игроками"
    set udg_TipsAndTricks[22] = "Против кучи массового урона не будет лишним сильно рассптилить армию"
    set udg_TipsAndTricks[23] = "Не стесняйтесь тратить не всё золото, чтобы накопить на сильного юнита на следущей волне"
    set udg_TipsAndTricks[24] = "Кнопка ''Готов'' добавлена не просто так, не забывайте её нажимать"
    set udg_TipsAndTricks[25] = "Если волна сильно затянулась, Вы можете написать в чат команду ''-sur'', тем самым проиграв волну"
    set udg_TipsAndTricks[26] = "В верхней части карты есть демонстративные юниты, показывающие, чем обладает тот или иной воин"
    set udg_TipsAndTricks[27] = "Чтобы узнать характеристики демонстративного юнита (в верхней части карты), выберите того дважды"
    set udg_TipsAndTricks[28] = "Команда ''-clear'' чистит экран игрока от текущих игровых сообщений"
    set udg_TipsAndTricks[29] = "Сообщить о баге или другой недоработке можно через группу в ВК (см. раздел ''задания'')"
    set udg_TipsAndTricks[30] = "В этой версии карты возможна ошибка с бесконечной волной. В подобных ситуациях ипользуйте команду ''-check''."
    set udg_TipsAndTricksNum = 29
endfunction

//===========================================================================
function InitTrig_qwests2 takes nothing returns nothing
    set gg_trg_qwests2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_qwests2, function Trig_qwests2_Actions )
endfunction

//===========================================================================
// Trigger: AIdetection
//===========================================================================
//TESH.scrollpos=5
//TESH.alwaysfold=0
function Trig_AIdetection_Actions takes nothing returns nothing
    local integer i = 0
    loop
        exitwhen i>5
        if GetPlayerController(Player(i))==MAP_CONTROL_COMPUTER then
            call DisplayTimedTextToPlayer(Player(0),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            call DisplayTimedTextToPlayer(Player(1),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            call DisplayTimedTextToPlayer(Player(2),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            call DisplayTimedTextToPlayer(Player(3),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            call DisplayTimedTextToPlayer(Player(4),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            call DisplayTimedTextToPlayer(Player(5),0,0,999,"|cffff1111На слоте одного из игроков находится игрок-компьютер. Во избежание критических ошибок, пожалуйста, перезапустите игру без ботов на слотах игроков.|r")
            set i=6
        endif
        set i=i+1
    endloop
    //if i==6 then
    //    call DisplayTimedTextToPlayer(Player(0),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //    call DisplayTimedTextToPlayer(Player(1),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //    call DisplayTimedTextToPlayer(Player(2),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //    call DisplayTimedTextToPlayer(Player(3),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //    call DisplayTimedTextToPlayer(Player(4),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //    call DisplayTimedTextToPlayer(Player(5),0,0,8,"|cffff7711Если раунд не заканчивается, 1-ый игрок должен ввести команду ''-check''.|r")
    //endif
endfunction

//===========================================================================
function InitTrig_AIdetection takes nothing returns nothing
    set gg_trg_AIdetection = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_AIdetection, 6, false)
    call TriggerAddAction( gg_trg_AIdetection, function Trig_AIdetection_Actions )
endfunction

//===========================================================================
// Trigger: StartingCleaning
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_StartingCleaning_Actions takes nothing returns nothing
    local integer i = 0
    call ClearTextMessages()
    set udg_Multiboard = CreateMultiboard()
    call MultiboardDisplay(udg_Multiboard, true)
    call MultiboardDisplay(udg_Multiboard, false)
    loop
        exitwhen i>5
        call DisplayTimedTextToPlayer(PlayerSlot(i),0,0,8,"|cffffcc00Хост выбирает режим игры|r")
        set i=i+1
    endloop
    set i = 0
endfunction

//===========================================================================
function InitTrig_StartingCleaning takes nothing returns nothing
    set gg_trg_StartingCleaning = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_StartingCleaning, 0.001, false)
    call TriggerAddAction( gg_trg_StartingCleaning, function Trig_StartingCleaning_Actions )
endfunction

//===========================================================================
// Trigger: ChoosingMod
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
function Trig_ChoosingMod_Actions takes nothing returns nothing
    local integer i = 0
    call DialogSetMessage(udg_ChoosingMod, "Режим")
    set udg_ChoosingModSDuels = DialogAddButton(udg_ChoosingMod, "|c0020C000Одиночные дуэли|r", 0)
    set udg_ChoosingModSingle = DialogAddButton(udg_ChoosingMod, "|c00E55BB0Одиночные арены|r", 0)
    set udg_ChoosingModTDuels = DialogAddButton(udg_ChoosingMod, "|c0020C000Командные дуэли|r", 0)
    set udg_ChoosingModTeam = DialogAddButton(udg_ChoosingMod, "|c00E55BB0Командные арены|r", 0)
    call DialogSetMessage(udg_ChoosingModTimer, "Включить таймер")   
    set udg_ChoosingModTimerOn = DialogAddButton(udg_ChoosingModTimer, "Да", 0)
    set udg_ChoosingModTimerOff = DialogAddButton(udg_ChoosingModTimer, "Нет", 0)
    call DialogSetMessage(udg_ChoosingModWorkers, "Кол-во пассивок")   
    set udg_ChoosingModWorkersOne = DialogAddButton(udg_ChoosingModWorkers, "Одна", 0)
    set udg_ChoosingModWorkersTwo = DialogAddButton(udg_ChoosingModWorkers, "Две", 0)
    //set udg_ChoosingModWorkersThree=DialogAddButton(udg_ChoosingModWorkers, "Три", 0)
    call DialogSetMessage(udg_ChoosingModRacism, "Пассивки только своей расы")   
    set udg_ChoosingModRacismYes = DialogAddButton(udg_ChoosingModRacism, "Нет", 0)
    set udg_ChoosingModRacismNo = DialogAddButton(udg_ChoosingModRacism, "Да", 0)
    call DialogSetMessage(udg_ChoosingModUnits, "Юниты игроков")
    set udg_ChoosingModUnitsNormal = DialogAddButton(udg_ChoosingModUnits, "Классические", 0)
    set udg_ChoosingModUnitsRandomOnly = DialogAddButton(udg_ChoosingModUnits, "Случайные (1 раз)", 0)
    set udg_ChoosingModUnitsRandomAlways = DialogAddButton(udg_ChoosingModUnits, "Случайные (каждую волну)", 0)
    call DialogSetMessage(udg_ChoosingModCreeps, "Крипы на аренах")
    set udg_ChoosingModCreepsTrue = DialogAddButton(udg_ChoosingModCreeps, "Одинаковые", 0)
    set udg_ChoosingModCreepsFalse = DialogAddButton(udg_ChoosingModCreeps, "Зеркало", 0)
    loop
	exitwhen i>5
	if GetPlayerSlotState(PlayerSlot(i)) == PLAYER_SLOT_STATE_PLAYING then
	    call DialogDisplay(PlayerSlot(i), udg_ChoosingModTimer, true)
	    //call DialogDisplay(PlayerSlot(i), udg_ChoosingModWorkers, true)
	    //call DialogDisplay(PlayerSlot(i), udg_ChoosingModUnits, true)
	    return
	endif
	set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ChoosingMod takes nothing returns nothing
    set gg_trg_ChoosingMod = CreateTrigger(  )
    call TriggerRegisterTimerEvent(gg_trg_ChoosingMod, 0.5, false)
    call TriggerAddAction( gg_trg_ChoosingMod, function Trig_ChoosingMod_Actions )
endfunction

//===========================================================================
// Trigger: ChoosingModTimer
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_ChoosingModTimer_Actions takes nothing returns nothing
    local integer i = 0
    if GetClickedButton() == udg_ChoosingModTimerOn then
        set udg_OnTimerOnStart = true
    else//ChoosingModTimerOff
        set udg_OnTimerOnStart = false
    endif
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i)) == PLAYER_SLOT_STATE_PLAYING then
            call DialogDisplay(PlayerSlot(i), udg_ChoosingModWorkers, true)
            return
        endif
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ChoosingModTimer takes nothing returns nothing
    set gg_trg_ChoosingModTimer = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChoosingModTimer, udg_ChoosingModTimer )
    call TriggerAddAction( gg_trg_ChoosingModTimer, function Trig_ChoosingModTimer_Actions )
endfunction

//===========================================================================
// Trigger: ChooseWorkersMod
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_ChooseWorkersMod_Actions takes nothing returns nothing
    local integer i = 0
    if GetClickedButton() == udg_ChoosingModWorkersTwo then
        set udg_ChoosingModWorkersNum = 2
        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Две пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Две пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Две пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Две пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Две пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Две пассивки|r")
    elseif GetClickedButton() == udg_ChoosingModWorkersOne then
        set udg_ChoosingModWorkersNum = 1
        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Одна пассивка|r")
        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Одна пассивка|r")
        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Одна пассивка|r")
        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Одна пассивка|r")
        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Одна пассивка|r")
        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Одна пассивка|r")
    else//ChoosingModWorkersThree
        set udg_ChoosingModWorkersNum = 3
        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Три пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Три пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Три пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Три пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Три пассивки|r")
        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Три пассивки|r")
    endif
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i)) == PLAYER_SLOT_STATE_PLAYING then
            //call DialogDisplay(PlayerSlot(i), udg_ChoosingMod, true)
            call DialogDisplay(PlayerSlot(i), udg_ChoosingModRacism, true)
            return
        endif
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ChooseWorkersMod takes nothing returns nothing
    set gg_trg_ChooseWorkersMod = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChooseWorkersMod, udg_ChoosingModWorkers )
    call TriggerAddAction( gg_trg_ChooseWorkersMod, function Trig_ChooseWorkersMod_Actions )
endfunction

//===========================================================================
// Trigger: ChooseRacismMod
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
function Trig_ChooseRacismMod_Actions takes nothing returns nothing
    local integer i = 0
    if GetClickedButton() == udg_ChoosingModRacismYes then
        call SetPlayerAbilityAvailable(PlayerSlot(0),'A0GZ',true)
        call SetPlayerAbilityAvailable(PlayerSlot(1),'A0GZ',true)
        call SetPlayerAbilityAvailable(PlayerSlot(2),'A0GZ',true)
        call SetPlayerAbilityAvailable(PlayerSlot(3),'A0GZ',true)
        call SetPlayerAbilityAvailable(PlayerSlot(4),'A0GZ',true)
        call SetPlayerAbilityAvailable(PlayerSlot(5),'A0GZ',true)
        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Пассивки всех рас|r")
        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Пассивки всех рас|r")
        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Пассивки всех рас|r")
        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Пассивки всех рас|r")
        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Пассивки всех рас|r")
        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Пассивки всех рас|r")
    else
        if GetClickedButton() == udg_ChoosingModRacismNo then
            call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Только пассивки своей расы|r")
            call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Только пассивки своей расы|r")
            call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Только пассивки своей расы|r")
            call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Только пассивки своей расы|r")
            call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Только пассивки своей расы|r")
            call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Только пассивки своей расы|r")
        endif
    endif
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i)) == PLAYER_SLOT_STATE_PLAYING then
            //call DialogDisplay(PlayerSlot(i), udg_ChoosingMod, true)
            call DialogDisplay(PlayerSlot(i), udg_ChoosingModUnits, true)
            return
        endif
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ChooseRacismMod takes nothing returns nothing
    set gg_trg_ChooseRacismMod = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChooseRacismMod, udg_ChoosingModRacism )
    call TriggerAddAction( gg_trg_ChooseRacismMod, function Trig_ChooseRacismMod_Actions )
endfunction

//===========================================================================
// Trigger: ChooseUnitsMod
//===========================================================================
//TESH.scrollpos=63
//TESH.alwaysfold=0
function Trig_ChooseUnitsMod_Actions takes nothing returns nothing
    local integer i = 1
    local integer a = 0
    if GetClickedButton() == udg_ChoosingModUnitsRandomAlways then
        set udg_ModNumberUnits = 2
        call QuestItemSetDescription(udg_ModUnitsRItem,"Меняющиеся юниты")
        call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Меняющиеся юниты|r")
        call SetPlayerTechResearched(PlayerSlot(0),'R002',1)
        call SetPlayerTechResearched(PlayerSlot(1),'R002',1)
        call SetPlayerTechResearched(PlayerSlot(2),'R002',1)
        call SetPlayerTechResearched(PlayerSlot(3),'R002',1)
        call SetPlayerTechResearched(PlayerSlot(4),'R002',1)
        call SetPlayerTechResearched(PlayerSlot(5),'R002',1)
        loop
            exitwhen a>5
            set i=1
            loop
                exitwhen i>udg_UTN
                call SetPlayerTechMaxAllowed(PlayerSlot(a),udg_CreepTower[i],0)
                set i=i+3
            endloop
            set i=1
            loop
                exitwhen i>18
                call SetPlayerTechMaxAllowed(PlayerSlot(a),udg_CreepTower[18*GetRandomInt(0,4)+i],999)
                set i=i+3
            endloop
            set a=a+1
        endloop
    else
        if GetClickedButton() == udg_ChoosingModUnitsRandomOnly then
            call QuestItemSetDescription(udg_ModUnitsRItem,"Случайные юниты")
            call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Случайные юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Случайные юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Случайные юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Случайные юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Случайные юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Случайные юниты|r")
            set udg_ModNumberUnits = 1
            call SetPlayerTechResearched(PlayerSlot(0),'R002',1)
            call SetPlayerTechResearched(PlayerSlot(1),'R002',1)
            call SetPlayerTechResearched(PlayerSlot(2),'R002',1)
            call SetPlayerTechResearched(PlayerSlot(3),'R002',1)
            call SetPlayerTechResearched(PlayerSlot(4),'R002',1)
            call SetPlayerTechResearched(PlayerSlot(5),'R002',1)
            loop
                exitwhen a>5
                set i=1
                loop
                    exitwhen i>udg_UTN
                    call SetPlayerTechMaxAllowed(PlayerSlot(a),udg_CreepTower[i],0)
                    set i=i+3
                endloop
                set i=1
                loop
                    exitwhen i>18
                    call SetPlayerTechMaxAllowed(PlayerSlot(a),udg_CreepTower[18*GetRandomInt(0,4)+i],999)
                    set i=i+3
                endloop
                set a=a+1
            endloop
        else
            call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,4,"|cffffcc00Классические юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,4,"|cffffcc00Классические юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,4,"|cffffcc00Классические юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,4,"|cffffcc00Классические юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,4,"|cffffcc00Классические юниты|r")
            call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,4,"|cffffcc00Классические юниты|r")
        endif
    endif
    set i = udg_UTNR+1
    loop
        exitwhen i>udg_UTN
        call SetPlayerTechMaxAllowed(PlayerSlot(0),udg_CreepTower[i],0)
        call SetPlayerTechMaxAllowed(PlayerSlot(1),udg_CreepTower[i],0)
        call SetPlayerTechMaxAllowed(PlayerSlot(2),udg_CreepTower[i],0)
        call SetPlayerTechMaxAllowed(PlayerSlot(3),udg_CreepTower[i],0)
        call SetPlayerTechMaxAllowed(PlayerSlot(4),udg_CreepTower[i],0)
        call SetPlayerTechMaxAllowed(PlayerSlot(5),udg_CreepTower[i],0)
        set i=i+1
    endloop
    set i=0
    loop
        exitwhen i>5
        if GetPlayerSlotState(PlayerSlot(i)) == PLAYER_SLOT_STATE_PLAYING then
            call DialogDisplay(PlayerSlot(i), udg_ChoosingMod, true)
            return
        endif
        set i=i+1
    endloop
endfunction

//===========================================================================
function InitTrig_ChooseUnitsMod takes nothing returns nothing
    set gg_trg_ChooseUnitsMod = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChooseUnitsMod, udg_ChoosingModUnits )
    call TriggerAddAction( gg_trg_ChooseUnitsMod, function Trig_ChooseUnitsMod_Actions )
endfunction

//===========================================================================
// Trigger: ChooseGo
//===========================================================================
//TESH.scrollpos=126
//TESH.alwaysfold=0
function Trig_NUIN takes nothing returns nothing
    set udg_int = udg_int+1
endfunction

function CreateMultik takes nothing returns nothing    
    local integer a
    //set udg_Multiboard = CreateMultiboard()
    //call MultiboardDisplay(udg_Multiboard, false)
    call MultiboardSetColumnCount(udg_Multiboard, 3)
    call MultiboardSetTitleText(udg_Multiboard, "Мультик" )
    if udg_ModNumber==0 or udg_ModNumber==3 then
        call MultiboardSetRowCount(udg_Multiboard, 9)
        call MultiboardSetItemValueNew( udg_Multiboard, 1, 1, "Имя" )
        call MultiboardSetItemValueNew( udg_Multiboard, 2, 1, "Жизни" )
        call MultiboardSetItemValueNew( udg_Multiboard, 1, 2, "  |c0020C000Правая команда|r" )
        call MultiboardSetItemValueNew( udg_Multiboard, 2, 2, " " )
        call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, " " )
        call MultiboardSetItemWidthNew( udg_Multiboard, 1, 2, 15.5 )
        call MultiboardSetItemWidthNew( udg_Multiboard, 2, 2, 1 )
        call MultiboardSetItemWidthNew( udg_Multiboard, 3, 2, 1 )
        call MultiboardSetItemStyleNew( udg_Multiboard, 1, 2, true, false )
        call MultiboardSetItemStyleNew( udg_Multiboard, 2, 2, true, false )
        call MultiboardSetItemStyleNew( udg_Multiboard, 3, 2, true, false )
        set a = 3
        loop
            exitwhen a>5
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, a, 8 )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, a, GetPlayerName(PlayerSlot(a-3)))
    	    call MultiboardSetItemIconNew(  udg_Multiboard, 1, a, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, a, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, a, "  "+I2S(udg_Lives[GetPlayerSlotId(PlayerSlot(a-3))+1]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, a, 5.00 )
	    if udg_BooleanPlay[a-2] then
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, "|c00ff2222Нет|r")
	    endif
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, a, true, true )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, a, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, a, true, false )
            set a=a+1
        endloop
        call MultiboardSetItemValueNew( udg_Multiboard, 1, 6, "  |c00E55BB0Левая команда|r" )
        call MultiboardSetItemValueNew( udg_Multiboard, 2, 6, " " )
        call MultiboardSetItemValueNew( udg_Multiboard, 3, 6, " " )
        call MultiboardSetItemWidthNew( udg_Multiboard, 1, 6, 15.5 )
        call MultiboardSetItemWidthNew( udg_Multiboard, 2, 6, 1 )
        call MultiboardSetItemWidthNew( udg_Multiboard, 3, 6, 1 )
        call MultiboardSetItemStyleNew( udg_Multiboard, 1, 6, true, false )
        call MultiboardSetItemStyleNew( udg_Multiboard, 2, 6, true, false )
        call MultiboardSetItemStyleNew( udg_Multiboard, 3, 6, true, false )
        set a = 7
        loop
            exitwhen a>9
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, a, 8 )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, a, GetPlayerName(PlayerSlot(a-4)))
    	    call MultiboardSetItemIconNew(  udg_Multiboard, 1, a, "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, a, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, a, "  "+I2S(udg_Lives[GetPlayerSlotId(PlayerSlot(a-4))+1]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, a, 5.00 )
	    if udg_BooleanPlay[a-3] then
            	call MultiboardSetItemValueNew( udg_Multiboard, 3, a, "|c00ff2222Нет|r")
	    endif
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, a, true, true )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, a, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, a, true, false )
            set a=a+1
        endloop
    else
        if udg_ModNumber==1 then
            call MultiboardSetRowCount(udg_Multiboard, 3)
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 1, " Команда" )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 1, "Жизни" )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 2, " |c0020C000Правая|r" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, 2, 7.50 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 2, "  "+I2S(udg_Lives[1]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, 2, 5.00 )
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, 2, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c00ff2222Нет|r")
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, 2, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, 2, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, 2, true, false )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 3, " |c00E55BB0Левая|r" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, 3, 7.50 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 3, "  "+I2S(udg_Lives[4]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, 3, 5.00 )
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, 3, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c00ff2222Нет|r")
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, 3, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, 3, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, 3, true, false )
        else
            call MultiboardSetRowCount(udg_Multiboard, 3)
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 1, " Команда" )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 1, "Жизни" )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 2, " |c0020C000Правая|r" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, 2, 7.50 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 2, "  "+I2S(udg_Lives[1]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, 2, 5.00 )
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, 2, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 2, "|c00ff2222Нет|r")
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, 2, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, 2, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, 2, true, false )
            call MultiboardSetItemValueNew( udg_Multiboard, 1, 3, " |c00E55BB0Левая|r" )
            call MultiboardSetItemWidthNew( udg_Multiboard, 1, 3, 7.50 )
            call MultiboardSetItemValueNew( udg_Multiboard, 2, 3, "  "+I2S(udg_Lives[4]))
            call MultiboardSetItemWidthNew( udg_Multiboard, 2, 3, 5.00 )
            call MultiboardSetItemWidthNew( udg_Multiboard, 3, 3, 5.00 )
            call MultiboardSetItemValueNew( udg_Multiboard, 3, 3, "|c00ff2222Нет|r")
            call MultiboardSetItemStyleNew( udg_Multiboard, 1, 3, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 2, 3, true, false )
            call MultiboardSetItemStyleNew( udg_Multiboard, 3, 3, true, false )
        endif
    endif
    call MultiboardSetItemValueNew( udg_Multiboard, 3, 1, "Готов" )
    call MultiboardSetItemWidthNew( udg_Multiboard, 1, 1, 7.50 )
    call MultiboardSetItemWidthNew( udg_Multiboard, 2, 1, 5.00 )
    call MultiboardSetItemWidthNew( udg_Multiboard, 3, 1, 5.00 )
    call MultiboardSetItemStyleNew( udg_Multiboard, 1, 1, true, false )
    call MultiboardSetItemStyleNew( udg_Multiboard, 2, 1, true, false )
    call MultiboardSetItemStyleNew( udg_Multiboard, 3, 1, true, false )
    call MultiboardDisplay(udg_Multiboard, true)
endfunction

function Trig_ChooseGo_Actions takes nothing returns nothing
    local fogmodifier f
    local integer a = 0
    local integer i = 0
    local player pl = GetLocalPlayer()
    local integer p = GetPlayerSlotId(pl)
    local unit u
    if GetClickedButton() == udg_ChoosingModSingle then
        set udg_ModNumber = 0
        set a=0
        loop
            exitwhen a>5
            if GetPlayerSlotState(PlayerSlot(a)) == PLAYER_SLOT_STATE_PLAYING then
                call DialogDisplay(PlayerSlot(a), udg_ChoosingModCreeps, true)
                return
            endif
            set a=a+1
        endloop
    else
        if GetClickedButton() == udg_ChoosingModTeam then
            set udg_ModNumber = 1
            call QuestItemSetDescription(udg_ModUnitsRItem2,"Арены (командные)")
            loop
                exitwhen a>5
                call DisplayTimedTextToPlayer(PlayerSlot(a),0,0,4,"|cffffcc00Арены (командные)|r")
                set a=a+1
            endloop
            if udg_ModNumberUnits==0 then
                call QuestSetDescription(udg_ModUnitsQuest,"Классические юниты - игроки могут строить юнитов их расы. Командные арены: на Вас нападают воины, аналогичные построенным Вашим оппонентом. Выиграет та команда, которая отобьётся раньше.")
            else
                if udg_ModNumberUnits==1 then
                    call QuestSetDescription(udg_ModUnitsQuest,"Случайные юниты: игроки имеют случайных юнитов. Командные арены: на Вас нападают воины, аналогичные построенным Вашим оппонентом. Выиграет та команда, которая отобьётся раньше.")
                else
                    call QuestSetDescription(udg_ModUnitsQuest,"Меняющиеся юниты: каждую волну возможные для постройки юниты меняются. Командные арены: на Вас нападают воины, аналогичные построенным Вашим оппонентом. Выиграет та команда, которая отобьётся раньше.")              
                endif
            endif
            set udg_Lives[1] = 6
            set udg_Lives[2] = 6
            set udg_Lives[3] = 6
            set udg_Lives[4] = 6
            set udg_Lives[5] = 6
            set udg_Lives[6] = 6
            if udg_BooleanPlay[1] then
                set udg_BooleanPlayForTA[1]=true
            else
                set udg_BooleanPlayForTA[1]=false
                set udg_BooleanPlay[1]=true
            endif
            if udg_BooleanPlay[2] then
                set udg_BooleanPlayForTA[2]=true
            else
                set udg_BooleanPlayForTA[2]=false
                set udg_BooleanPlay[2]=true
            endif
            if udg_BooleanPlay[3] then
                set udg_BooleanPlayForTA[3]=true
            else
                set udg_BooleanPlayForTA[3]=false
                set udg_BooleanPlay[3]=true
            endif
            if udg_BooleanPlay[4] then
                set udg_BooleanPlayForTA[4]=true
            else
                set udg_BooleanPlayForTA[4]=false
                set udg_BooleanPlay[4]=true
            endif
            if udg_BooleanPlay[5] then
                set udg_BooleanPlayForTA[5]=true
            else
                set udg_BooleanPlayForTA[5]=false
                set udg_BooleanPlay[5]=true
            endif
            if udg_BooleanPlay[6] then
                set udg_BooleanPlayForTA[6]=true
            else
                set udg_BooleanPlayForTA[6]=false
                set udg_BooleanPlay[6]=true
            endif
            set udg_GoblPassMaxHP[1]=6
            set udg_GoblPassMaxHP[2]=6
            call SetPlayerState(PlayerSlot(0),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(1),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(2),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(3),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(4),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(5),PLAYER_STATE_RESOURCE_GOLD,200)
            call SetPlayerState(PlayerSlot(0),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerState(PlayerSlot(1),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerState(PlayerSlot(2),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerState(PlayerSlot(3),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerState(PlayerSlot(4),PLAYER_STATE_RESOURCE_LUMBER,0)
            call SetPlayerState(PlayerSlot(5),PLAYER_STATE_RESOURCE_LUMBER,0)
            call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_VisionT1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_VisionT1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_VisionT1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_VisionT2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_VisionT2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_VisionT2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTeam1 )
            if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
                set udg_Throune[1] = CreateUnit(PlayerSlot(0),'H008',2496,-1300,270)
                set udg_Throune[2] = udg_Throune[1]
                set udg_Throune[3] = udg_Throune[1]
                if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[1]=udg_Throune[1]
                    set udg_ThrouneUpgr[1]=CreateUnit(PlayerSlot(0),'H01F',2496,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(0),'e01B',2550,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(0) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
                if IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[2]=CreateUnit(PlayerSlot(1),'H01E',2976,-1300, 270)
                    set udg_ThrouneUpgr[2]=CreateUnit(PlayerSlot(1),'H01F',2976,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(1),'e01B',3030,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(1) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
                if IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[3]=CreateUnit(PlayerSlot(2),'H01E',2016,-1300, 270)
                    set udg_ThrouneUpgr[3]=CreateUnit(PlayerSlot(2),'H01F',2016,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(2),'e01B',2070,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(2) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
            endif
            if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
                set udg_Throune[4] = CreateUnit(PlayerSlot(3),'H008',-2496,-1300,270)
                set udg_Throune[5] = udg_Throune[4]
                set udg_Throune[6] = udg_Throune[4]
                if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[4]=udg_Throune[4]
                    set udg_ThrouneUpgr[4]=CreateUnit(PlayerSlot(3),'H01F',-2496,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(3),'e01B',-2550,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(3) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
                if IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[5]=CreateUnit(PlayerSlot(4),'H01E',-2976,-1300, 270)
                    set udg_ThrouneUpgr[5]=CreateUnit(PlayerSlot(4),'H01F',-2976,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(4),'e01B',-3030,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(4) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
                if IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
                    set udg_ThrouneCaster[6]=CreateUnit(PlayerSlot(5),'H01E',-2016,-1300, 270)
                    set udg_ThrouneUpgr[6]=CreateUnit(PlayerSlot(5),'H01F',-2016,-1540, 270)
                    set a = 1
                    loop
                        exitwhen a>1//udg_ChoosingModWorkersNum
                        set u=CreateUnit(PlayerSlot(5),'e01B',-2070,-800,270)
                        call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                        if pl==PlayerSlot(5) then
                            call SelectUnit(u,true)
                        endif
                        set a=a+1
                    endloop
                endif
            endif
            if p<3 then
                call SetCameraPosition(2500,-1300)
            else
                call SetCameraPosition(-2500,-1300)
            endif
            set udg_PlayerSectorFight[1] = gg_rct_TeamFight1
            set udg_PlayerSectorFight[2] = gg_rct_TeamFight1
            set udg_PlayerSectorFight[3] = gg_rct_TeamFight1
            set udg_PlayerSectorFight[4] = gg_rct_TeamFight2
            set udg_PlayerSectorFight[5] = gg_rct_TeamFight2
            set udg_PlayerSectorFight[6] = gg_rct_TeamFight2
            set udg_PlayerHomeLocX[1] = 2550
            set udg_PlayerHomeLocX[2] = 2550
            set udg_PlayerHomeLocX[3] = 2550
            set udg_PlayerHomeLocX[4] = -2550
            set udg_PlayerHomeLocX[5] = -2550
            set udg_PlayerHomeLocX[6] = -2550
            set udg_PlayerHomeLocY[1] = -1300
            set udg_PlayerHomeLocY[2] = -1300
            set udg_PlayerHomeLocY[3] = -1300
            set udg_PlayerHomeLocY[4] = -1300
            set udg_PlayerHomeLocY[5] = -1300
            set udg_PlayerHomeLocY[6] = -1300
            call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1980, 0.5)
            call SetCameraField(CAMERA_FIELD_FARZ, 9900, 0.5)
            call TriggerAddAction( gg_trg_Waving, function Trig_Waving_ActionsTeam )
        else
            if GetClickedButton() == udg_ChoosingModTDuels then
                set udg_ModNumber = 2
                call SetPlayerState(PlayerSlot(0), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(1), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(2), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(3), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(4), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(5), PLAYER_STATE_RESOURCE_GOLD, 200)
                call SetPlayerState(PlayerSlot(0), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call SetPlayerState(PlayerSlot(1), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call SetPlayerState(PlayerSlot(2), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call SetPlayerState(PlayerSlot(3), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call SetPlayerState(PlayerSlot(4), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call SetPlayerState(PlayerSlot(5), PLAYER_STATE_RESOURCE_LUMBER, 0)
                call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_VisionD1 )
                call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_VisionD1 )
                call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_VisionD1 )
                call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_VisionD2 )
                call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_VisionD2 )
                call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_VisionD2 )
                call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionTD )
                set udg_Lives[1] = 6
                set udg_Lives[2] = 6
                set udg_Lives[3] = 6
                set udg_Lives[4] = 6
                set udg_Lives[5] = 6
                set udg_Lives[6] = 6
                set udg_GoblPassMaxHP[1]=6
                set udg_GoblPassMaxHP[2]=6
                call QuestItemSetDescription(udg_ModUnitsRItem2,"Дуэли (командные)")
                set a=0
                loop
                    exitwhen a>5
                    call DisplayTimedTextToPlayer(PlayerSlot(a),0,0,4,"|cffffcc00Дуэли (командные)|r")
                    set a = a+1
                endloop
                if udg_ModNumberUnits==0 then
                    call QuestSetDescription(udg_ModUnitsQuest,"Классические юниты - игроки могут строить юнитов их расы. Командные дуэли: Ваша команда напрямую сталкивается с командой оппонентов.")
                else
                    if udg_ModNumberUnits==1 then
                        call QuestSetDescription(udg_ModUnitsQuest,"Случайные юниты: игроки имеют случайных юнитов. Командные дуэли: Ваша команда напрямую сталкивается с командой оппонентов.")
                    else
                        call QuestSetDescription(udg_ModUnitsQuest,"Меняющиеся юниты: каждую волну возможные для постройки юниты меняются. Командные дуэли: Ваша команда напрямую сталкивается с командой оппонентов.")
                    endif
                endif
                if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
                    set udg_Throune[1]=CreateUnit(PlayerSlot(0),'H008',3500,-7872,270)
                    call SetUnitInvulnerable(udg_Throune[1],true)
                    set udg_Throune[2]=udg_Throune[1]
                    set udg_Throune[3]=udg_Throune[1]
                    if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[1]=udg_Throune[1]
                        set udg_ThrouneUpgr[1]=CreateUnit(PlayerSlot(0),'H01F',3740,-7872, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(0),'e01B',3000,-7872,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(0) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                    if IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[2]=CreateUnit(PlayerSlot(1),'H01E',3500,-7392, 180)
                        set udg_ThrouneUpgr[2]=CreateUnit(PlayerSlot(1),'H01F',3740,-7392, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(1),'e01B',3000,-7392,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(1) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                    if IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[3]=CreateUnit(PlayerSlot(2),'H01E',3500,-8352, 180)
                        set udg_ThrouneUpgr[3]=CreateUnit(PlayerSlot(2),'H01F',3740,-8352, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(2),'e01B',3000,-8352,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(2) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                endif
                if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) or IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
                    set udg_Throune[4]= CreateUnit(PlayerSlot(3),'H008',-3500,-7872,270)
                    call SetUnitInvulnerable(udg_Throune[4],true)
                    set udg_Throune[5]=udg_Throune[4]
                    set udg_Throune[6]=udg_Throune[4]
                    if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[4]=udg_Throune[4]
                        set udg_ThrouneUpgr[4]=CreateUnit(PlayerSlot(3),'H01F',-3740,-7872, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(3),'e01B',-3000,-7872,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(3) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                    if IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[5]=CreateUnit(PlayerSlot(4),'H01E',-3500,-7392, 0)
                        set udg_ThrouneUpgr[5]=CreateUnit(PlayerSlot(4),'H01F',-3740,-7392, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(4),'e01B',-3000,-7392,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(4) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                    if IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
                        set udg_ThrouneCaster[6]=CreateUnit(PlayerSlot(5),'H01E',-3500,-8352, 0)
                        set udg_ThrouneUpgr[6]=CreateUnit(PlayerSlot(5),'H01F',-3740,-8352, 270)
                        set a = 1
                        loop
                            exitwhen a>1//udg_ChoosingModWorkersNum
                            set u=CreateUnit(PlayerSlot(5),'e01B',-3000,-8352,270)
                            call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                            if pl==PlayerSlot(5) then
                                call SelectUnit(u,true)
                            endif
                            set a=a+1
                        endloop
                    endif
                endif
                if p<3 then
                    call SetCameraPosition(3500,-7885)
                else
                    call SetCameraPosition(-3500,-7885)
                endif
                set udg_PlayerSectorFight[1] = gg_rct_Duels
                set udg_PlayerSectorFight[2] = gg_rct_Duels
                set udg_PlayerSectorFight[3] = gg_rct_Duels
                set udg_PlayerSectorFight[4] = gg_rct_Duels
                set udg_PlayerSectorFight[5] = gg_rct_Duels
                set udg_PlayerSectorFight[6] = gg_rct_Duels
                set udg_PlayerHomeLocX[1] = 3500
                set udg_PlayerHomeLocX[2] = 3500
                set udg_PlayerHomeLocX[3] = 3500
                set udg_PlayerHomeLocX[4] = -3500
                set udg_PlayerHomeLocX[5] = -3500
                set udg_PlayerHomeLocX[6] = -3500
                set udg_PlayerHomeLocY[1] = -7885
                set udg_PlayerHomeLocY[2] = -7885
                set udg_PlayerHomeLocY[3] = -7885
                set udg_PlayerHomeLocY[4] = -7885
                set udg_PlayerHomeLocY[5] = -7885
                set udg_PlayerHomeLocY[6] = -7885
                call TriggerAddAction( gg_trg_Waving, function Trig_Waving_ActionsDuels )
                call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1980, 0.5)
            else
                if GetClickedButton() == udg_ChoosingModSDuels then
                    set udg_ModNumber = 3
                    call SetPlayerState(PlayerSlot(0), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(1), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(2), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(3), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(4), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(5), PLAYER_STATE_RESOURCE_GOLD, 200)
                    call SetPlayerState(PlayerSlot(0), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    call SetPlayerState(PlayerSlot(1), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    call SetPlayerState(PlayerSlot(2), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    call SetPlayerState(PlayerSlot(3), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    call SetPlayerState(PlayerSlot(4), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    call SetPlayerState(PlayerSlot(5), PLAYER_STATE_RESOURCE_LUMBER, 0)
                    if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) then
                    	call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD1 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD14 )
                    endif
                    if IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) then
                        call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD3 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD25 )
                    endif
                    if IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
                        call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD5 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD36 )
                    endif
                    if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) then
                    	call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD2 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD14 )
                    endif
                    if IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) then
                        call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD4 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD25 )
                    endif
                    if IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
                        call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_VisionSD6 )
                    	call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSD36 )
                    endif
                    set udg_GoblPassMaxHP[1]=6
                    set udg_GoblPassMaxHP[2]=6
                    set udg_PlayerSectorFight[1] = gg_rct_SoloDuel14
                    set udg_PlayerSectorFight[2] = gg_rct_SoloDuel25
                    set udg_PlayerSectorFight[3] = gg_rct_SoloDuel36
                    set udg_PlayerSectorFight[4] = gg_rct_SoloDuel14
                    set udg_PlayerSectorFight[5] = gg_rct_SoloDuel25
                    set udg_PlayerSectorFight[6] = gg_rct_SoloDuel36
                    set udg_PlayerHomeLocX[1] = 11478
                    set udg_PlayerHomeLocX[2] = 2390
                    set udg_PlayerHomeLocX[3] = -6698
                    set udg_PlayerHomeLocX[4] = 6698
                    set udg_PlayerHomeLocX[5] = -2390
                    set udg_PlayerHomeLocX[6] = -11478
                    set udg_PlayerHomeLocY[1] = -16704
                    set udg_PlayerHomeLocY[2] = -16704
                    set udg_PlayerHomeLocY[3] = -16704
                    set udg_PlayerHomeLocY[4] = -16704
                    set udg_PlayerHomeLocY[5] = -16704
                    set udg_PlayerHomeLocY[6] = -16704
                    call QuestItemSetDescription(udg_ModUnitsRItem2,"Дуэли (одиночные)")
                    if udg_ModNumberUnits==0 then
                        call QuestSetDescription(udg_ModUnitsQuest,"Классические юниты - игроки могут строить юнитов их расы. Одиночные дуэли: Ваши воины напрямую сталкиваются с воинами оппонента.")
                    else
                        if udg_ModNumberUnits==1 then
                            call QuestSetDescription(udg_ModUnitsQuest,"Случайные юниты: игроки имеют случайных юнитов. Одиночные дуэли: Ваши воины напрямую сталкиваются с воинами оппонента.")
                        else
                            call QuestSetDescription(udg_ModUnitsQuest,"Меняющиеся юниты: каждую волну возможные для постройки юниты меняются. Одиночные дуэли: Ваши воины напрямую сталкиваются с воинами оппонента.")
                        endif
                    endif
                    set a=0
                    loop
                        exitwhen a>5
                        if IsPlayerInForce(PlayerSlot(a),udg_PlayingPlayers) then
                            call DisplayTimedTextToPlayer(PlayerSlot(a),0,0,4,"|cffffcc00Дуэли (одиночные)|r")
                            if a<3 then
                                set udg_GoblPassMaxHP[1]=6
                                set udg_Throune[a+1]=CreateUnit(PlayerSlot(a),'H008',udg_PlayerHomeLocX[a+1]+576,-16705,270)
                                call SetUnitInvulnerable(udg_Throune[a+1],true)
                                set udg_ThrouneCaster[a+1]=udg_Throune[a+1]
                                set udg_ThrouneUpgr[a+1]=CreateUnit(PlayerSlot(a),'H01F',udg_PlayerHomeLocX[a+1]+842,-16705, 270)
                                set i = 1
                                loop
                                    exitwhen i>1//udg_ChoosingModWorkersNum
                                    set u=CreateUnit(PlayerSlot(a),'e01B',udg_PlayerHomeLocX[a+1]-300,-16705,270)
                                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                                    set i=i+1
                                endloop
                            else
                                set udg_GoblPassMaxHP[2]=6
                                set udg_Throune[a+1]=CreateUnit(PlayerSlot(a),'H008',udg_PlayerHomeLocX[a+1]-576,-16705,270)
                                call SetUnitInvulnerable(udg_Throune[a+1],true)
                                set udg_ThrouneCaster[a+1]=udg_Throune[a+1]
                                set udg_ThrouneUpgr[a+1]=CreateUnit(PlayerSlot(a),'H01F',udg_PlayerHomeLocX[a+1]-842,-16705, 270)
                                set i = 1
                                loop
                                    exitwhen i>1//udg_ChoosingModWorkersNum
                                    set u=CreateUnit(PlayerSlot(a),'e01B',udg_PlayerHomeLocX[a+1]+300,-16705,270)
                                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                                    set i=i+1
                                endloop
                            endif
                            if pl==PlayerSlot(a) then
                                call SelectUnit(u,true)
                            endif
                        endif
                        set a = a+1
                    endloop
                    call SetCameraPosition(udg_PlayerHomeLocX[p+1],-16705)
                    call TriggerAddAction( gg_trg_Waving, function Trig_Waving_ActionSoloDuels )
                    call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1980, 0.5)
                endif
            endif
        endif
    endif
    if udg_ModNumber>0 then
        call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
        set udg_Wave = 1
        call TimerStart(udg_TimerWave, 60, false, null)
        if not(udg_OnTimerOnStart) then
            call PauseTimer(udg_TimerWave)
            set udg_TimerOffed = true
        endif
        set udg_TimerWaveWindow = CreateTimerDialog(udg_TimerWave)
        call TimerDialogDisplay(udg_TimerWaveWindow, true)
        call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль 1 через:")
        call CreateMultik()
        set f = CreateFogModifierRect(PlayerSlot(0),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false)
        call FogModifierStart(f)
        call TriggerSleepAction(0.1)
        call DestroyFogModifier(f)
        set f = null
    endif
    call DestroyTrigger(gg_trg_ChooseGo)
endfunction

//===========================================================================
function InitTrig_ChooseGo takes nothing returns nothing
    set gg_trg_ChooseGo = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChooseGo, udg_ChoosingMod )
    call TriggerAddAction( gg_trg_ChooseGo, function Trig_ChooseGo_Actions )
endfunction

//===========================================================================
// Trigger: ChooseCreepsGo
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_ChooseCreepsGo_Actions takes nothing returns nothing
    local fogmodifier f
    local integer a = 0
    local integer i = 0
    local player pl = GetLocalPlayer()
    local integer p = GetPlayerSlotId(pl)
    local unit u
    if GetClickedButton() == udg_ChoosingModCreepsTrue then
        set udg_EnableCreeps=true
        call Trig_CreepTipesWaves()
        set udg_NextCreepsWave = GetRandomInt(1,udg_CreepsWaveNum)
    endif
    if udg_ModNumber==0 then
        loop
            exitwhen a>5
            call SetPlayerState(PlayerSlot(a), PLAYER_STATE_RESOURCE_GOLD, 200)
            call SetPlayerState(PlayerSlot(a), PLAYER_STATE_RESOURCE_LUMBER, 0)
            call DisplayTimedTextToPlayer(PlayerSlot(a),0,0,4,"|cffffcc00Арены (одиночные)|r")
            set a = a+1
        endloop
        if udg_EnableCreeps then
            if udg_ModNumberUnits==2 then
                call QuestSetDescription(udg_ModUnitsQuest,"Меняющиеся юниты: каждую волну возможные для постройки юниты меняются. Одиночные арены: на всех игроков нападают одинаковые воины (обе стороны могут отбить волну).")
            else
                if udg_ModNumberUnits==1 then
                    call QuestSetDescription(udg_ModUnitsQuest,"Случайные юниты: игроки имеют случайных юнитов. Одиночные арены: на всех игроков нападают одинаковые воины (обе стороны могут отбить волну).")
                else
                    call QuestSetDescription(udg_ModUnitsQuest,"Классические юниты - игроки могут строить юнитов их расы. Одиночные арены: на всех игроков нападают одинаковые воины (обе стороны могут отбить волну).")
                endif
            endif
        else
            if udg_ModNumberUnits==2 then
                call QuestSetDescription(udg_ModUnitsQuest,"Меняющиеся юниты: каждую волну возможные для постройки юниты меняются. Одиночные арены: на Вас нападают воины, аналогичные построенным противником (обе стороны могут отбить волну).")
            else
                if udg_ModNumberUnits==1 then
                    call QuestSetDescription(udg_ModUnitsQuest,"Случайные юниты: игроки имеют случайных юнитов. Одиночные арены: на Вас нападают воины, аналогичные построенным противником (обе стороны могут отбить волну).")
                endif
            endif
        endif
        set udg_PlayerHomeLocX[1] = 8192
        set udg_PlayerHomeLocX[2] = 8192
        set udg_PlayerHomeLocX[3] = 8192
        set udg_PlayerHomeLocX[4] = -8192
        set udg_PlayerHomeLocX[5] = -8192
        set udg_PlayerHomeLocX[6] = -8192
        set udg_PlayerHomeLocY[1] = 3682
        set udg_PlayerHomeLocY[2] = -3548
        set udg_PlayerHomeLocY[3] = -10714
        set udg_PlayerHomeLocY[4] = 3682
        set udg_PlayerHomeLocY[5] = -3548
        set udg_PlayerHomeLocY[6] = -10714
        if IsPlayerInForce(PlayerSlot(0),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_VisionS1 )
            call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo4 )
        endif
        if IsPlayerInForce(PlayerSlot(1),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_VisionS2 )
            call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo5 )
        endif
        if IsPlayerInForce(PlayerSlot(2),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_VisionS3 )
            call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo6 )
        endif
        if IsPlayerInForce(PlayerSlot(3),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_VisionS4 )
            call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo1 )
        endif
        if IsPlayerInForce(PlayerSlot(4),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_VisionS5 )
            call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo2 )
        endif
        if IsPlayerInForce(PlayerSlot(5),udg_PlayingPlayers) then
            call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_VisionS6 )
            call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_FightSecVisionSolo3 )
        endif
        set a = 0
        loop
            exitwhen a>5
            if IsPlayerInForce(PlayerSlot(a),udg_PlayingPlayers) then
                set udg_Throune[a+1]=CreateUnit(PlayerSlot(a),'H008',udg_PlayerHomeLocX[a+1],udg_PlayerHomeLocY[a+1]+32, 270)
                set udg_ThrouneCaster[a+1]=udg_Throune[a+1]
                set udg_ThrouneUpgr[a+1]=CreateUnit(PlayerSlot(a),'H01F',udg_PlayerHomeLocX[a+1],udg_PlayerHomeLocY[a+1]-208, 270)
                set i = 1
                loop
                    exitwhen i>1//udg_ChoosingModWorkersNum
                    set u=CreateUnit(PlayerSlot(a),'e01B',udg_PlayerHomeLocX[a+1],udg_PlayerHomeLocY[a+1]+496,270)
                    call UnitModifySkillPoints(u,udg_ChoosingModWorkersNum)
                    if pl==PlayerSlot(a) then
                        call SelectUnit(u,true)
                    endif
                    set i=i+1
                endloop
                if udg_EnableCreeps then
                    call CreateCreepsTowersSolo(a+1)
                endif
            endif
            set a=a+1
        endloop
        call SetCameraPosition(udg_PlayerHomeLocX[p+1],udg_PlayerHomeLocY[p+1])
        set udg_PlayerSectorFight[1] = gg_rct_Fight1
        set udg_PlayerSectorFight[2] = gg_rct_Fight2
        set udg_PlayerSectorFight[3] = gg_rct_Fight3
        set udg_PlayerSectorFight[4] = gg_rct_Fight4
        set udg_PlayerSectorFight[5] = gg_rct_Fight5
        set udg_PlayerSectorFight[6] = gg_rct_Fight6
        call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1980, 0.25)
        call TriggerAddAction( gg_trg_Waving, function Trig_Waving_ActionsSingle )
        set udg_GoblPassMaxHP[1]=6
        set udg_GoblPassMaxHP[2]=6
    endif
    
    call CreateFogModifierRectBJ( true, PlayerSlot(0), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call CreateFogModifierRectBJ( true, PlayerSlot(1), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call CreateFogModifierRectBJ( true, PlayerSlot(2), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call CreateFogModifierRectBJ( true, PlayerSlot(3), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call CreateFogModifierRectBJ( true, PlayerSlot(4), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call CreateFogModifierRectBJ( true, PlayerSlot(5), FOG_OF_WAR_VISIBLE, gg_rct_DemonstrUnits )
    call DestroyTrigger(gg_trg_ChooseCreepsGo)
    set udg_Wave = 1
    call TimerStart(udg_TimerWave, 60, false, null)
    if not(udg_OnTimerOnStart) then
        call PauseTimer(udg_TimerWave)
        set udg_TimerOffed = true
    endif
    set udg_TimerWaveWindow = CreateTimerDialog(udg_TimerWave)
    call TimerDialogDisplay(udg_TimerWaveWindow, true)
    call TimerDialogSetTitle(udg_TimerWaveWindow, "Дуэль 1 через:")
    call CreateMultik()
    set f = CreateFogModifierRect(PlayerSlot(0),FOG_OF_WAR_VISIBLE,bj_mapInitialPlayableArea,true,false)
    call FogModifierStart(f)
    call TriggerSleepAction(0.1)
    call DestroyFogModifier(f)
    set f = null
endfunction

//===========================================================================
function InitTrig_ChooseCreepsGo takes nothing returns nothing
    set gg_trg_ChooseCreepsGo = CreateTrigger(  )
    call TriggerRegisterDialogEvent( gg_trg_ChooseCreepsGo, udg_ChoosingModCreeps )
    call TriggerAddAction( gg_trg_ChooseCreepsGo, function Trig_ChooseCreepsGo_Actions )
endfunction

//===========================================================================
// Trigger: CameraFix
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_CameraFix_Actions takes nothing returns nothing
    local string s = SubString(GetEventPlayerChatString(), 2, 3)
    if (s=="0"or s=="1"or s=="2"or s=="3"or s=="4"or s=="5"or s=="6"or s=="7"or s=="8"or s=="9") and GetLocalPlayer() == GetTriggerPlayer() then
        call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, 1580+(400*S2R(s)), 0.5)
        call SetCameraField(CAMERA_FIELD_FARZ, 9900, 0.5)
    endif
endfunction

//===========================================================================
function InitTrig_CameraFix takes nothing returns nothing
    set gg_trg_CameraFix = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(0), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(1), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(2), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(3), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(4), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(5), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(6), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(7), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(8), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(9), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(10), "-z", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_CameraFix, Player(11), "-z", false )
    call TriggerAddAction( gg_trg_CameraFix, function Trig_CameraFix_Actions )
endfunction

//===========================================================================
// Trigger: PlayerLeaves
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
function Trig_PlayerLeaves_Actions takes nothing returns nothing
    local player p = GetTriggerPlayer()
    call DisplayTimedTextToPlayer(PlayerSlot(0),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    call DisplayTimedTextToPlayer(PlayerSlot(1),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    call DisplayTimedTextToPlayer(PlayerSlot(2),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    call DisplayTimedTextToPlayer(PlayerSlot(3),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    call DisplayTimedTextToPlayer(PlayerSlot(4),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    call DisplayTimedTextToPlayer(PlayerSlot(5),0,0,8,"Игрок "+GetPlayerName(p)+" вышел из игры")
    if GetPlayerSlotId(p)<3 then
        call SetPlayerAllianceStateBJ(p,Player(0),bj_ALLIANCE_ALLIED_ADVUNITS)
        call SetPlayerAllianceStateBJ(p,Player(1),bj_ALLIANCE_ALLIED_ADVUNITS)
        call SetPlayerAllianceStateBJ(p,Player(2),bj_ALLIANCE_ALLIED_ADVUNITS)
    else
        call SetPlayerAllianceStateBJ(p,Player(3),bj_ALLIANCE_ALLIED_ADVUNITS)
        call SetPlayerAllianceStateBJ(p,Player(4),bj_ALLIANCE_ALLIED_ADVUNITS)
        call SetPlayerAllianceStateBJ(p,Player(5),bj_ALLIANCE_ALLIED_ADVUNITS)
    endif
endfunction

//===========================================================================
function InitTrig_PlayerLeaves takes nothing returns nothing
    set gg_trg_PlayerLeaves = CreateTrigger(  )
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(0),EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(1),EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(2),EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(3),EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(4),EVENT_PLAYER_LEAVE)
    call TriggerRegisterPlayerEvent(gg_trg_PlayerLeaves,Player(5),EVENT_PLAYER_LEAVE)
    call TriggerAddAction( gg_trg_PlayerLeaves, function Trig_PlayerLeaves_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Duel1(  )
    call InitTrig_Duel2(  )
    call InitTrig_Single1(  )
    call InitTrig_Single2(  )
    call InitTrig_Single3(  )
    call InitTrig_Single4(  )
    call InitTrig_Single5(  )
    call InitTrig_Single6(  )
    call InitTrig_Team1(  )
    call InitTrig_Team2(  )
    call InitTrig_SoloDuel1(  )
    call InitTrig_SoloDuel2(  )
    call InitTrig_SoloDuel3(  )
    call InitTrig_SoloDuel4(  )
    call InitTrig_SoloDuel5(  )
    call InitTrig_SoloDuel6(  )
    call InitTrig_AddTriggersAll(  )
    call InitTrig_Waving(  )
    call InitTrig_ThroneAttacked(  )
    call InitTrig_UnitDies(  )
    call InitTrig_WarriorReturnToFightSingle(  )
    call InitTrig_WarriorReturnToFightTeam(  )
    call InitTrig_WarriorReturnToFightTD(  )
    call InitTrig_WarriorReturnToFightSD(  )
    call InitTrig_BebugSingle2(  )
    call InitTrig_TimerWinExp(  )
    call InitTrig_StartConstr(  )
    call InitTrig_EndConstr(  )
    call InitTrig_DiedConstr(  )
    call InitTrig_StartUpgr(  )
    call InitTrig_StopUpgr(  )
    call InitTrig_EndUpgr(  )
    call InitTrig_initvars(  )
    call InitTrig_UEPMA(  )
    call InitTrig_UnitAttackedMove(  )
    call InitTrig_UnitAttacked(  )
    call InitTrig_CreatedSummons(  )
    call InitTrig_UnitCastingSpell(  )
    call InitTrig_UnitAboutToCast(  )
    call InitTrig_UnitLosesItem(  )
    call InitTrig_NeutralSelect(  )
    call InitTrig_NeutralDeselect(  )
    call InitTrig_PeonCarryesAnItem(  )
    call InitTrig_FireLordDebuffDeath(  )
    call InitTrig_ChumZomb1(  )
    call InitTrig_Ghouls(  )
    call InitTrig_golems(  )
    call InitTrig_GolemiPloti(  )
    call InitTrig_Gommunkuls(  )
    call InitTrig_SuperGolemDeath(  )
    call InitTrig_SuperGolemEffect(  )
    call InitTrig_MageNecro2(  )
    call InitTrig_FrostKnight(  )
    call InitTrig_KingOfTheDeath(  )
    call InitTrig_UndeadPass2(  )
    call InitTrig_KozlikEnd(  )
    call InitTrig_jumping1(  )
    call InitTrig_jumping2(  )
    call InitTrig_ElfWarrior(  )
    call InitTrig_Tree(  )
    call InitTrig_AttackTree(  )
    call InitTrig_WarriorTreeOFF(  )
    call InitTrig_DrevniDreven(  )
    call InitTrig_ElfPassivkaInviz(  )
    call InitTrig_GruntSpell(  )
    call InitTrig_poison_tic(  )
    call InitTrig_caniball_start(  )
    call InitTrig_Ciclop_rezist_end(  )
    call InitTrig_LightShaman(  )
    call InitTrig_BankaOrc(  )
    call InitTrig_WolfEatStart(  )
    call InitTrig_WolfEat(  )
    call InitTrig_OgreMagi(  )
    call InitTrig_Kabaaan(  )
    call InitTrig_Kodo(  )
    call InitTrig_OrcPassivka(  )
    call InitTrig_ThrowerWarriors(  )
    call InitTrig_ThrowerFly(  )
    call InitTrig_arhangels(  )
    call InitTrig_Serafim(  )
    call InitTrig_FootArch(  )
    call InitTrig_KnightGo(  )
    call InitTrig_SHorses(  )
    call InitTrig_Tseliteli(  )
    call InitTrig_Peasant(  )
    call InitTrig_HumPalaLoop(  )
    call InitTrig_HumPalaHeal(  )
    call InitTrig_HumPassivka(  )
    call InitTrig_MargolSpell(  )
    call InitTrig_MargolLoop(  )
    call InitTrig_NagaVoin(  )
    call InitTrig_NagaMirmidon(  )
    call InitTrig_MargolAttSp(  )
    call InitTrig_MarkyraBigEnd(  )
    call InitTrig_NagaZaklLoop(  )
    call InitTrig_Koatles(  )
    call InitTrig_TornadoDmg(  )
    call InitTrig_TornadoPrilivSil(  )
    call InitTrig_OceanAvatarTar(  )
    call InitTrig_OceanAvatarLoop(  )
    call InitTrig_NagaCannibalismPass2(  )
    call InitTrig_HeroBankaLoop(  )
    call InitTrig_HeroLoop(  )
    call InitTrig_FireLordDebuff(  )
    call InitTrig_FellHound(  )
    call InitTrig_InfernalsHP(  )
    call InitTrig_InfernalsDMG(  )
    call InitTrig_Vlastiteli(  )
    call InitTrig_Dooms(  )
    call InitTrig_DoomTargets(  )
    call InitTrig_FellHoundBig(  )
    call InitTrig_VoidWalkerBig(  )
    call InitTrig_VoidWalkerTinyDies(  )
    call InitTrig_VoidWalkerShade(  )
    call InitTrig_DemonShield(  )
    call InitTrig_EfreetStart(  )
    call InitTrig_EfreetSpell(  )
    call InitTrig_SuccubDeath(  )
    call InitTrig_SuccubKnife(  )
    call InitTrig_SuccubKnifeLoop(  )
    call InitTrig_InfernalCannon(  )
    call InitTrig_DemonPassivka(  )
    call InitTrig_DemonPassivkaGatesOpen(  )
    call InitTrig_Dmg_taken(  )
    call InitTrig_EntUp(  )
    call InitTrig_ElfUp(  )
    call InitTrig_DummyWaveCaster(  )
    call InitTrig_TeleportStuff(  )
    call InitTrig_RockSpell(  )
    call InitTrig_UndeadSpellMana(  )
    call InitTrig_EssOfBetr(  )
    call InitTrig_DemonSlow(  )
    call InitTrig_DemonSpellBc(  )
    call InitTrig_KodoUpgrd(  )
    call InitTrig_KodoUpgrdDemon(  )
    call InitTrig_SpellbookUpgrd(  )
    call InitTrig_GoblZep(  )
    call InitTrig_PassChose(  )
    call InitTrig_PassChoseRe(  )
    call InitTrig_TipsAndTricks(  )
    call InitTrig_TipsOff(  )
    call InitTrig_TipsOn(  )
    call InitTrig_TimeOff(  )
    call InitTrig_TimeOn(  )
    call InitTrig_DmgOff(  )
    call InitTrig_DmgOn(  )
    call InitTrig_Clear(  )
    call InitTrig_Tip(  )
    call InitTrig_Check(  )
    call InitTrig_TestVersion(  )
    call InitTrig_Sur(  )
    call InitTrig_Supply(  )
    call InitTrig_Init(  )
    call InitTrig_qwests1(  )
    call InitTrig_qwests2(  )
    call InitTrig_AIdetection(  )
    call InitTrig_StartingCleaning(  )
    call InitTrig_ChoosingMod(  )
    call InitTrig_ChoosingModTimer(  )
    call InitTrig_ChooseWorkersMod(  )
    call InitTrig_ChooseRacismMod(  )
    call InitTrig_ChooseUnitsMod(  )
    call InitTrig_ChooseGo(  )
    call InitTrig_ChooseCreepsGo(  )
    call InitTrig_CameraFix(  )
    call InitTrig_PlayerLeaves(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_initvars )
    call ConditionalTriggerExecute( gg_trg_OrcPassivka )
    call ConditionalTriggerExecute( gg_trg_DemonPassivka )
    call ConditionalTriggerExecute( gg_trg_DemonPassivkaGatesOpen )
    call ConditionalTriggerExecute( gg_trg_Init )
    call ConditionalTriggerExecute( gg_trg_qwests1 )
    call ConditionalTriggerExecute( gg_trg_qwests2 )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(0), true )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(1), true )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(2), true )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(3), true )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call ForcePlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(4), true )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call ForcePlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(5), true )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: Правые
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerTeam( Player(2), 0 )

    // Force: Левые
    call SetPlayerTeam( Player(3), 1 )
    call SetPlayerTeam( Player(4), 1 )
    call SetPlayerTeam( Player(5), 1 )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 1 )
    call SetStartLocPrio( 0, 0, 1, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 1, 2 )
    call SetStartLocPrio( 1, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 1, 2, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 1 )
    call SetStartLocPrio( 2, 0, 1, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 3, 1 )
    call SetStartLocPrio( 3, 0, 4, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 2 )
    call SetStartLocPrio( 4, 0, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 1, 5, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 5, 1 )
    call SetStartLocPrio( 5, 0, 4, MAP_LOC_PRIO_HIGH )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -15488.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -20224.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 15488.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 11520.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -15488.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 11520.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 15488.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -20224.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call SetTerrainFogEx( 0, 80000.0, 90000.0, 0.000, 1.000, 1.000, 1.000 )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "SunkenRuinsDay" )
    call SetAmbientNightSound( "SunkenRuinsNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_003" )
    call SetPlayers( 6 )
    call SetTeams( 6 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, 8256.0, 3584.0 )
    call DefineStartLocation( 1, 8192.0, -3520.0 )
    call DefineStartLocation( 2, 8192.0, -10688.0 )
    call DefineStartLocation( 3, -8192.0, 3840.0 )
    call DefineStartLocation( 4, -8192.0, -3392.0 )
    call DefineStartLocation( 5, -8256.0, -10624.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

